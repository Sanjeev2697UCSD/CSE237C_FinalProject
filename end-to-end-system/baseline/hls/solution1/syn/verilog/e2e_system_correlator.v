// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module e2e_system_correlator (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        input_V_address0,
        input_V_ce0,
        input_V_q0
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_pp2_stage0 = 37'd34359738368;
parameter    ap_ST_fsm_state61 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
output  [7:0] input_V_address0;
output   input_V_ce0;
input  [35:0] input_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_r_ce0;
reg output_r_we0;
reg input_V_ce0;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] codebook_V_0_address0;
reg    codebook_V_0_ce0;
wire   [1:0] codebook_V_0_q0;
wire   [5:0] codebook_V_1_address0;
reg    codebook_V_1_ce0;
wire   [1:0] codebook_V_1_q0;
wire   [5:0] codebook_V_2_address0;
reg    codebook_V_2_ce0;
wire   [1:0] codebook_V_2_q0;
wire   [5:0] codebook_V_3_address0;
reg    codebook_V_3_ce0;
wire   [1:0] codebook_V_3_q0;
wire   [5:0] codebook_V_4_address0;
reg    codebook_V_4_ce0;
wire   [1:0] codebook_V_4_q0;
wire   [5:0] codebook_V_5_address0;
reg    codebook_V_5_ce0;
wire   [1:0] codebook_V_5_q0;
wire   [5:0] codebook_V_6_address0;
reg    codebook_V_6_ce0;
wire   [1:0] codebook_V_6_q0;
wire   [5:0] codebook_V_7_address0;
reg    codebook_V_7_ce0;
wire   [1:0] codebook_V_7_q0;
wire   [5:0] codebook_V_8_address0;
reg    codebook_V_8_ce0;
wire   [1:0] codebook_V_8_q0;
wire   [5:0] codebook_V_9_address0;
reg    codebook_V_9_ce0;
wire   [1:0] codebook_V_9_q0;
wire   [5:0] codebook_V_10_address0;
reg    codebook_V_10_ce0;
wire   [1:0] codebook_V_10_q0;
wire   [5:0] codebook_V_11_address0;
reg    codebook_V_11_ce0;
wire   [1:0] codebook_V_11_q0;
wire   [5:0] codebook_V_12_address0;
reg    codebook_V_12_ce0;
wire   [1:0] codebook_V_12_q0;
wire   [5:0] codebook_V_13_address0;
reg    codebook_V_13_ce0;
wire   [1:0] codebook_V_13_q0;
wire   [5:0] codebook_V_14_address0;
reg    codebook_V_14_ce0;
wire   [1:0] codebook_V_14_q0;
wire   [5:0] codebook_V_15_address0;
reg    codebook_V_15_ce0;
wire   [1:0] codebook_V_15_q0;
wire   [5:0] codebook_V_16_address0;
reg    codebook_V_16_ce0;
wire   [1:0] codebook_V_16_q0;
wire   [5:0] codebook_V_17_address0;
reg    codebook_V_17_ce0;
wire   [1:0] codebook_V_17_q0;
wire   [5:0] codebook_V_18_address0;
reg    codebook_V_18_ce0;
wire   [1:0] codebook_V_18_q0;
wire   [5:0] codebook_V_19_address0;
reg    codebook_V_19_ce0;
wire   [1:0] codebook_V_19_q0;
wire   [5:0] codebook_V_20_address0;
reg    codebook_V_20_ce0;
wire   [1:0] codebook_V_20_q0;
wire   [5:0] codebook_V_21_address0;
reg    codebook_V_21_ce0;
wire   [1:0] codebook_V_21_q0;
wire   [5:0] codebook_V_22_address0;
reg    codebook_V_22_ce0;
wire   [1:0] codebook_V_22_q0;
wire   [5:0] codebook_V_23_address0;
reg    codebook_V_23_ce0;
wire   [1:0] codebook_V_23_q0;
wire   [5:0] codebook_V_24_address0;
reg    codebook_V_24_ce0;
wire   [1:0] codebook_V_24_q0;
wire   [5:0] codebook_V_25_address0;
reg    codebook_V_25_ce0;
wire   [1:0] codebook_V_25_q0;
wire   [5:0] codebook_V_26_address0;
reg    codebook_V_26_ce0;
wire   [1:0] codebook_V_26_q0;
wire   [5:0] codebook_V_27_address0;
reg    codebook_V_27_ce0;
wire   [1:0] codebook_V_27_q0;
wire   [5:0] codebook_V_28_address0;
reg    codebook_V_28_ce0;
wire   [1:0] codebook_V_28_q0;
wire   [5:0] codebook_V_29_address0;
reg    codebook_V_29_ce0;
wire   [1:0] codebook_V_29_q0;
wire   [5:0] codebook_V_30_address0;
reg    codebook_V_30_ce0;
wire   [1:0] codebook_V_30_q0;
reg   [5:0] i_2_reg_999;
wire   [5:0] add_ln93_fu_1016_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln96_fu_1033_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [7:0] add_ln101_fu_1050_p2;
reg   [7:0] add_ln101_reg_2739;
wire    ap_CS_fsm_state6;
wire   [35:0] temp_input_V_q1;
reg  signed [35:0] temp_input_V_load_reg_2744;
wire    ap_CS_fsm_state7;
wire   [35:0] temp_input_V_q0;
reg  signed [35:0] temp_input_V_load_1_reg_2750;
reg  signed [35:0] temp_input_V_load_2_reg_2756;
wire    ap_CS_fsm_state8;
reg  signed [35:0] temp_input_V_load_3_reg_2762;
reg  signed [35:0] temp_input_V_load_4_reg_2768;
wire    ap_CS_fsm_state9;
reg  signed [35:0] temp_input_V_load_5_reg_2774;
reg  signed [35:0] temp_input_V_load_6_reg_2780;
wire    ap_CS_fsm_state10;
reg  signed [35:0] temp_input_V_load_7_reg_2786;
reg  signed [35:0] temp_input_V_load_8_reg_2792;
wire    ap_CS_fsm_state11;
reg  signed [35:0] temp_input_V_load_9_reg_2798;
reg  signed [35:0] temp_input_V_load_10_reg_2804;
wire    ap_CS_fsm_state12;
reg  signed [35:0] temp_input_V_load_11_reg_2810;
reg  signed [35:0] temp_input_V_load_12_reg_2816;
wire    ap_CS_fsm_state13;
reg  signed [35:0] temp_input_V_load_13_reg_2822;
reg  signed [35:0] temp_input_V_load_14_reg_2828;
wire    ap_CS_fsm_state14;
reg  signed [35:0] temp_input_V_load_15_reg_2834;
reg  signed [35:0] temp_input_V_load_16_reg_2840;
wire    ap_CS_fsm_state15;
reg  signed [35:0] temp_input_V_load_17_reg_2846;
reg  signed [35:0] temp_input_V_load_18_reg_2852;
wire    ap_CS_fsm_state16;
reg  signed [35:0] temp_input_V_load_19_reg_2858;
reg  signed [35:0] temp_input_V_load_20_reg_2864;
wire    ap_CS_fsm_state17;
reg  signed [35:0] temp_input_V_load_21_reg_2870;
reg  signed [35:0] temp_input_V_load_22_reg_2876;
wire    ap_CS_fsm_state18;
reg  signed [35:0] temp_input_V_load_23_reg_2882;
reg  signed [35:0] temp_input_V_load_24_reg_2888;
wire    ap_CS_fsm_state19;
reg  signed [35:0] temp_input_V_load_25_reg_2894;
reg  signed [35:0] temp_input_V_load_26_reg_2905;
wire    ap_CS_fsm_state20;
reg  signed [35:0] temp_input_V_load_27_reg_2911;
reg  signed [35:0] input_V_load_reg_2917;
reg  signed [35:0] temp_input_V_load_28_reg_2922;
wire    ap_CS_fsm_state21;
reg  signed [35:0] temp_input_V_load_29_reg_2928;
wire  signed [37:0] sext_ln1116_fu_1061_p1;
reg  signed [37:0] sext_ln1116_reg_2934;
wire    ap_CS_fsm_state35;
wire  signed [37:0] sext_ln1116_1_fu_1064_p1;
reg  signed [37:0] sext_ln1116_1_reg_2939;
wire  signed [37:0] sext_ln1116_2_fu_1067_p1;
reg  signed [37:0] sext_ln1116_2_reg_2944;
wire  signed [37:0] sext_ln1116_3_fu_1070_p1;
reg  signed [37:0] sext_ln1116_3_reg_2949;
wire  signed [37:0] sext_ln1116_4_fu_1073_p1;
reg  signed [37:0] sext_ln1116_4_reg_2954;
wire  signed [37:0] sext_ln1116_5_fu_1076_p1;
reg  signed [37:0] sext_ln1116_5_reg_2959;
wire  signed [37:0] sext_ln1116_6_fu_1079_p1;
reg  signed [37:0] sext_ln1116_6_reg_2964;
wire  signed [37:0] sext_ln1116_7_fu_1082_p1;
reg  signed [37:0] sext_ln1116_7_reg_2969;
wire  signed [37:0] sext_ln1116_8_fu_1085_p1;
reg  signed [37:0] sext_ln1116_8_reg_2974;
wire  signed [37:0] sext_ln1116_9_fu_1088_p1;
reg  signed [37:0] sext_ln1116_9_reg_2979;
wire  signed [37:0] sext_ln1116_10_fu_1091_p1;
reg  signed [37:0] sext_ln1116_10_reg_2984;
wire  signed [37:0] sext_ln1116_11_fu_1094_p1;
reg  signed [37:0] sext_ln1116_11_reg_2989;
wire  signed [37:0] sext_ln1116_12_fu_1097_p1;
reg  signed [37:0] sext_ln1116_12_reg_2994;
wire  signed [37:0] sext_ln1116_13_fu_1100_p1;
reg  signed [37:0] sext_ln1116_13_reg_2999;
wire  signed [37:0] sext_ln1116_14_fu_1103_p1;
reg  signed [37:0] sext_ln1116_14_reg_3004;
wire  signed [37:0] sext_ln1116_15_fu_1106_p1;
reg  signed [37:0] sext_ln1116_15_reg_3009;
wire  signed [37:0] sext_ln1116_16_fu_1109_p1;
reg  signed [37:0] sext_ln1116_16_reg_3014;
wire  signed [37:0] sext_ln1116_17_fu_1112_p1;
reg  signed [37:0] sext_ln1116_17_reg_3019;
wire  signed [37:0] sext_ln1116_18_fu_1115_p1;
reg  signed [37:0] sext_ln1116_18_reg_3024;
wire  signed [37:0] sext_ln1116_19_fu_1118_p1;
reg  signed [37:0] sext_ln1116_19_reg_3029;
wire  signed [37:0] sext_ln1116_20_fu_1121_p1;
reg  signed [37:0] sext_ln1116_20_reg_3034;
wire  signed [37:0] sext_ln1116_21_fu_1124_p1;
reg  signed [37:0] sext_ln1116_21_reg_3039;
wire  signed [37:0] sext_ln1116_22_fu_1127_p1;
reg  signed [37:0] sext_ln1116_22_reg_3044;
wire  signed [37:0] sext_ln1116_23_fu_1130_p1;
reg  signed [37:0] sext_ln1116_23_reg_3049;
wire  signed [37:0] sext_ln1116_24_fu_1133_p1;
reg  signed [37:0] sext_ln1116_24_reg_3054;
wire  signed [37:0] sext_ln1116_25_fu_1136_p1;
reg  signed [37:0] sext_ln1116_25_reg_3059;
wire  signed [37:0] sext_ln1116_26_fu_1139_p1;
reg  signed [37:0] sext_ln1116_26_reg_3064;
wire  signed [37:0] sext_ln1116_27_fu_1142_p1;
reg  signed [37:0] sext_ln1116_27_reg_3069;
wire  signed [37:0] sext_ln1116_28_fu_1145_p1;
reg  signed [37:0] sext_ln1116_28_reg_3074;
wire  signed [37:0] sext_ln1116_29_fu_1148_p1;
reg  signed [37:0] sext_ln1116_29_reg_3079;
wire  signed [37:0] sext_ln1116_30_fu_1151_p1;
reg  signed [37:0] sext_ln1116_30_reg_3084;
wire   [0:0] icmp_ln113_fu_1154_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state36_pp2_stage0_iter0;
wire    ap_block_state37_pp2_stage0_iter1;
wire    ap_block_state38_pp2_stage0_iter2;
wire    ap_block_state39_pp2_stage0_iter3;
wire    ap_block_state40_pp2_stage0_iter4;
wire    ap_block_state41_pp2_stage0_iter5;
wire    ap_block_state42_pp2_stage0_iter6;
wire    ap_block_state43_pp2_stage0_iter7;
wire    ap_block_state44_pp2_stage0_iter8;
wire    ap_block_state45_pp2_stage0_iter9;
wire    ap_block_state46_pp2_stage0_iter10;
wire    ap_block_state47_pp2_stage0_iter11;
wire    ap_block_state48_pp2_stage0_iter12;
wire    ap_block_state49_pp2_stage0_iter13;
wire    ap_block_state50_pp2_stage0_iter14;
wire    ap_block_state51_pp2_stage0_iter15;
wire    ap_block_state52_pp2_stage0_iter16;
wire    ap_block_state53_pp2_stage0_iter17;
wire    ap_block_state54_pp2_stage0_iter18;
wire    ap_block_state55_pp2_stage0_iter19;
wire    ap_block_state56_pp2_stage0_iter20;
wire    ap_block_state57_pp2_stage0_iter21;
wire    ap_block_state58_pp2_stage0_iter22;
wire    ap_block_state59_pp2_stage0_iter23;
wire    ap_block_state60_pp2_stage0_iter24;
wire    ap_block_pp2_stage0_11001;
wire   [5:0] add_ln113_fu_1160_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] i_2_cast_fu_1166_p1;
reg   [63:0] i_2_cast_reg_3098;
reg   [63:0] i_2_cast_reg_3098_pp2_iter1_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter2_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter3_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter4_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter5_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter6_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter7_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter8_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter9_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter10_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter11_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter12_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter13_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter14_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter15_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter16_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter17_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter18_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter19_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter20_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter21_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter22_reg;
reg   [63:0] i_2_cast_reg_3098_pp2_iter23_reg;
reg  signed [1:0] codebook_V_0_load_reg_3147;
reg  signed [1:0] codebook_V_1_load_reg_3152;
reg  signed [1:0] codebook_V_2_load_reg_3157;
reg  signed [1:0] codebook_V_3_load_reg_3187;
reg  signed [1:0] codebook_V_4_load_reg_3192;
wire   [37:0] grp_fu_1184_p2;
reg   [37:0] mul_ln1118_1_reg_3207;
reg   [32:0] tmp_s_reg_3212;
wire   [37:0] grp_fu_1192_p2;
reg   [37:0] mul_ln1118_2_reg_3217;
reg  signed [1:0] codebook_V_5_load_reg_3232;
reg  signed [1:0] codebook_V_6_load_reg_3237;
wire   [37:0] grp_fu_1210_p2;
reg   [37:0] mul_ln1118_3_reg_3252;
reg   [34:0] tmp_41_reg_3257;
wire   [37:0] grp_fu_1218_p2;
reg   [37:0] mul_ln1118_4_reg_3262;
reg  signed [1:0] codebook_V_7_load_reg_3277;
reg  signed [1:0] codebook_V_8_load_reg_3282;
wire   [37:0] grp_fu_1287_p2;
reg   [37:0] mul_ln1118_5_reg_3297;
reg   [35:0] tmp_4_reg_3302;
wire   [37:0] grp_fu_1295_p2;
reg   [37:0] mul_ln1118_6_reg_3307;
reg  signed [1:0] codebook_V_9_load_reg_3322;
reg  signed [1:0] codebook_V_10_load_reg_3327;
wire   [37:0] grp_fu_1360_p2;
reg   [37:0] mul_ln1118_7_reg_3342;
reg   [35:0] tmp_6_reg_3347;
wire   [37:0] grp_fu_1368_p2;
reg   [37:0] mul_ln1118_8_reg_3352;
reg  signed [1:0] codebook_V_11_load_reg_3367;
reg  signed [1:0] codebook_V_12_load_reg_3372;
wire   [37:0] grp_fu_1429_p2;
reg   [37:0] mul_ln1118_9_reg_3387;
reg   [35:0] tmp_8_reg_3392;
wire   [37:0] grp_fu_1437_p2;
reg   [37:0] mul_ln1118_10_reg_3397;
reg  signed [1:0] codebook_V_13_load_reg_3412;
reg  signed [1:0] codebook_V_14_load_reg_3417;
wire   [37:0] grp_fu_1498_p2;
reg   [37:0] mul_ln1118_11_reg_3432;
reg   [35:0] tmp_10_reg_3437;
wire   [37:0] grp_fu_1506_p2;
reg   [37:0] mul_ln1118_12_reg_3442;
reg  signed [1:0] codebook_V_15_load_reg_3457;
reg  signed [1:0] codebook_V_16_load_reg_3462;
wire   [37:0] grp_fu_1567_p2;
reg   [37:0] mul_ln1118_13_reg_3477;
reg   [35:0] tmp_12_reg_3482;
wire   [37:0] grp_fu_1575_p2;
reg   [37:0] mul_ln1118_14_reg_3487;
reg  signed [1:0] codebook_V_17_load_reg_3502;
reg  signed [1:0] codebook_V_18_load_reg_3507;
wire   [37:0] grp_fu_1636_p2;
reg   [37:0] mul_ln1118_15_reg_3522;
reg   [35:0] tmp_14_reg_3527;
wire   [37:0] grp_fu_1644_p2;
reg   [37:0] mul_ln1118_16_reg_3532;
reg  signed [1:0] codebook_V_19_load_reg_3547;
reg  signed [1:0] codebook_V_20_load_reg_3552;
wire   [37:0] grp_fu_1705_p2;
reg   [37:0] mul_ln1118_17_reg_3567;
reg   [35:0] tmp_16_reg_3572;
wire   [37:0] grp_fu_1713_p2;
reg   [37:0] mul_ln1118_18_reg_3577;
reg  signed [1:0] codebook_V_21_load_reg_3592;
reg  signed [1:0] codebook_V_22_load_reg_3597;
wire   [37:0] grp_fu_1774_p2;
reg   [37:0] mul_ln1118_19_reg_3612;
reg   [35:0] tmp_18_reg_3617;
wire   [37:0] grp_fu_1782_p2;
reg   [37:0] mul_ln1118_20_reg_3622;
reg  signed [1:0] codebook_V_23_load_reg_3637;
reg  signed [1:0] codebook_V_24_load_reg_3642;
wire   [37:0] grp_fu_1843_p2;
reg   [37:0] mul_ln1118_21_reg_3657;
reg   [35:0] tmp_20_reg_3662;
wire   [37:0] grp_fu_1851_p2;
reg   [37:0] mul_ln1118_22_reg_3667;
reg  signed [1:0] codebook_V_25_load_reg_3682;
reg  signed [1:0] codebook_V_26_load_reg_3687;
wire   [37:0] grp_fu_1912_p2;
reg   [37:0] mul_ln1118_23_reg_3702;
reg   [35:0] tmp_22_reg_3707;
wire   [37:0] grp_fu_1920_p2;
reg   [37:0] mul_ln1118_24_reg_3712;
reg  signed [1:0] codebook_V_27_load_reg_3727;
reg  signed [1:0] codebook_V_28_load_reg_3732;
wire   [37:0] grp_fu_1981_p2;
reg   [37:0] mul_ln1118_25_reg_3747;
reg   [35:0] tmp_24_reg_3752;
wire   [37:0] grp_fu_1989_p2;
reg   [37:0] mul_ln1118_26_reg_3757;
reg  signed [1:0] codebook_V_29_load_reg_3772;
reg  signed [1:0] codebook_V_30_load_reg_3777;
wire   [37:0] grp_fu_2050_p2;
reg   [37:0] mul_ln1118_27_reg_3782;
reg   [35:0] tmp_26_reg_3787;
wire   [37:0] grp_fu_2058_p2;
reg   [37:0] mul_ln1118_28_reg_3792;
wire   [37:0] grp_fu_2119_p2;
reg   [37:0] mul_ln1118_29_reg_3807;
reg   [35:0] tmp_28_reg_3812;
wire   [37:0] grp_fu_2127_p2;
reg   [37:0] mul_ln1118_30_reg_3817;
reg   [5:0] correlators_output_V_addr_2_reg_3822;
reg   [5:0] correlators_output_V_addr_2_reg_3822_pp2_iter18_reg;
wire   [40:0] add_ln1192_29_fu_2222_p2;
reg   [40:0] add_ln1192_29_reg_3828;
reg   [35:0] trunc_ln708_1_reg_3833;
wire   [35:0] correlators_output_V_q1;
reg   [35:0] correlators_output_V_load_reg_3842;
reg    ap_enable_reg_pp2_iter18;
wire   [0:0] icmp_ln1494_fu_2238_p2;
reg   [0:0] icmp_ln1494_reg_3847;
reg   [0:0] icmp_ln1494_reg_3847_pp2_iter20_reg;
reg   [0:0] icmp_ln1494_reg_3847_pp2_iter21_reg;
reg   [0:0] icmp_ln1494_reg_3847_pp2_iter22_reg;
reg   [0:0] icmp_ln1494_reg_3847_pp2_iter23_reg;
wire   [0:0] icmp_ln935_fu_2242_p2;
reg   [0:0] icmp_ln935_reg_3851;
reg   [0:0] icmp_ln935_reg_3851_pp2_iter20_reg;
reg   [0:0] icmp_ln935_reg_3851_pp2_iter21_reg;
reg   [0:0] icmp_ln935_reg_3851_pp2_iter22_reg;
wire   [0:0] p_Result_7_fu_2247_p3;
reg   [0:0] p_Result_7_reg_3856;
reg   [0:0] p_Result_7_reg_3856_pp2_iter20_reg;
reg   [0:0] p_Result_7_reg_3856_pp2_iter21_reg;
reg   [0:0] p_Result_7_reg_3856_pp2_iter22_reg;
wire   [35:0] p_Val2_s_fu_2259_p3;
reg   [35:0] p_Val2_s_reg_3861;
reg   [35:0] p_Val2_s_reg_3861_pp2_iter20_reg;
reg   [35:0] p_Val2_s_reg_3861_pp2_iter21_reg;
reg   [35:0] p_Result_s_fu_2266_p4;
reg   [35:0] p_Result_s_reg_3869;
wire   [31:0] sub_ln944_fu_2295_p2;
reg   [31:0] sub_ln944_reg_3874;
reg   [31:0] sub_ln944_reg_3874_pp2_iter21_reg;
wire   [5:0] trunc_ln947_fu_2301_p1;
reg   [5:0] trunc_ln947_reg_3881;
wire   [7:0] trunc_ln943_fu_2305_p1;
reg   [7:0] trunc_ln943_reg_3886;
reg   [7:0] trunc_ln943_reg_3886_pp2_iter21_reg;
reg   [7:0] trunc_ln943_reg_3886_pp2_iter22_reg;
wire   [31:0] lsb_index_fu_2309_p2;
reg   [31:0] lsb_index_reg_3891;
wire   [0:0] icmp_ln946_fu_2324_p2;
reg   [0:0] icmp_ln946_reg_3897;
wire   [0:0] icmp_ln949_fu_2366_p2;
reg   [0:0] icmp_ln949_reg_3902;
wire   [0:0] icmp_ln954_fu_2372_p2;
reg   [0:0] icmp_ln954_reg_3907;
reg   [35:0] m_4_reg_3913;
reg   [0:0] p_Result_5_reg_3918;
wire   [31:0] select_ln935_fu_2531_p3;
reg   [31:0] select_ln935_reg_3923;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state36;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg   [5:0] correlators_output_V_address0;
reg    correlators_output_V_ce0;
reg    correlators_output_V_we0;
reg   [35:0] correlators_output_V_d0;
wire   [5:0] correlators_output_V_address1;
reg    correlators_output_V_ce1;
reg   [4:0] temp_input_V_address0;
reg    temp_input_V_ce0;
reg    temp_input_V_we0;
reg   [35:0] temp_input_V_d0;
reg   [4:0] temp_input_V_address1;
reg    temp_input_V_ce1;
reg    temp_input_V_we1;
reg   [35:0] temp_input_V_d1;
reg   [5:0] i_reg_965;
wire   [0:0] icmp_ln93_fu_1010_p2;
reg   [4:0] i_1_reg_976;
wire   [0:0] icmp_ln96_fu_1027_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] j_reg_987;
wire    ap_CS_fsm_state61;
wire   [63:0] i_cast_fu_1022_p1;
wire   [63:0] i_1_cast_fu_1039_p1;
wire   [63:0] zext_ln101_fu_1056_p1;
wire    ap_block_pp2_stage0;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire  signed [35:0] grp_fu_1176_p0;
wire  signed [35:0] grp_fu_1184_p0;
wire  signed [35:0] grp_fu_1192_p0;
wire   [37:0] grp_fu_1176_p2;
wire  signed [35:0] grp_fu_1210_p0;
wire  signed [35:0] grp_fu_1218_p0;
wire   [37:0] shl_ln_fu_1223_p3;
wire  signed [38:0] sext_ln703_fu_1230_p1;
wire  signed [38:0] sext_ln1192_fu_1234_p1;
wire   [38:0] add_ln1192_1_fu_1237_p2;
wire   [33:0] trunc_ln708_s_fu_1243_p4;
wire   [38:0] tmp_2_fu_1253_p3;
wire  signed [39:0] sext_ln1192_38_fu_1261_p1;
wire  signed [39:0] sext_ln1192_39_fu_1265_p1;
wire   [39:0] add_ln1192_2_fu_1268_p2;
wire  signed [35:0] grp_fu_1287_p0;
wire  signed [35:0] grp_fu_1295_p0;
wire   [39:0] tmp_42_fu_1300_p3;
wire  signed [40:0] sext_ln728_fu_1307_p1;
wire  signed [40:0] sext_ln1192_10_fu_1311_p1;
wire   [40:0] add_ln1192_3_fu_1314_p2;
wire   [35:0] tmp_3_fu_1320_p4;
wire   [40:0] shl_ln728_1_fu_1330_p3;
wire  signed [40:0] sext_ln1192_11_fu_1338_p1;
wire   [40:0] add_ln1192_4_fu_1341_p2;
wire  signed [35:0] grp_fu_1360_p0;
wire  signed [35:0] grp_fu_1368_p0;
wire   [40:0] shl_ln728_2_fu_1373_p3;
wire  signed [40:0] sext_ln1192_12_fu_1380_p1;
wire   [40:0] add_ln1192_5_fu_1383_p2;
wire   [35:0] tmp_5_fu_1389_p4;
wire   [40:0] shl_ln728_3_fu_1399_p3;
wire  signed [40:0] sext_ln1192_13_fu_1407_p1;
wire   [40:0] add_ln1192_6_fu_1410_p2;
wire  signed [35:0] grp_fu_1429_p0;
wire  signed [35:0] grp_fu_1437_p0;
wire   [40:0] shl_ln728_4_fu_1442_p3;
wire  signed [40:0] sext_ln1192_14_fu_1449_p1;
wire   [40:0] add_ln1192_7_fu_1452_p2;
wire   [35:0] tmp_7_fu_1458_p4;
wire   [40:0] shl_ln728_5_fu_1468_p3;
wire  signed [40:0] sext_ln1192_15_fu_1476_p1;
wire   [40:0] add_ln1192_8_fu_1479_p2;
wire  signed [35:0] grp_fu_1498_p0;
wire  signed [35:0] grp_fu_1506_p0;
wire   [40:0] shl_ln728_6_fu_1511_p3;
wire  signed [40:0] sext_ln1192_16_fu_1518_p1;
wire   [40:0] add_ln1192_9_fu_1521_p2;
wire   [35:0] tmp_9_fu_1527_p4;
wire   [40:0] shl_ln728_7_fu_1537_p3;
wire  signed [40:0] sext_ln1192_17_fu_1545_p1;
wire   [40:0] add_ln1192_10_fu_1548_p2;
wire  signed [35:0] grp_fu_1567_p0;
wire  signed [35:0] grp_fu_1575_p0;
wire   [40:0] shl_ln728_8_fu_1580_p3;
wire  signed [40:0] sext_ln1192_18_fu_1587_p1;
wire   [40:0] add_ln1192_11_fu_1590_p2;
wire   [35:0] tmp_11_fu_1596_p4;
wire   [40:0] shl_ln728_9_fu_1606_p3;
wire  signed [40:0] sext_ln1192_19_fu_1614_p1;
wire   [40:0] add_ln1192_12_fu_1617_p2;
wire  signed [35:0] grp_fu_1636_p0;
wire  signed [35:0] grp_fu_1644_p0;
wire   [40:0] shl_ln728_s_fu_1649_p3;
wire  signed [40:0] sext_ln1192_20_fu_1656_p1;
wire   [40:0] add_ln1192_13_fu_1659_p2;
wire   [35:0] tmp_13_fu_1665_p4;
wire   [40:0] shl_ln728_10_fu_1675_p3;
wire  signed [40:0] sext_ln1192_21_fu_1683_p1;
wire   [40:0] add_ln1192_14_fu_1686_p2;
wire  signed [35:0] grp_fu_1705_p0;
wire  signed [35:0] grp_fu_1713_p0;
wire   [40:0] shl_ln728_11_fu_1718_p3;
wire  signed [40:0] sext_ln1192_22_fu_1725_p1;
wire   [40:0] add_ln1192_15_fu_1728_p2;
wire   [35:0] tmp_15_fu_1734_p4;
wire   [40:0] shl_ln728_12_fu_1744_p3;
wire  signed [40:0] sext_ln1192_23_fu_1752_p1;
wire   [40:0] add_ln1192_16_fu_1755_p2;
wire  signed [35:0] grp_fu_1774_p0;
wire  signed [35:0] grp_fu_1782_p0;
wire   [40:0] shl_ln728_13_fu_1787_p3;
wire  signed [40:0] sext_ln1192_24_fu_1794_p1;
wire   [40:0] add_ln1192_17_fu_1797_p2;
wire   [35:0] tmp_17_fu_1803_p4;
wire   [40:0] shl_ln728_14_fu_1813_p3;
wire  signed [40:0] sext_ln1192_25_fu_1821_p1;
wire   [40:0] add_ln1192_18_fu_1824_p2;
wire  signed [35:0] grp_fu_1843_p0;
wire  signed [35:0] grp_fu_1851_p0;
wire   [40:0] shl_ln728_15_fu_1856_p3;
wire  signed [40:0] sext_ln1192_26_fu_1863_p1;
wire   [40:0] add_ln1192_19_fu_1866_p2;
wire   [35:0] tmp_19_fu_1872_p4;
wire   [40:0] shl_ln728_16_fu_1882_p3;
wire  signed [40:0] sext_ln1192_27_fu_1890_p1;
wire   [40:0] add_ln1192_20_fu_1893_p2;
wire  signed [35:0] grp_fu_1912_p0;
wire  signed [35:0] grp_fu_1920_p0;
wire   [40:0] shl_ln728_17_fu_1925_p3;
wire  signed [40:0] sext_ln1192_28_fu_1932_p1;
wire   [40:0] add_ln1192_21_fu_1935_p2;
wire   [35:0] tmp_21_fu_1941_p4;
wire   [40:0] shl_ln728_18_fu_1951_p3;
wire  signed [40:0] sext_ln1192_29_fu_1959_p1;
wire   [40:0] add_ln1192_22_fu_1962_p2;
wire  signed [35:0] grp_fu_1981_p0;
wire  signed [35:0] grp_fu_1989_p0;
wire   [40:0] shl_ln728_19_fu_1994_p3;
wire  signed [40:0] sext_ln1192_30_fu_2001_p1;
wire   [40:0] add_ln1192_fu_2004_p2;
wire   [35:0] tmp_23_fu_2010_p4;
wire   [40:0] shl_ln728_20_fu_2020_p3;
wire  signed [40:0] sext_ln1192_31_fu_2028_p1;
wire   [40:0] add_ln1192_23_fu_2031_p2;
wire  signed [35:0] grp_fu_2050_p0;
wire  signed [35:0] grp_fu_2058_p0;
wire   [40:0] shl_ln728_21_fu_2063_p3;
wire  signed [40:0] sext_ln1192_32_fu_2070_p1;
wire   [40:0] add_ln1192_24_fu_2073_p2;
wire   [35:0] tmp_25_fu_2079_p4;
wire   [40:0] shl_ln728_22_fu_2089_p3;
wire  signed [40:0] sext_ln1192_33_fu_2097_p1;
wire   [40:0] add_ln1192_25_fu_2100_p2;
wire  signed [35:0] grp_fu_2119_p0;
wire  signed [35:0] grp_fu_2127_p0;
wire   [40:0] shl_ln728_23_fu_2132_p3;
wire  signed [40:0] sext_ln1192_34_fu_2139_p1;
wire   [40:0] add_ln1192_26_fu_2142_p2;
wire   [35:0] tmp_27_fu_2148_p4;
wire   [40:0] shl_ln728_24_fu_2158_p3;
wire  signed [40:0] sext_ln1192_35_fu_2166_p1;
wire   [40:0] add_ln1192_27_fu_2169_p2;
wire   [40:0] shl_ln728_25_fu_2185_p3;
wire  signed [40:0] sext_ln1192_36_fu_2192_p1;
wire   [40:0] add_ln1192_28_fu_2195_p2;
wire   [35:0] tmp_29_fu_2201_p4;
wire   [40:0] shl_ln728_26_fu_2211_p3;
wire  signed [40:0] sext_ln1192_37_fu_2219_p1;
wire   [35:0] sub_ln939_fu_2254_p2;
wire   [63:0] p_Result_3_fu_2276_p3;
reg   [63:0] tmp_fu_2283_p3;
wire   [31:0] l_fu_2291_p1;
wire   [30:0] tmp_44_fu_2314_p4;
wire   [5:0] sub_ln947_fu_2330_p2;
wire   [35:0] zext_ln947_fu_2335_p1;
wire   [35:0] zext_ln949_fu_2345_p1;
wire   [35:0] lshr_ln947_fu_2339_p2;
wire   [35:0] shl_ln949_fu_2349_p2;
wire   [35:0] or_ln949_1_fu_2355_p2;
wire   [35:0] and_ln949_fu_2361_p2;
wire   [0:0] tmp_45_fu_2378_p3;
wire   [0:0] p_Result_8_fu_2391_p3;
wire   [0:0] xor_ln949_fu_2385_p2;
wire   [31:0] sub_ln955_fu_2403_p2;
wire   [35:0] zext_ln955_fu_2408_p1;
wire   [31:0] add_ln954_fu_2423_p2;
wire   [35:0] zext_ln954_fu_2428_p1;
wire   [0:0] select_ln946_fu_2417_p3;
wire   [0:0] and_ln949_1_fu_2397_p2;
wire   [35:0] lshr_ln954_fu_2432_p2;
wire   [35:0] shl_ln955_fu_2412_p2;
wire   [35:0] m_fu_2444_p3;
wire   [0:0] select_ln954_fu_2437_p3;
wire   [36:0] zext_ln951_fu_2451_p1;
wire   [36:0] zext_ln961_fu_2455_p1;
wire   [36:0] m_1_fu_2459_p2;
wire   [7:0] select_ln943_fu_2486_p3;
wire   [7:0] sub_ln964_fu_2493_p2;
wire   [7:0] add_ln964_fu_2498_p2;
wire   [63:0] zext_ln951_1_fu_2483_p1;
wire   [8:0] tmp_1_fu_2504_p3;
wire   [63:0] p_Result_9_fu_2511_p5;
wire   [31:0] trunc_ln743_fu_2523_p1;
wire   [31:0] bitcast_ln744_fu_2527_p1;
wire   [0:0] icmp_ln101_fu_1044_p2;
reg   [36:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
end

e2e_system_correlator_codebook_V_0 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_0_address0),
    .ce0(codebook_V_0_ce0),
    .q0(codebook_V_0_q0)
);

e2e_system_correlator_codebook_V_1 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_1_address0),
    .ce0(codebook_V_1_ce0),
    .q0(codebook_V_1_q0)
);

e2e_system_correlator_codebook_V_2 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_2_address0),
    .ce0(codebook_V_2_ce0),
    .q0(codebook_V_2_q0)
);

e2e_system_correlator_codebook_V_3 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_3_address0),
    .ce0(codebook_V_3_ce0),
    .q0(codebook_V_3_q0)
);

e2e_system_correlator_codebook_V_4 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_4_address0),
    .ce0(codebook_V_4_ce0),
    .q0(codebook_V_4_q0)
);

e2e_system_correlator_codebook_V_5 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_5_address0),
    .ce0(codebook_V_5_ce0),
    .q0(codebook_V_5_q0)
);

e2e_system_correlator_codebook_V_6 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_6_address0),
    .ce0(codebook_V_6_ce0),
    .q0(codebook_V_6_q0)
);

e2e_system_correlator_codebook_V_7 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_7_address0),
    .ce0(codebook_V_7_ce0),
    .q0(codebook_V_7_q0)
);

e2e_system_correlator_codebook_V_8 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_8_address0),
    .ce0(codebook_V_8_ce0),
    .q0(codebook_V_8_q0)
);

e2e_system_correlator_codebook_V_9 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_9_address0),
    .ce0(codebook_V_9_ce0),
    .q0(codebook_V_9_q0)
);

e2e_system_correlator_codebook_V_10 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_10_address0),
    .ce0(codebook_V_10_ce0),
    .q0(codebook_V_10_q0)
);

e2e_system_correlator_codebook_V_11 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_11_address0),
    .ce0(codebook_V_11_ce0),
    .q0(codebook_V_11_q0)
);

e2e_system_correlator_codebook_V_12 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_12_address0),
    .ce0(codebook_V_12_ce0),
    .q0(codebook_V_12_q0)
);

e2e_system_correlator_codebook_V_13 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_13_address0),
    .ce0(codebook_V_13_ce0),
    .q0(codebook_V_13_q0)
);

e2e_system_correlator_codebook_V_14 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_14_address0),
    .ce0(codebook_V_14_ce0),
    .q0(codebook_V_14_q0)
);

e2e_system_correlator_codebook_V_15 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_15_address0),
    .ce0(codebook_V_15_ce0),
    .q0(codebook_V_15_q0)
);

e2e_system_correlator_codebook_V_16 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_16_address0),
    .ce0(codebook_V_16_ce0),
    .q0(codebook_V_16_q0)
);

e2e_system_correlator_codebook_V_17 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_17_address0),
    .ce0(codebook_V_17_ce0),
    .q0(codebook_V_17_q0)
);

e2e_system_correlator_codebook_V_18 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_18_address0),
    .ce0(codebook_V_18_ce0),
    .q0(codebook_V_18_q0)
);

e2e_system_correlator_codebook_V_19 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_19_address0),
    .ce0(codebook_V_19_ce0),
    .q0(codebook_V_19_q0)
);

e2e_system_correlator_codebook_V_20 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_20_address0),
    .ce0(codebook_V_20_ce0),
    .q0(codebook_V_20_q0)
);

e2e_system_correlator_codebook_V_21 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_21_address0),
    .ce0(codebook_V_21_ce0),
    .q0(codebook_V_21_q0)
);

e2e_system_correlator_codebook_V_22 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_22_address0),
    .ce0(codebook_V_22_ce0),
    .q0(codebook_V_22_q0)
);

e2e_system_correlator_codebook_V_23 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_23_address0),
    .ce0(codebook_V_23_ce0),
    .q0(codebook_V_23_q0)
);

e2e_system_correlator_codebook_V_24 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_24_address0),
    .ce0(codebook_V_24_ce0),
    .q0(codebook_V_24_q0)
);

e2e_system_correlator_codebook_V_25 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_25_address0),
    .ce0(codebook_V_25_ce0),
    .q0(codebook_V_25_q0)
);

e2e_system_correlator_codebook_V_26 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_26_address0),
    .ce0(codebook_V_26_ce0),
    .q0(codebook_V_26_q0)
);

e2e_system_correlator_codebook_V_27 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_27_address0),
    .ce0(codebook_V_27_ce0),
    .q0(codebook_V_27_q0)
);

e2e_system_correlator_codebook_V_28 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_28_address0),
    .ce0(codebook_V_28_ce0),
    .q0(codebook_V_28_q0)
);

e2e_system_correlator_codebook_V_29 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_29_address0),
    .ce0(codebook_V_29_ce0),
    .q0(codebook_V_29_q0)
);

e2e_system_correlator_codebook_V_30 #(
    .DataWidth( 2 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
codebook_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_30_address0),
    .ce0(codebook_V_30_ce0),
    .q0(codebook_V_30_q0)
);

e2e_system_correlator_correlators_output_V #(
    .DataWidth( 36 ),
    .AddressRange( 33 ),
    .AddressWidth( 6 ))
correlators_output_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlators_output_V_address0),
    .ce0(correlators_output_V_ce0),
    .we0(correlators_output_V_we0),
    .d0(correlators_output_V_d0),
    .address1(correlators_output_V_address1),
    .ce1(correlators_output_V_ce1),
    .q1(correlators_output_V_q1)
);

e2e_system_correlator_temp_input_V #(
    .DataWidth( 36 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
temp_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_input_V_address0),
    .ce0(temp_input_V_ce0),
    .we0(temp_input_V_we0),
    .d0(temp_input_V_d0),
    .q0(temp_input_V_q0),
    .address1(temp_input_V_address1),
    .ce1(temp_input_V_ce1),
    .we1(temp_input_V_we1),
    .d1(temp_input_V_d1),
    .q1(temp_input_V_q1)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1176_p0),
    .din1(codebook_V_0_load_reg_3147),
    .ce(1'b1),
    .dout(grp_fu_1176_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1184_p0),
    .din1(codebook_V_1_load_reg_3152),
    .ce(1'b1),
    .dout(grp_fu_1184_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1192_p0),
    .din1(codebook_V_2_load_reg_3157),
    .ce(1'b1),
    .dout(grp_fu_1192_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1210_p0),
    .din1(codebook_V_3_load_reg_3187),
    .ce(1'b1),
    .dout(grp_fu_1210_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1218_p0),
    .din1(codebook_V_4_load_reg_3192),
    .ce(1'b1),
    .dout(grp_fu_1218_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1287_p0),
    .din1(codebook_V_5_load_reg_3232),
    .ce(1'b1),
    .dout(grp_fu_1287_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1295_p0),
    .din1(codebook_V_6_load_reg_3237),
    .ce(1'b1),
    .dout(grp_fu_1295_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1360_p0),
    .din1(codebook_V_7_load_reg_3277),
    .ce(1'b1),
    .dout(grp_fu_1360_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1368_p0),
    .din1(codebook_V_8_load_reg_3282),
    .ce(1'b1),
    .dout(grp_fu_1368_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1429_p0),
    .din1(codebook_V_9_load_reg_3322),
    .ce(1'b1),
    .dout(grp_fu_1429_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1437_p0),
    .din1(codebook_V_10_load_reg_3327),
    .ce(1'b1),
    .dout(grp_fu_1437_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1498_p0),
    .din1(codebook_V_11_load_reg_3367),
    .ce(1'b1),
    .dout(grp_fu_1498_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1506_p0),
    .din1(codebook_V_12_load_reg_3372),
    .ce(1'b1),
    .dout(grp_fu_1506_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1567_p0),
    .din1(codebook_V_13_load_reg_3412),
    .ce(1'b1),
    .dout(grp_fu_1567_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1575_p0),
    .din1(codebook_V_14_load_reg_3417),
    .ce(1'b1),
    .dout(grp_fu_1575_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1636_p0),
    .din1(codebook_V_15_load_reg_3457),
    .ce(1'b1),
    .dout(grp_fu_1636_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1644_p0),
    .din1(codebook_V_16_load_reg_3462),
    .ce(1'b1),
    .dout(grp_fu_1644_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1705_p0),
    .din1(codebook_V_17_load_reg_3502),
    .ce(1'b1),
    .dout(grp_fu_1705_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1713_p0),
    .din1(codebook_V_18_load_reg_3507),
    .ce(1'b1),
    .dout(grp_fu_1713_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1774_p0),
    .din1(codebook_V_19_load_reg_3547),
    .ce(1'b1),
    .dout(grp_fu_1774_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1782_p0),
    .din1(codebook_V_20_load_reg_3552),
    .ce(1'b1),
    .dout(grp_fu_1782_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1843_p0),
    .din1(codebook_V_21_load_reg_3592),
    .ce(1'b1),
    .dout(grp_fu_1843_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1851_p0),
    .din1(codebook_V_22_load_reg_3597),
    .ce(1'b1),
    .dout(grp_fu_1851_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1912_p0),
    .din1(codebook_V_23_load_reg_3637),
    .ce(1'b1),
    .dout(grp_fu_1912_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1920_p0),
    .din1(codebook_V_24_load_reg_3642),
    .ce(1'b1),
    .dout(grp_fu_1920_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1981_p0),
    .din1(codebook_V_25_load_reg_3682),
    .ce(1'b1),
    .dout(grp_fu_1981_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1989_p0),
    .din1(codebook_V_26_load_reg_3687),
    .ce(1'b1),
    .dout(grp_fu_1989_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2050_p0),
    .din1(codebook_V_27_load_reg_3727),
    .ce(1'b1),
    .dout(grp_fu_2050_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2058_p0),
    .din1(codebook_V_28_load_reg_3732),
    .ce(1'b1),
    .dout(grp_fu_2058_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2119_p0),
    .din1(codebook_V_29_load_reg_3772),
    .ce(1'b1),
    .dout(grp_fu_2119_p2)
);

e2e_system_mul_36s_2s_38_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 38 ))
mul_36s_2s_38_2_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2127_p0),
    .din1(codebook_V_30_load_reg_3777),
    .ce(1'b1),
    .dout(grp_fu_2127_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state36) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state36)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state36);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp2_iter24 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_976 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_1027_p2 == 1'd0))) begin
        i_1_reg_976 <= add_ln96_fu_1033_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln113_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_999 <= add_ln113_fu_1160_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i_2_reg_999 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_1010_p2 == 1'd0))) begin
        i_reg_965 <= add_ln93_fu_1016_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_965 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        j_reg_987 <= add_ln101_reg_2739;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_reg_987 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln101_reg_2739 <= add_ln101_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        add_ln1192_29_reg_3828 <= add_ln1192_29_fu_2222_p2;
        codebook_V_10_load_reg_3327 <= codebook_V_10_q0;
        codebook_V_11_load_reg_3367 <= codebook_V_11_q0;
        codebook_V_12_load_reg_3372 <= codebook_V_12_q0;
        codebook_V_13_load_reg_3412 <= codebook_V_13_q0;
        codebook_V_14_load_reg_3417 <= codebook_V_14_q0;
        codebook_V_15_load_reg_3457 <= codebook_V_15_q0;
        codebook_V_16_load_reg_3462 <= codebook_V_16_q0;
        codebook_V_17_load_reg_3502 <= codebook_V_17_q0;
        codebook_V_18_load_reg_3507 <= codebook_V_18_q0;
        codebook_V_19_load_reg_3547 <= codebook_V_19_q0;
        codebook_V_20_load_reg_3552 <= codebook_V_20_q0;
        codebook_V_21_load_reg_3592 <= codebook_V_21_q0;
        codebook_V_22_load_reg_3597 <= codebook_V_22_q0;
        codebook_V_23_load_reg_3637 <= codebook_V_23_q0;
        codebook_V_24_load_reg_3642 <= codebook_V_24_q0;
        codebook_V_25_load_reg_3682 <= codebook_V_25_q0;
        codebook_V_26_load_reg_3687 <= codebook_V_26_q0;
        codebook_V_27_load_reg_3727 <= codebook_V_27_q0;
        codebook_V_28_load_reg_3732 <= codebook_V_28_q0;
        codebook_V_29_load_reg_3772 <= codebook_V_29_q0;
        codebook_V_30_load_reg_3777 <= codebook_V_30_q0;
        codebook_V_3_load_reg_3187 <= codebook_V_3_q0;
        codebook_V_4_load_reg_3192 <= codebook_V_4_q0;
        codebook_V_5_load_reg_3232 <= codebook_V_5_q0;
        codebook_V_6_load_reg_3237 <= codebook_V_6_q0;
        codebook_V_7_load_reg_3277 <= codebook_V_7_q0;
        codebook_V_8_load_reg_3282 <= codebook_V_8_q0;
        codebook_V_9_load_reg_3322 <= codebook_V_9_q0;
        correlators_output_V_addr_2_reg_3822 <= i_2_cast_reg_3098_pp2_iter16_reg;
        correlators_output_V_addr_2_reg_3822_pp2_iter18_reg <= correlators_output_V_addr_2_reg_3822;
        i_2_cast_reg_3098_pp2_iter10_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter9_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter11_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter10_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter12_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter11_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter13_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter12_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter14_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter13_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter15_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter14_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter16_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter15_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter17_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter16_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter18_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter17_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter19_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter18_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter20_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter19_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter21_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter20_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter22_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter21_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter23_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter22_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter2_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter1_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter3_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter2_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter4_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter3_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter5_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter4_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter6_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter5_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter7_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter6_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter8_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter7_reg[5 : 0];
        i_2_cast_reg_3098_pp2_iter9_reg[5 : 0] <= i_2_cast_reg_3098_pp2_iter8_reg[5 : 0];
        icmp_ln1494_reg_3847 <= icmp_ln1494_fu_2238_p2;
        icmp_ln1494_reg_3847_pp2_iter20_reg <= icmp_ln1494_reg_3847;
        icmp_ln1494_reg_3847_pp2_iter21_reg <= icmp_ln1494_reg_3847_pp2_iter20_reg;
        icmp_ln1494_reg_3847_pp2_iter22_reg <= icmp_ln1494_reg_3847_pp2_iter21_reg;
        icmp_ln1494_reg_3847_pp2_iter23_reg <= icmp_ln1494_reg_3847_pp2_iter22_reg;
        icmp_ln935_reg_3851_pp2_iter20_reg <= icmp_ln935_reg_3851;
        icmp_ln935_reg_3851_pp2_iter21_reg <= icmp_ln935_reg_3851_pp2_iter20_reg;
        icmp_ln935_reg_3851_pp2_iter22_reg <= icmp_ln935_reg_3851_pp2_iter21_reg;
        mul_ln1118_10_reg_3397 <= grp_fu_1437_p2;
        mul_ln1118_11_reg_3432 <= grp_fu_1498_p2;
        mul_ln1118_12_reg_3442 <= grp_fu_1506_p2;
        mul_ln1118_13_reg_3477 <= grp_fu_1567_p2;
        mul_ln1118_14_reg_3487 <= grp_fu_1575_p2;
        mul_ln1118_15_reg_3522 <= grp_fu_1636_p2;
        mul_ln1118_16_reg_3532 <= grp_fu_1644_p2;
        mul_ln1118_17_reg_3567 <= grp_fu_1705_p2;
        mul_ln1118_18_reg_3577 <= grp_fu_1713_p2;
        mul_ln1118_19_reg_3612 <= grp_fu_1774_p2;
        mul_ln1118_1_reg_3207 <= grp_fu_1184_p2;
        mul_ln1118_20_reg_3622 <= grp_fu_1782_p2;
        mul_ln1118_21_reg_3657 <= grp_fu_1843_p2;
        mul_ln1118_22_reg_3667 <= grp_fu_1851_p2;
        mul_ln1118_23_reg_3702 <= grp_fu_1912_p2;
        mul_ln1118_24_reg_3712 <= grp_fu_1920_p2;
        mul_ln1118_25_reg_3747 <= grp_fu_1981_p2;
        mul_ln1118_26_reg_3757 <= grp_fu_1989_p2;
        mul_ln1118_27_reg_3782 <= grp_fu_2050_p2;
        mul_ln1118_28_reg_3792 <= grp_fu_2058_p2;
        mul_ln1118_29_reg_3807 <= grp_fu_2119_p2;
        mul_ln1118_2_reg_3217 <= grp_fu_1192_p2;
        mul_ln1118_30_reg_3817 <= grp_fu_2127_p2;
        mul_ln1118_3_reg_3252 <= grp_fu_1210_p2;
        mul_ln1118_4_reg_3262 <= grp_fu_1218_p2;
        mul_ln1118_5_reg_3297 <= grp_fu_1287_p2;
        mul_ln1118_6_reg_3307 <= grp_fu_1295_p2;
        mul_ln1118_7_reg_3342 <= grp_fu_1360_p2;
        mul_ln1118_8_reg_3352 <= grp_fu_1368_p2;
        mul_ln1118_9_reg_3387 <= grp_fu_1429_p2;
        p_Result_7_reg_3856_pp2_iter20_reg <= p_Result_7_reg_3856;
        p_Result_7_reg_3856_pp2_iter21_reg <= p_Result_7_reg_3856_pp2_iter20_reg;
        p_Result_7_reg_3856_pp2_iter22_reg <= p_Result_7_reg_3856_pp2_iter21_reg;
        p_Val2_s_reg_3861_pp2_iter20_reg <= p_Val2_s_reg_3861;
        p_Val2_s_reg_3861_pp2_iter21_reg <= p_Val2_s_reg_3861_pp2_iter20_reg;
        sub_ln944_reg_3874_pp2_iter21_reg <= sub_ln944_reg_3874;
        tmp_10_reg_3437 <= {{add_ln1192_10_fu_1548_p2[40:5]}};
        tmp_12_reg_3482 <= {{add_ln1192_12_fu_1617_p2[40:5]}};
        tmp_14_reg_3527 <= {{add_ln1192_14_fu_1686_p2[40:5]}};
        tmp_16_reg_3572 <= {{add_ln1192_16_fu_1755_p2[40:5]}};
        tmp_18_reg_3617 <= {{add_ln1192_18_fu_1824_p2[40:5]}};
        tmp_20_reg_3662 <= {{add_ln1192_20_fu_1893_p2[40:5]}};
        tmp_22_reg_3707 <= {{add_ln1192_22_fu_1962_p2[40:5]}};
        tmp_24_reg_3752 <= {{add_ln1192_23_fu_2031_p2[40:5]}};
        tmp_26_reg_3787 <= {{add_ln1192_25_fu_2100_p2[40:5]}};
        tmp_28_reg_3812 <= {{add_ln1192_27_fu_2169_p2[40:5]}};
        tmp_41_reg_3257 <= {{add_ln1192_2_fu_1268_p2[39:5]}};
        tmp_4_reg_3302 <= {{add_ln1192_4_fu_1341_p2[40:5]}};
        tmp_6_reg_3347 <= {{add_ln1192_6_fu_1410_p2[40:5]}};
        tmp_8_reg_3392 <= {{add_ln1192_8_fu_1479_p2[40:5]}};
        tmp_s_reg_3212 <= {{grp_fu_1176_p2[37:5]}};
        trunc_ln708_1_reg_3833 <= {{add_ln1192_29_fu_2222_p2[40:5]}};
        trunc_ln943_reg_3886_pp2_iter21_reg <= trunc_ln943_reg_3886;
        trunc_ln943_reg_3886_pp2_iter22_reg <= trunc_ln943_reg_3886_pp2_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_0_load_reg_3147 <= codebook_V_0_q0;
        codebook_V_1_load_reg_3152 <= codebook_V_1_q0;
        codebook_V_2_load_reg_3157 <= codebook_V_2_q0;
        i_2_cast_reg_3098_pp2_iter1_reg[5 : 0] <= i_2_cast_reg_3098[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        correlators_output_V_load_reg_3842 <= correlators_output_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln113_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_cast_reg_3098[5 : 0] <= i_2_cast_fu_1166_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1494_fu_2238_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln935_reg_3851 <= icmp_ln935_fu_2242_p2;
        p_Result_7_reg_3856 <= add_ln1192_29_reg_3828[32'd40];
        p_Result_s_reg_3869 <= p_Result_s_fu_2266_p4;
        p_Val2_s_reg_3861 <= p_Val2_s_fu_2259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_3851_pp2_iter20_reg == 1'd0) & (icmp_ln1494_reg_3847_pp2_iter20_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln946_reg_3897 <= icmp_ln946_fu_2324_p2;
        icmp_ln949_reg_3902 <= icmp_ln949_fu_2366_p2;
        icmp_ln954_reg_3907 <= icmp_ln954_fu_2372_p2;
        lsb_index_reg_3891 <= lsb_index_fu_2309_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        input_V_load_reg_2917 <= input_V_q0;
        temp_input_V_load_26_reg_2905 <= temp_input_V_q0;
        temp_input_V_load_27_reg_2911 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_3851_pp2_iter21_reg == 1'd0) & (icmp_ln1494_reg_3847_pp2_iter21_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        m_4_reg_3913 <= {{m_1_fu_2459_p2[36:1]}};
        p_Result_5_reg_3918 <= m_1_fu_2459_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1494_reg_3847_pp2_iter22_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln935_reg_3923 <= select_ln935_fu_2531_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        sext_ln1116_10_reg_2984 <= sext_ln1116_10_fu_1091_p1;
        sext_ln1116_11_reg_2989 <= sext_ln1116_11_fu_1094_p1;
        sext_ln1116_12_reg_2994 <= sext_ln1116_12_fu_1097_p1;
        sext_ln1116_13_reg_2999 <= sext_ln1116_13_fu_1100_p1;
        sext_ln1116_14_reg_3004 <= sext_ln1116_14_fu_1103_p1;
        sext_ln1116_15_reg_3009 <= sext_ln1116_15_fu_1106_p1;
        sext_ln1116_16_reg_3014 <= sext_ln1116_16_fu_1109_p1;
        sext_ln1116_17_reg_3019 <= sext_ln1116_17_fu_1112_p1;
        sext_ln1116_18_reg_3024 <= sext_ln1116_18_fu_1115_p1;
        sext_ln1116_19_reg_3029 <= sext_ln1116_19_fu_1118_p1;
        sext_ln1116_1_reg_2939 <= sext_ln1116_1_fu_1064_p1;
        sext_ln1116_20_reg_3034 <= sext_ln1116_20_fu_1121_p1;
        sext_ln1116_21_reg_3039 <= sext_ln1116_21_fu_1124_p1;
        sext_ln1116_22_reg_3044 <= sext_ln1116_22_fu_1127_p1;
        sext_ln1116_23_reg_3049 <= sext_ln1116_23_fu_1130_p1;
        sext_ln1116_24_reg_3054 <= sext_ln1116_24_fu_1133_p1;
        sext_ln1116_25_reg_3059 <= sext_ln1116_25_fu_1136_p1;
        sext_ln1116_26_reg_3064 <= sext_ln1116_26_fu_1139_p1;
        sext_ln1116_27_reg_3069 <= sext_ln1116_27_fu_1142_p1;
        sext_ln1116_28_reg_3074 <= sext_ln1116_28_fu_1145_p1;
        sext_ln1116_29_reg_3079 <= sext_ln1116_29_fu_1148_p1;
        sext_ln1116_2_reg_2944 <= sext_ln1116_2_fu_1067_p1;
        sext_ln1116_30_reg_3084 <= sext_ln1116_30_fu_1151_p1;
        sext_ln1116_3_reg_2949 <= sext_ln1116_3_fu_1070_p1;
        sext_ln1116_4_reg_2954 <= sext_ln1116_4_fu_1073_p1;
        sext_ln1116_5_reg_2959 <= sext_ln1116_5_fu_1076_p1;
        sext_ln1116_6_reg_2964 <= sext_ln1116_6_fu_1079_p1;
        sext_ln1116_7_reg_2969 <= sext_ln1116_7_fu_1082_p1;
        sext_ln1116_8_reg_2974 <= sext_ln1116_8_fu_1085_p1;
        sext_ln1116_9_reg_2979 <= sext_ln1116_9_fu_1088_p1;
        sext_ln1116_reg_2934 <= sext_ln1116_fu_1061_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_3851 == 1'd0) & (icmp_ln1494_reg_3847 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        sub_ln944_reg_3874 <= sub_ln944_fu_2295_p2;
        trunc_ln943_reg_3886 <= trunc_ln943_fu_2305_p1;
        trunc_ln947_reg_3881 <= trunc_ln947_fu_2301_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_input_V_load_10_reg_2804 <= temp_input_V_q0;
        temp_input_V_load_11_reg_2810 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_input_V_load_12_reg_2816 <= temp_input_V_q0;
        temp_input_V_load_13_reg_2822 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_input_V_load_14_reg_2828 <= temp_input_V_q0;
        temp_input_V_load_15_reg_2834 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_input_V_load_16_reg_2840 <= temp_input_V_q0;
        temp_input_V_load_17_reg_2846 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_input_V_load_18_reg_2852 <= temp_input_V_q0;
        temp_input_V_load_19_reg_2858 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_input_V_load_1_reg_2750 <= temp_input_V_q0;
        temp_input_V_load_reg_2744 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        temp_input_V_load_20_reg_2864 <= temp_input_V_q0;
        temp_input_V_load_21_reg_2870 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_input_V_load_22_reg_2876 <= temp_input_V_q0;
        temp_input_V_load_23_reg_2882 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_input_V_load_24_reg_2888 <= temp_input_V_q0;
        temp_input_V_load_25_reg_2894 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_input_V_load_28_reg_2922 <= temp_input_V_q0;
        temp_input_V_load_29_reg_2928 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_input_V_load_2_reg_2756 <= temp_input_V_q0;
        temp_input_V_load_3_reg_2762 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_input_V_load_4_reg_2768 <= temp_input_V_q0;
        temp_input_V_load_5_reg_2774 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_input_V_load_6_reg_2780 <= temp_input_V_q0;
        temp_input_V_load_7_reg_2786 <= temp_input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_input_V_load_8_reg_2792 <= temp_input_V_q0;
        temp_input_V_load_9_reg_2798 <= temp_input_V_q1;
    end
end

always @ (*) begin
    if ((icmp_ln113_fu_1154_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln101_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln101_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_0_ce0 = 1'b1;
    end else begin
        codebook_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_10_ce0 = 1'b1;
    end else begin
        codebook_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        codebook_V_11_ce0 = 1'b1;
    end else begin
        codebook_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        codebook_V_12_ce0 = 1'b1;
    end else begin
        codebook_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        codebook_V_13_ce0 = 1'b1;
    end else begin
        codebook_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        codebook_V_14_ce0 = 1'b1;
    end else begin
        codebook_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        codebook_V_15_ce0 = 1'b1;
    end else begin
        codebook_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        codebook_V_16_ce0 = 1'b1;
    end else begin
        codebook_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        codebook_V_17_ce0 = 1'b1;
    end else begin
        codebook_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        codebook_V_18_ce0 = 1'b1;
    end else begin
        codebook_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        codebook_V_19_ce0 = 1'b1;
    end else begin
        codebook_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_1_ce0 = 1'b1;
    end else begin
        codebook_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        codebook_V_20_ce0 = 1'b1;
    end else begin
        codebook_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        codebook_V_21_ce0 = 1'b1;
    end else begin
        codebook_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        codebook_V_22_ce0 = 1'b1;
    end else begin
        codebook_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        codebook_V_23_ce0 = 1'b1;
    end else begin
        codebook_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        codebook_V_24_ce0 = 1'b1;
    end else begin
        codebook_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1))) begin
        codebook_V_25_ce0 = 1'b1;
    end else begin
        codebook_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1))) begin
        codebook_V_26_ce0 = 1'b1;
    end else begin
        codebook_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        codebook_V_27_ce0 = 1'b1;
    end else begin
        codebook_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        codebook_V_28_ce0 = 1'b1;
    end else begin
        codebook_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1))) begin
        codebook_V_29_ce0 = 1'b1;
    end else begin
        codebook_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_2_ce0 = 1'b1;
    end else begin
        codebook_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1))) begin
        codebook_V_30_ce0 = 1'b1;
    end else begin
        codebook_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_3_ce0 = 1'b1;
    end else begin
        codebook_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        codebook_V_4_ce0 = 1'b1;
    end else begin
        codebook_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_5_ce0 = 1'b1;
    end else begin
        codebook_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_6_ce0 = 1'b1;
    end else begin
        codebook_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_7_ce0 = 1'b1;
    end else begin
        codebook_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_8_ce0 = 1'b1;
    end else begin
        codebook_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        codebook_V_9_ce0 = 1'b1;
    end else begin
        codebook_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter19 == 1'b1))) begin
        correlators_output_V_address0 = correlators_output_V_addr_2_reg_3822_pp2_iter18_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        correlators_output_V_address0 = i_cast_fu_1022_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        correlators_output_V_address0 = 64'd0;
    end else begin
        correlators_output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter19 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        correlators_output_V_ce0 = 1'b1;
    end else begin
        correlators_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        correlators_output_V_ce1 = 1'b1;
    end else begin
        correlators_output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter19 == 1'b1))) begin
        correlators_output_V_d0 = trunc_ln708_1_reg_3833;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        correlators_output_V_d0 = 36'd0;
    end else begin
        correlators_output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1494_fu_2238_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter19 == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_1010_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        correlators_output_V_we0 = 1'b1;
    end else begin
        correlators_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter24 == 1'b1))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1494_reg_3847_pp2_iter23_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter24 == 1'b1))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_input_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_input_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_input_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_input_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_input_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_input_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_input_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_input_V_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        temp_input_V_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        temp_input_V_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_input_V_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        temp_input_V_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_input_V_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_input_V_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_input_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_input_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_input_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp_input_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_input_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_input_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_input_V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_input_V_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_input_V_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_input_V_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_input_V_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_input_V_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_input_V_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_input_V_address0 = 64'd27;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state22))) begin
        temp_input_V_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        temp_input_V_address0 = i_1_cast_fu_1039_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        temp_input_V_address0 = 64'd0;
    end else begin
        temp_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_input_V_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_input_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_input_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_input_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_input_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_input_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_input_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_input_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        temp_input_V_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        temp_input_V_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_input_V_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        temp_input_V_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_input_V_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_input_V_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_input_V_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_input_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_input_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp_input_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_input_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_input_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_input_V_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_input_V_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_input_V_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_input_V_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_input_V_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_input_V_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_input_V_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp_input_V_address1 = 64'd26;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state6))) begin
        temp_input_V_address1 = 64'd29;
    end else begin
        temp_input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        temp_input_V_ce0 = 1'b1;
    end else begin
        temp_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        temp_input_V_ce1 = 1'b1;
    end else begin
        temp_input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_input_V_d0 = temp_input_V_load_28_reg_2922;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_input_V_d0 = temp_input_V_load_26_reg_2905;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_input_V_d0 = temp_input_V_load_24_reg_2888;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_input_V_d0 = temp_input_V_load_22_reg_2876;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_input_V_d0 = temp_input_V_load_20_reg_2864;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_input_V_d0 = temp_input_V_load_18_reg_2852;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_input_V_d0 = temp_input_V_load_16_reg_2840;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_input_V_d0 = temp_input_V_load_14_reg_2828;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        temp_input_V_d0 = temp_input_V_load_12_reg_2816;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        temp_input_V_d0 = temp_input_V_load_10_reg_2804;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_input_V_d0 = temp_input_V_load_8_reg_2792;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        temp_input_V_d0 = temp_input_V_load_6_reg_2780;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_input_V_d0 = temp_input_V_load_4_reg_2768;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_input_V_d0 = temp_input_V_load_2_reg_2756;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_input_V_d0 = temp_input_V_load_reg_2744;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state4))) begin
        temp_input_V_d0 = 36'd0;
    end else begin
        temp_input_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_input_V_d1 = temp_input_V_load_29_reg_2928;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_input_V_d1 = temp_input_V_load_27_reg_2911;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_input_V_d1 = temp_input_V_load_25_reg_2894;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_input_V_d1 = temp_input_V_load_23_reg_2882;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_input_V_d1 = temp_input_V_load_21_reg_2870;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_input_V_d1 = temp_input_V_load_19_reg_2858;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_input_V_d1 = temp_input_V_load_17_reg_2846;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_input_V_d1 = temp_input_V_load_15_reg_2834;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        temp_input_V_d1 = temp_input_V_load_13_reg_2822;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        temp_input_V_d1 = temp_input_V_load_11_reg_2810;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_input_V_d1 = temp_input_V_load_9_reg_2798;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        temp_input_V_d1 = temp_input_V_load_7_reg_2786;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_input_V_d1 = temp_input_V_load_5_reg_2774;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        temp_input_V_d1 = temp_input_V_load_3_reg_2762;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_input_V_d1 = temp_input_V_load_1_reg_2750;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_input_V_d1 = input_V_q0;
    end else begin
        temp_input_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_1027_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        temp_input_V_we0 = 1'b1;
    end else begin
        temp_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        temp_input_V_we1 = 1'b1;
    end else begin
        temp_input_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_1010_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_1027_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln101_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln113_fu_1154_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter24 == 1'b1) & (ap_enable_reg_pp2_iter23 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln113_fu_1154_p2 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter24 == 1'b1) & (ap_enable_reg_pp2_iter23 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_1050_p2 = (j_reg_987 + 8'd1);

assign add_ln113_fu_1160_p2 = (i_2_reg_999 + 6'd1);

assign add_ln1192_10_fu_1548_p2 = ($signed(shl_ln728_7_fu_1537_p3) + $signed(sext_ln1192_17_fu_1545_p1));

assign add_ln1192_11_fu_1590_p2 = ($signed(shl_ln728_8_fu_1580_p3) + $signed(sext_ln1192_18_fu_1587_p1));

assign add_ln1192_12_fu_1617_p2 = ($signed(shl_ln728_9_fu_1606_p3) + $signed(sext_ln1192_19_fu_1614_p1));

assign add_ln1192_13_fu_1659_p2 = ($signed(shl_ln728_s_fu_1649_p3) + $signed(sext_ln1192_20_fu_1656_p1));

assign add_ln1192_14_fu_1686_p2 = ($signed(shl_ln728_10_fu_1675_p3) + $signed(sext_ln1192_21_fu_1683_p1));

assign add_ln1192_15_fu_1728_p2 = ($signed(shl_ln728_11_fu_1718_p3) + $signed(sext_ln1192_22_fu_1725_p1));

assign add_ln1192_16_fu_1755_p2 = ($signed(shl_ln728_12_fu_1744_p3) + $signed(sext_ln1192_23_fu_1752_p1));

assign add_ln1192_17_fu_1797_p2 = ($signed(shl_ln728_13_fu_1787_p3) + $signed(sext_ln1192_24_fu_1794_p1));

assign add_ln1192_18_fu_1824_p2 = ($signed(shl_ln728_14_fu_1813_p3) + $signed(sext_ln1192_25_fu_1821_p1));

assign add_ln1192_19_fu_1866_p2 = ($signed(shl_ln728_15_fu_1856_p3) + $signed(sext_ln1192_26_fu_1863_p1));

assign add_ln1192_1_fu_1237_p2 = ($signed(sext_ln703_fu_1230_p1) + $signed(sext_ln1192_fu_1234_p1));

assign add_ln1192_20_fu_1893_p2 = ($signed(shl_ln728_16_fu_1882_p3) + $signed(sext_ln1192_27_fu_1890_p1));

assign add_ln1192_21_fu_1935_p2 = ($signed(shl_ln728_17_fu_1925_p3) + $signed(sext_ln1192_28_fu_1932_p1));

assign add_ln1192_22_fu_1962_p2 = ($signed(shl_ln728_18_fu_1951_p3) + $signed(sext_ln1192_29_fu_1959_p1));

assign add_ln1192_23_fu_2031_p2 = ($signed(shl_ln728_20_fu_2020_p3) + $signed(sext_ln1192_31_fu_2028_p1));

assign add_ln1192_24_fu_2073_p2 = ($signed(shl_ln728_21_fu_2063_p3) + $signed(sext_ln1192_32_fu_2070_p1));

assign add_ln1192_25_fu_2100_p2 = ($signed(shl_ln728_22_fu_2089_p3) + $signed(sext_ln1192_33_fu_2097_p1));

assign add_ln1192_26_fu_2142_p2 = ($signed(shl_ln728_23_fu_2132_p3) + $signed(sext_ln1192_34_fu_2139_p1));

assign add_ln1192_27_fu_2169_p2 = ($signed(shl_ln728_24_fu_2158_p3) + $signed(sext_ln1192_35_fu_2166_p1));

assign add_ln1192_28_fu_2195_p2 = ($signed(shl_ln728_25_fu_2185_p3) + $signed(sext_ln1192_36_fu_2192_p1));

assign add_ln1192_29_fu_2222_p2 = ($signed(shl_ln728_26_fu_2211_p3) + $signed(sext_ln1192_37_fu_2219_p1));

assign add_ln1192_2_fu_1268_p2 = ($signed(sext_ln1192_38_fu_1261_p1) + $signed(sext_ln1192_39_fu_1265_p1));

assign add_ln1192_3_fu_1314_p2 = ($signed(sext_ln728_fu_1307_p1) + $signed(sext_ln1192_10_fu_1311_p1));

assign add_ln1192_4_fu_1341_p2 = ($signed(shl_ln728_1_fu_1330_p3) + $signed(sext_ln1192_11_fu_1338_p1));

assign add_ln1192_5_fu_1383_p2 = ($signed(shl_ln728_2_fu_1373_p3) + $signed(sext_ln1192_12_fu_1380_p1));

assign add_ln1192_6_fu_1410_p2 = ($signed(shl_ln728_3_fu_1399_p3) + $signed(sext_ln1192_13_fu_1407_p1));

assign add_ln1192_7_fu_1452_p2 = ($signed(shl_ln728_4_fu_1442_p3) + $signed(sext_ln1192_14_fu_1449_p1));

assign add_ln1192_8_fu_1479_p2 = ($signed(shl_ln728_5_fu_1468_p3) + $signed(sext_ln1192_15_fu_1476_p1));

assign add_ln1192_9_fu_1521_p2 = ($signed(shl_ln728_6_fu_1511_p3) + $signed(sext_ln1192_16_fu_1518_p1));

assign add_ln1192_fu_2004_p2 = ($signed(shl_ln728_19_fu_1994_p3) + $signed(sext_ln1192_30_fu_2001_p1));

assign add_ln93_fu_1016_p2 = (i_reg_965 + 6'd1);

assign add_ln954_fu_2423_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_3874_pp2_iter21_reg));

assign add_ln964_fu_2498_p2 = (select_ln943_fu_2486_p3 + sub_ln964_fu_2493_p2);

assign add_ln96_fu_1033_p2 = (i_1_reg_976 + 5'd1);

assign and_ln949_1_fu_2397_p2 = (xor_ln949_fu_2385_p2 & p_Result_8_fu_2391_p3);

assign and_ln949_fu_2361_p2 = (p_Val2_s_reg_3861_pp2_iter20_reg & or_ln949_1_fu_2355_p2);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign bitcast_ln744_fu_2527_p1 = trunc_ln743_fu_2523_p1;

assign codebook_V_0_address0 = i_2_cast_fu_1166_p1;

assign codebook_V_10_address0 = i_2_cast_reg_3098_pp2_iter3_reg;

assign codebook_V_11_address0 = i_2_cast_reg_3098_pp2_iter4_reg;

assign codebook_V_12_address0 = i_2_cast_reg_3098_pp2_iter4_reg;

assign codebook_V_13_address0 = i_2_cast_reg_3098_pp2_iter5_reg;

assign codebook_V_14_address0 = i_2_cast_reg_3098_pp2_iter5_reg;

assign codebook_V_15_address0 = i_2_cast_reg_3098_pp2_iter6_reg;

assign codebook_V_16_address0 = i_2_cast_reg_3098_pp2_iter6_reg;

assign codebook_V_17_address0 = i_2_cast_reg_3098_pp2_iter7_reg;

assign codebook_V_18_address0 = i_2_cast_reg_3098_pp2_iter7_reg;

assign codebook_V_19_address0 = i_2_cast_reg_3098_pp2_iter8_reg;

assign codebook_V_1_address0 = i_2_cast_fu_1166_p1;

assign codebook_V_20_address0 = i_2_cast_reg_3098_pp2_iter8_reg;

assign codebook_V_21_address0 = i_2_cast_reg_3098_pp2_iter9_reg;

assign codebook_V_22_address0 = i_2_cast_reg_3098_pp2_iter9_reg;

assign codebook_V_23_address0 = i_2_cast_reg_3098_pp2_iter10_reg;

assign codebook_V_24_address0 = i_2_cast_reg_3098_pp2_iter10_reg;

assign codebook_V_25_address0 = i_2_cast_reg_3098_pp2_iter11_reg;

assign codebook_V_26_address0 = i_2_cast_reg_3098_pp2_iter11_reg;

assign codebook_V_27_address0 = i_2_cast_reg_3098_pp2_iter12_reg;

assign codebook_V_28_address0 = i_2_cast_reg_3098_pp2_iter12_reg;

assign codebook_V_29_address0 = i_2_cast_reg_3098_pp2_iter13_reg;

assign codebook_V_2_address0 = i_2_cast_fu_1166_p1;

assign codebook_V_30_address0 = i_2_cast_reg_3098_pp2_iter13_reg;

assign codebook_V_3_address0 = i_2_cast_reg_3098;

assign codebook_V_4_address0 = i_2_cast_reg_3098;

assign codebook_V_5_address0 = i_2_cast_reg_3098_pp2_iter1_reg;

assign codebook_V_6_address0 = i_2_cast_reg_3098_pp2_iter1_reg;

assign codebook_V_7_address0 = i_2_cast_reg_3098_pp2_iter2_reg;

assign codebook_V_8_address0 = i_2_cast_reg_3098_pp2_iter2_reg;

assign codebook_V_9_address0 = i_2_cast_reg_3098_pp2_iter3_reg;

assign correlators_output_V_address1 = i_2_cast_reg_3098_pp2_iter16_reg;

assign grp_fu_1176_p0 = sext_ln1116_reg_2934;

assign grp_fu_1184_p0 = sext_ln1116_1_reg_2939;

assign grp_fu_1192_p0 = sext_ln1116_2_reg_2944;

assign grp_fu_1210_p0 = sext_ln1116_3_reg_2949;

assign grp_fu_1218_p0 = sext_ln1116_4_reg_2954;

assign grp_fu_1287_p0 = sext_ln1116_5_reg_2959;

assign grp_fu_1295_p0 = sext_ln1116_6_reg_2964;

assign grp_fu_1360_p0 = sext_ln1116_7_reg_2969;

assign grp_fu_1368_p0 = sext_ln1116_8_reg_2974;

assign grp_fu_1429_p0 = sext_ln1116_9_reg_2979;

assign grp_fu_1437_p0 = sext_ln1116_10_reg_2984;

assign grp_fu_1498_p0 = sext_ln1116_11_reg_2989;

assign grp_fu_1506_p0 = sext_ln1116_12_reg_2994;

assign grp_fu_1567_p0 = sext_ln1116_13_reg_2999;

assign grp_fu_1575_p0 = sext_ln1116_14_reg_3004;

assign grp_fu_1636_p0 = sext_ln1116_15_reg_3009;

assign grp_fu_1644_p0 = sext_ln1116_16_reg_3014;

assign grp_fu_1705_p0 = sext_ln1116_17_reg_3019;

assign grp_fu_1713_p0 = sext_ln1116_18_reg_3024;

assign grp_fu_1774_p0 = sext_ln1116_19_reg_3029;

assign grp_fu_1782_p0 = sext_ln1116_20_reg_3034;

assign grp_fu_1843_p0 = sext_ln1116_21_reg_3039;

assign grp_fu_1851_p0 = sext_ln1116_22_reg_3044;

assign grp_fu_1912_p0 = sext_ln1116_23_reg_3049;

assign grp_fu_1920_p0 = sext_ln1116_24_reg_3054;

assign grp_fu_1981_p0 = sext_ln1116_25_reg_3059;

assign grp_fu_1989_p0 = sext_ln1116_26_reg_3064;

assign grp_fu_2050_p0 = sext_ln1116_27_reg_3069;

assign grp_fu_2058_p0 = sext_ln1116_28_reg_3074;

assign grp_fu_2119_p0 = sext_ln1116_29_reg_3079;

assign grp_fu_2127_p0 = sext_ln1116_30_reg_3084;

assign i_1_cast_fu_1039_p1 = i_1_reg_976;

assign i_2_cast_fu_1166_p1 = i_2_reg_999;

assign i_cast_fu_1022_p1 = i_reg_965;

assign icmp_ln101_fu_1044_p2 = ((j_reg_987 == 8'd170) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_1154_p2 = ((i_2_reg_999 == 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_2238_p2 = (($signed(trunc_ln708_1_reg_3833) > $signed(correlators_output_V_load_reg_3842)) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2242_p2 = ((trunc_ln708_1_reg_3833 == 36'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1010_p2 = ((i_reg_965 == 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_2324_p2 = (($signed(tmp_44_fu_2314_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_2366_p2 = ((and_ln949_fu_2361_p2 != 36'd0) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_2372_p2 = (($signed(lsb_index_fu_2309_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1027_p2 = ((i_1_reg_976 == 5'd31) ? 1'b1 : 1'b0);

assign input_V_address0 = zext_ln101_fu_1056_p1;

assign l_fu_2291_p1 = tmp_fu_2283_p3[31:0];

assign lsb_index_fu_2309_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_3874));

assign lshr_ln947_fu_2339_p2 = 36'd68719476735 >> zext_ln947_fu_2335_p1;

assign lshr_ln954_fu_2432_p2 = p_Val2_s_reg_3861_pp2_iter21_reg >> zext_ln954_fu_2428_p1;

assign m_1_fu_2459_p2 = (zext_ln951_fu_2451_p1 + zext_ln961_fu_2455_p1);

assign m_fu_2444_p3 = ((icmp_ln954_reg_3907[0:0] === 1'b1) ? lshr_ln954_fu_2432_p2 : shl_ln955_fu_2412_p2);

assign or_ln949_1_fu_2355_p2 = (shl_ln949_fu_2349_p2 | lshr_ln947_fu_2339_p2);

assign output_r_address0 = i_2_cast_reg_3098_pp2_iter23_reg;

assign output_r_d0 = select_ln935_reg_3923;

assign p_Result_3_fu_2276_p3 = {{28'd268435455}, {p_Result_s_reg_3869}};

assign p_Result_7_fu_2247_p3 = add_ln1192_29_reg_3828[32'd40];

assign p_Result_8_fu_2391_p3 = p_Val2_s_reg_3861_pp2_iter21_reg[lsb_index_reg_3891];

assign p_Result_9_fu_2511_p5 = {{zext_ln951_1_fu_2483_p1[63:32]}, {tmp_1_fu_2504_p3}, {zext_ln951_1_fu_2483_p1[22:0]}};

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_2259_p3) begin
    for (ap_tvar_int_0 = 36 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 35 - 0) begin
            p_Result_s_fu_2266_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_2266_p4[ap_tvar_int_0] = p_Val2_s_fu_2259_p3[35 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_s_fu_2259_p3 = ((p_Result_7_fu_2247_p3[0:0] === 1'b1) ? sub_ln939_fu_2254_p2 : trunc_ln708_1_reg_3833);

assign select_ln935_fu_2531_p3 = ((icmp_ln935_reg_3851_pp2_iter22_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln744_fu_2527_p1);

assign select_ln943_fu_2486_p3 = ((p_Result_5_reg_3918[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_fu_2417_p3 = ((icmp_ln946_reg_3897[0:0] === 1'b1) ? icmp_ln949_reg_3902 : p_Result_8_fu_2391_p3);

assign select_ln954_fu_2437_p3 = ((icmp_ln954_reg_3907[0:0] === 1'b1) ? select_ln946_fu_2417_p3 : and_ln949_1_fu_2397_p2);

assign sext_ln1116_10_fu_1091_p1 = temp_input_V_load_10_reg_2804;

assign sext_ln1116_11_fu_1094_p1 = temp_input_V_load_11_reg_2810;

assign sext_ln1116_12_fu_1097_p1 = temp_input_V_load_12_reg_2816;

assign sext_ln1116_13_fu_1100_p1 = temp_input_V_load_13_reg_2822;

assign sext_ln1116_14_fu_1103_p1 = temp_input_V_load_14_reg_2828;

assign sext_ln1116_15_fu_1106_p1 = temp_input_V_load_15_reg_2834;

assign sext_ln1116_16_fu_1109_p1 = temp_input_V_load_16_reg_2840;

assign sext_ln1116_17_fu_1112_p1 = temp_input_V_load_17_reg_2846;

assign sext_ln1116_18_fu_1115_p1 = temp_input_V_load_18_reg_2852;

assign sext_ln1116_19_fu_1118_p1 = temp_input_V_load_19_reg_2858;

assign sext_ln1116_1_fu_1064_p1 = temp_input_V_load_1_reg_2750;

assign sext_ln1116_20_fu_1121_p1 = temp_input_V_load_20_reg_2864;

assign sext_ln1116_21_fu_1124_p1 = temp_input_V_load_21_reg_2870;

assign sext_ln1116_22_fu_1127_p1 = temp_input_V_load_22_reg_2876;

assign sext_ln1116_23_fu_1130_p1 = temp_input_V_load_23_reg_2882;

assign sext_ln1116_24_fu_1133_p1 = temp_input_V_load_24_reg_2888;

assign sext_ln1116_25_fu_1136_p1 = temp_input_V_load_25_reg_2894;

assign sext_ln1116_26_fu_1139_p1 = temp_input_V_load_26_reg_2905;

assign sext_ln1116_27_fu_1142_p1 = temp_input_V_load_27_reg_2911;

assign sext_ln1116_28_fu_1145_p1 = temp_input_V_load_28_reg_2922;

assign sext_ln1116_29_fu_1148_p1 = temp_input_V_load_29_reg_2928;

assign sext_ln1116_2_fu_1067_p1 = temp_input_V_load_2_reg_2756;

assign sext_ln1116_30_fu_1151_p1 = input_V_load_reg_2917;

assign sext_ln1116_3_fu_1070_p1 = temp_input_V_load_3_reg_2762;

assign sext_ln1116_4_fu_1073_p1 = temp_input_V_load_4_reg_2768;

assign sext_ln1116_5_fu_1076_p1 = temp_input_V_load_5_reg_2774;

assign sext_ln1116_6_fu_1079_p1 = temp_input_V_load_6_reg_2780;

assign sext_ln1116_7_fu_1082_p1 = temp_input_V_load_7_reg_2786;

assign sext_ln1116_8_fu_1085_p1 = temp_input_V_load_8_reg_2792;

assign sext_ln1116_9_fu_1088_p1 = temp_input_V_load_9_reg_2798;

assign sext_ln1116_fu_1061_p1 = temp_input_V_load_reg_2744;

assign sext_ln1192_10_fu_1311_p1 = $signed(mul_ln1118_3_reg_3252);

assign sext_ln1192_11_fu_1338_p1 = $signed(mul_ln1118_4_reg_3262);

assign sext_ln1192_12_fu_1380_p1 = $signed(mul_ln1118_5_reg_3297);

assign sext_ln1192_13_fu_1407_p1 = $signed(mul_ln1118_6_reg_3307);

assign sext_ln1192_14_fu_1449_p1 = $signed(mul_ln1118_7_reg_3342);

assign sext_ln1192_15_fu_1476_p1 = $signed(mul_ln1118_8_reg_3352);

assign sext_ln1192_16_fu_1518_p1 = $signed(mul_ln1118_9_reg_3387);

assign sext_ln1192_17_fu_1545_p1 = $signed(mul_ln1118_10_reg_3397);

assign sext_ln1192_18_fu_1587_p1 = $signed(mul_ln1118_11_reg_3432);

assign sext_ln1192_19_fu_1614_p1 = $signed(mul_ln1118_12_reg_3442);

assign sext_ln1192_20_fu_1656_p1 = $signed(mul_ln1118_13_reg_3477);

assign sext_ln1192_21_fu_1683_p1 = $signed(mul_ln1118_14_reg_3487);

assign sext_ln1192_22_fu_1725_p1 = $signed(mul_ln1118_15_reg_3522);

assign sext_ln1192_23_fu_1752_p1 = $signed(mul_ln1118_16_reg_3532);

assign sext_ln1192_24_fu_1794_p1 = $signed(mul_ln1118_17_reg_3567);

assign sext_ln1192_25_fu_1821_p1 = $signed(mul_ln1118_18_reg_3577);

assign sext_ln1192_26_fu_1863_p1 = $signed(mul_ln1118_19_reg_3612);

assign sext_ln1192_27_fu_1890_p1 = $signed(mul_ln1118_20_reg_3622);

assign sext_ln1192_28_fu_1932_p1 = $signed(mul_ln1118_21_reg_3657);

assign sext_ln1192_29_fu_1959_p1 = $signed(mul_ln1118_22_reg_3667);

assign sext_ln1192_30_fu_2001_p1 = $signed(mul_ln1118_23_reg_3702);

assign sext_ln1192_31_fu_2028_p1 = $signed(mul_ln1118_24_reg_3712);

assign sext_ln1192_32_fu_2070_p1 = $signed(mul_ln1118_25_reg_3747);

assign sext_ln1192_33_fu_2097_p1 = $signed(mul_ln1118_26_reg_3757);

assign sext_ln1192_34_fu_2139_p1 = $signed(mul_ln1118_27_reg_3782);

assign sext_ln1192_35_fu_2166_p1 = $signed(mul_ln1118_28_reg_3792);

assign sext_ln1192_36_fu_2192_p1 = $signed(mul_ln1118_29_reg_3807);

assign sext_ln1192_37_fu_2219_p1 = $signed(mul_ln1118_30_reg_3817);

assign sext_ln1192_38_fu_1261_p1 = $signed(tmp_2_fu_1253_p3);

assign sext_ln1192_39_fu_1265_p1 = $signed(mul_ln1118_2_reg_3217);

assign sext_ln1192_fu_1234_p1 = $signed(mul_ln1118_1_reg_3207);

assign sext_ln703_fu_1230_p1 = $signed(shl_ln_fu_1223_p3);

assign sext_ln728_fu_1307_p1 = $signed(tmp_42_fu_1300_p3);

assign shl_ln728_10_fu_1675_p3 = {{tmp_13_fu_1665_p4}, {5'd0}};

assign shl_ln728_11_fu_1718_p3 = {{tmp_14_reg_3527}, {5'd0}};

assign shl_ln728_12_fu_1744_p3 = {{tmp_15_fu_1734_p4}, {5'd0}};

assign shl_ln728_13_fu_1787_p3 = {{tmp_16_reg_3572}, {5'd0}};

assign shl_ln728_14_fu_1813_p3 = {{tmp_17_fu_1803_p4}, {5'd0}};

assign shl_ln728_15_fu_1856_p3 = {{tmp_18_reg_3617}, {5'd0}};

assign shl_ln728_16_fu_1882_p3 = {{tmp_19_fu_1872_p4}, {5'd0}};

assign shl_ln728_17_fu_1925_p3 = {{tmp_20_reg_3662}, {5'd0}};

assign shl_ln728_18_fu_1951_p3 = {{tmp_21_fu_1941_p4}, {5'd0}};

assign shl_ln728_19_fu_1994_p3 = {{tmp_22_reg_3707}, {5'd0}};

assign shl_ln728_1_fu_1330_p3 = {{tmp_3_fu_1320_p4}, {5'd0}};

assign shl_ln728_20_fu_2020_p3 = {{tmp_23_fu_2010_p4}, {5'd0}};

assign shl_ln728_21_fu_2063_p3 = {{tmp_24_reg_3752}, {5'd0}};

assign shl_ln728_22_fu_2089_p3 = {{tmp_25_fu_2079_p4}, {5'd0}};

assign shl_ln728_23_fu_2132_p3 = {{tmp_26_reg_3787}, {5'd0}};

assign shl_ln728_24_fu_2158_p3 = {{tmp_27_fu_2148_p4}, {5'd0}};

assign shl_ln728_25_fu_2185_p3 = {{tmp_28_reg_3812}, {5'd0}};

assign shl_ln728_26_fu_2211_p3 = {{tmp_29_fu_2201_p4}, {5'd0}};

assign shl_ln728_2_fu_1373_p3 = {{tmp_4_reg_3302}, {5'd0}};

assign shl_ln728_3_fu_1399_p3 = {{tmp_5_fu_1389_p4}, {5'd0}};

assign shl_ln728_4_fu_1442_p3 = {{tmp_6_reg_3347}, {5'd0}};

assign shl_ln728_5_fu_1468_p3 = {{tmp_7_fu_1458_p4}, {5'd0}};

assign shl_ln728_6_fu_1511_p3 = {{tmp_8_reg_3392}, {5'd0}};

assign shl_ln728_7_fu_1537_p3 = {{tmp_9_fu_1527_p4}, {5'd0}};

assign shl_ln728_8_fu_1580_p3 = {{tmp_10_reg_3437}, {5'd0}};

assign shl_ln728_9_fu_1606_p3 = {{tmp_11_fu_1596_p4}, {5'd0}};

assign shl_ln728_s_fu_1649_p3 = {{tmp_12_reg_3482}, {5'd0}};

assign shl_ln949_fu_2349_p2 = 36'd1 << zext_ln949_fu_2345_p1;

assign shl_ln955_fu_2412_p2 = p_Val2_s_reg_3861_pp2_iter21_reg << zext_ln955_fu_2408_p1;

assign shl_ln_fu_1223_p3 = {{tmp_s_reg_3212}, {5'd0}};

assign sub_ln939_fu_2254_p2 = (36'd0 - trunc_ln708_1_reg_3833);

assign sub_ln944_fu_2295_p2 = (32'd36 - l_fu_2291_p1);

assign sub_ln947_fu_2330_p2 = ($signed(6'd61) - $signed(trunc_ln947_reg_3881));

assign sub_ln955_fu_2403_p2 = (32'd25 - sub_ln944_reg_3874_pp2_iter21_reg);

assign sub_ln964_fu_2493_p2 = (8'd8 - trunc_ln943_reg_3886_pp2_iter22_reg);

assign tmp_11_fu_1596_p4 = {{add_ln1192_11_fu_1590_p2[40:5]}};

assign tmp_13_fu_1665_p4 = {{add_ln1192_13_fu_1659_p2[40:5]}};

assign tmp_15_fu_1734_p4 = {{add_ln1192_15_fu_1728_p2[40:5]}};

assign tmp_17_fu_1803_p4 = {{add_ln1192_17_fu_1797_p2[40:5]}};

assign tmp_19_fu_1872_p4 = {{add_ln1192_19_fu_1866_p2[40:5]}};

assign tmp_1_fu_2504_p3 = {{p_Result_7_reg_3856_pp2_iter22_reg}, {add_ln964_fu_2498_p2}};

assign tmp_21_fu_1941_p4 = {{add_ln1192_21_fu_1935_p2[40:5]}};

assign tmp_23_fu_2010_p4 = {{add_ln1192_fu_2004_p2[40:5]}};

assign tmp_25_fu_2079_p4 = {{add_ln1192_24_fu_2073_p2[40:5]}};

assign tmp_27_fu_2148_p4 = {{add_ln1192_26_fu_2142_p2[40:5]}};

assign tmp_29_fu_2201_p4 = {{add_ln1192_28_fu_2195_p2[40:5]}};

assign tmp_2_fu_1253_p3 = {{trunc_ln708_s_fu_1243_p4}, {5'd0}};

assign tmp_3_fu_1320_p4 = {{add_ln1192_3_fu_1314_p2[40:5]}};

assign tmp_42_fu_1300_p3 = {{tmp_41_reg_3257}, {5'd0}};

assign tmp_44_fu_2314_p4 = {{lsb_index_fu_2309_p2[31:1]}};

assign tmp_45_fu_2378_p3 = lsb_index_reg_3891[32'd31];

assign tmp_5_fu_1389_p4 = {{add_ln1192_5_fu_1383_p2[40:5]}};

assign tmp_7_fu_1458_p4 = {{add_ln1192_7_fu_1452_p2[40:5]}};

assign tmp_9_fu_1527_p4 = {{add_ln1192_9_fu_1521_p2[40:5]}};


always @ (p_Result_3_fu_2276_p3) begin
    if (p_Result_3_fu_2276_p3[0] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd0;
    end else if (p_Result_3_fu_2276_p3[1] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd1;
    end else if (p_Result_3_fu_2276_p3[2] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd2;
    end else if (p_Result_3_fu_2276_p3[3] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd3;
    end else if (p_Result_3_fu_2276_p3[4] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd4;
    end else if (p_Result_3_fu_2276_p3[5] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd5;
    end else if (p_Result_3_fu_2276_p3[6] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd6;
    end else if (p_Result_3_fu_2276_p3[7] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd7;
    end else if (p_Result_3_fu_2276_p3[8] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd8;
    end else if (p_Result_3_fu_2276_p3[9] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd9;
    end else if (p_Result_3_fu_2276_p3[10] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd10;
    end else if (p_Result_3_fu_2276_p3[11] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd11;
    end else if (p_Result_3_fu_2276_p3[12] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd12;
    end else if (p_Result_3_fu_2276_p3[13] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd13;
    end else if (p_Result_3_fu_2276_p3[14] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd14;
    end else if (p_Result_3_fu_2276_p3[15] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd15;
    end else if (p_Result_3_fu_2276_p3[16] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd16;
    end else if (p_Result_3_fu_2276_p3[17] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd17;
    end else if (p_Result_3_fu_2276_p3[18] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd18;
    end else if (p_Result_3_fu_2276_p3[19] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd19;
    end else if (p_Result_3_fu_2276_p3[20] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd20;
    end else if (p_Result_3_fu_2276_p3[21] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd21;
    end else if (p_Result_3_fu_2276_p3[22] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd22;
    end else if (p_Result_3_fu_2276_p3[23] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd23;
    end else if (p_Result_3_fu_2276_p3[24] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd24;
    end else if (p_Result_3_fu_2276_p3[25] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd25;
    end else if (p_Result_3_fu_2276_p3[26] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd26;
    end else if (p_Result_3_fu_2276_p3[27] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd27;
    end else if (p_Result_3_fu_2276_p3[28] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd28;
    end else if (p_Result_3_fu_2276_p3[29] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd29;
    end else if (p_Result_3_fu_2276_p3[30] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd30;
    end else if (p_Result_3_fu_2276_p3[31] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd31;
    end else if (p_Result_3_fu_2276_p3[32] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd32;
    end else if (p_Result_3_fu_2276_p3[33] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd33;
    end else if (p_Result_3_fu_2276_p3[34] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd34;
    end else if (p_Result_3_fu_2276_p3[35] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd35;
    end else if (p_Result_3_fu_2276_p3[36] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd36;
    end else if (p_Result_3_fu_2276_p3[37] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd37;
    end else if (p_Result_3_fu_2276_p3[38] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd38;
    end else if (p_Result_3_fu_2276_p3[39] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd39;
    end else if (p_Result_3_fu_2276_p3[40] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd40;
    end else if (p_Result_3_fu_2276_p3[41] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd41;
    end else if (p_Result_3_fu_2276_p3[42] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd42;
    end else if (p_Result_3_fu_2276_p3[43] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd43;
    end else if (p_Result_3_fu_2276_p3[44] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd44;
    end else if (p_Result_3_fu_2276_p3[45] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd45;
    end else if (p_Result_3_fu_2276_p3[46] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd46;
    end else if (p_Result_3_fu_2276_p3[47] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd47;
    end else if (p_Result_3_fu_2276_p3[48] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd48;
    end else if (p_Result_3_fu_2276_p3[49] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd49;
    end else if (p_Result_3_fu_2276_p3[50] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd50;
    end else if (p_Result_3_fu_2276_p3[51] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd51;
    end else if (p_Result_3_fu_2276_p3[52] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd52;
    end else if (p_Result_3_fu_2276_p3[53] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd53;
    end else if (p_Result_3_fu_2276_p3[54] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd54;
    end else if (p_Result_3_fu_2276_p3[55] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd55;
    end else if (p_Result_3_fu_2276_p3[56] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd56;
    end else if (p_Result_3_fu_2276_p3[57] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd57;
    end else if (p_Result_3_fu_2276_p3[58] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd58;
    end else if (p_Result_3_fu_2276_p3[59] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd59;
    end else if (p_Result_3_fu_2276_p3[60] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd60;
    end else if (p_Result_3_fu_2276_p3[61] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd61;
    end else if (p_Result_3_fu_2276_p3[62] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd62;
    end else if (p_Result_3_fu_2276_p3[63] == 1'b1) begin
        tmp_fu_2283_p3 = 64'd63;
    end else begin
        tmp_fu_2283_p3 = 64'd64;
    end
end

assign trunc_ln708_s_fu_1243_p4 = {{add_ln1192_1_fu_1237_p2[38:5]}};

assign trunc_ln743_fu_2523_p1 = p_Result_9_fu_2511_p5[31:0];

assign trunc_ln943_fu_2305_p1 = tmp_fu_2283_p3[7:0];

assign trunc_ln947_fu_2301_p1 = sub_ln944_fu_2295_p2[5:0];

assign xor_ln949_fu_2385_p2 = (tmp_45_fu_2378_p3 ^ 1'd1);

assign zext_ln101_fu_1056_p1 = j_reg_987;

assign zext_ln947_fu_2335_p1 = sub_ln947_fu_2330_p2;

assign zext_ln949_fu_2345_p1 = lsb_index_fu_2309_p2;

assign zext_ln951_1_fu_2483_p1 = m_4_reg_3913;

assign zext_ln951_fu_2451_p1 = m_fu_2444_p3;

assign zext_ln954_fu_2428_p1 = add_ln954_fu_2423_p2;

assign zext_ln955_fu_2408_p1 = sub_ln955_fu_2403_p2;

assign zext_ln961_fu_2455_p1 = select_ln954_fu_2437_p3;

always @ (posedge ap_clk) begin
    i_2_cast_reg_3098[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter6_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter7_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter8_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter9_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter10_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter11_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter12_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter13_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter14_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter15_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter16_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter17_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter18_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter19_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter20_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter21_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter22_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i_2_cast_reg_3098_pp2_iter23_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //e2e_system_correlator
