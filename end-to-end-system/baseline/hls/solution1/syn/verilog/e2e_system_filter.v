// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module e2e_system_filter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_read,
        output_signal_V_address0,
        output_signal_V_ce0,
        output_signal_V_we0,
        output_signal_V_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state20 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input_read;
output  [7:0] output_signal_V_address0;
output   output_signal_V_ce0;
output   output_signal_V_we0;
output  [35:0] output_signal_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_signal_V_ce0;
reg output_signal_V_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] i_reg_211;
reg   [7:0] i_reg_211_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
wire    ap_block_state16_pp0_stage0_iter12;
wire    ap_block_state17_pp0_stage0_iter13;
wire    ap_block_state18_pp0_stage0_iter14;
wire    ap_block_state19_pp0_stage0_iter15;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] i_reg_211_pp0_iter2_reg;
reg   [7:0] i_reg_211_pp0_iter3_reg;
reg   [7:0] i_reg_211_pp0_iter4_reg;
reg   [7:0] i_reg_211_pp0_iter5_reg;
reg   [7:0] i_reg_211_pp0_iter6_reg;
reg   [7:0] i_reg_211_pp0_iter7_reg;
reg   [7:0] i_reg_211_pp0_iter8_reg;
reg   [7:0] i_reg_211_pp0_iter9_reg;
reg   [7:0] i_reg_211_pp0_iter10_reg;
reg   [7:0] i_reg_211_pp0_iter11_reg;
reg   [7:0] i_reg_211_pp0_iter12_reg;
reg   [7:0] i_reg_211_pp0_iter13_reg;
reg   [7:0] i_reg_211_pp0_iter14_reg;
reg  signed [35:0] empty_54_reg_223;
reg  signed [35:0] empty_55_reg_234;
reg   [0:0] tmp_11_reg_1546;
wire   [63:0] ireg_fu_261_p1;
reg   [63:0] ireg_reg_1551;
wire    ap_CS_fsm_state2;
reg   [0:0] p_Result_s_reg_1557;
wire   [0:0] icmp_ln571_fu_277_p2;
reg   [0:0] icmp_ln571_reg_1562;
wire   [35:0] select_ln588_fu_283_p3;
reg   [35:0] select_ln588_reg_1570;
wire    ap_CS_fsm_state3;
wire   [0:0] xor_ln571_fu_290_p2;
reg   [0:0] xor_ln571_reg_1576;
wire   [0:0] icmp_ln48_fu_295_p2;
reg   [0:0] icmp_ln48_reg_1581;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter1_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter2_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter3_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter4_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter5_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter6_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter7_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter8_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter9_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter10_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter11_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter12_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter13_reg;
reg   [0:0] icmp_ln48_reg_1581_pp0_iter14_reg;
wire   [7:0] add_ln48_fu_301_p2;
reg   [7:0] add_ln48_reg_1585;
reg    ap_enable_reg_pp0_iter0;
wire   [53:0] select_ln570_fu_341_p3;
reg   [53:0] select_ln570_reg_1590;
wire   [11:0] F2_fu_348_p2;
reg   [11:0] F2_reg_1595;
wire   [35:0] trunc_ln583_fu_354_p1;
reg   [35:0] trunc_ln583_reg_1603;
reg   [35:0] trunc_ln583_reg_1603_pp0_iter1_reg;
wire   [0:0] icmp_ln581_fu_358_p2;
reg   [0:0] icmp_ln581_reg_1610;
wire   [0:0] icmp_ln582_fu_381_p2;
reg   [0:0] icmp_ln582_reg_1618;
wire   [0:0] icmp_ln585_fu_386_p2;
reg   [0:0] icmp_ln585_reg_1626;
wire   [0:0] icmp_ln603_fu_392_p2;
reg   [0:0] icmp_ln603_reg_1633;
wire  signed [31:0] sext_ln586_fu_398_p1;
reg  signed [31:0] sext_ln586_reg_1639;
wire   [35:0] trunc_ln586_fu_411_p1;
reg   [35:0] trunc_ln586_reg_1644;
wire   [0:0] icmp_ln61_fu_415_p2;
reg   [0:0] icmp_ln61_reg_1650;
reg  signed [35:0] p_load7_reg_1655;
reg  signed [35:0] p_load7_reg_1655_pp0_iter3_reg;
reg  signed [35:0] p_load7_reg_1655_pp0_iter4_reg;
reg  signed [35:0] p_load_reg_1661;
reg  signed [35:0] p_load_reg_1661_pp0_iter3_reg;
reg  signed [35:0] p_load_reg_1661_pp0_iter4_reg;
wire  signed [35:0] select_ln585_1_fu_525_p3;
reg  signed [35:0] select_ln585_1_reg_1667;
reg    ap_enable_reg_pp0_iter2;
wire  signed [35:0] select_ln585_3_fu_612_p3;
reg  signed [35:0] select_ln585_3_reg_1673;
wire   [62:0] grp_fu_623_p2;
reg   [62:0] mul_ln1118_2_reg_1699;
reg   [62:0] mul_ln1118_2_reg_1699_pp0_iter4_reg;
reg   [62:0] mul_ln1118_2_reg_1699_pp0_iter5_reg;
wire   [62:0] grp_fu_633_p2;
reg   [62:0] mul_ln1118_3_reg_1704;
reg   [62:0] mul_ln1118_3_reg_1704_pp0_iter4_reg;
reg   [62:0] mul_ln1118_3_reg_1704_pp0_iter5_reg;
wire   [59:0] grp_fu_642_p2;
reg   [59:0] mul_ln1118_reg_1709;
wire   [61:0] grp_fu_651_p2;
reg   [61:0] mul_ln1118_1_reg_1714;
reg  signed [35:0] p_load11_reg_1729;
reg  signed [35:0] p_load11_reg_1729_pp0_iter6_reg;
reg  signed [35:0] p_load8_reg_1735;
reg   [28:0] trunc_ln4_reg_1740;
wire   [61:0] grp_fu_660_p2;
reg   [61:0] mul_ln1118_4_reg_1745;
wire   [61:0] grp_fu_669_p2;
reg   [61:0] mul_ln1118_5_reg_1750;
reg  signed [35:0] p_load10_reg_1765;
wire   [62:0] add_ln1192_3_fu_777_p2;
reg   [62:0] add_ln1192_3_reg_1770;
reg   [30:0] tmp_12_reg_1775;
wire   [63:0] grp_fu_719_p2;
reg   [63:0] mul_ln1118_6_reg_1780;
wire   [64:0] grp_fu_729_p2;
reg   [64:0] mul_ln1118_7_reg_1785;
reg  signed [35:0] p_load15_reg_1800;
reg  signed [35:0] p_load14_reg_1806;
wire   [65:0] grp_fu_796_p2;
reg   [65:0] mul_ln1118_8_reg_1812;
wire   [65:0] grp_fu_806_p2;
reg   [65:0] mul_ln1118_9_reg_1817;
reg   [35:0] tmp_3_reg_1822;
reg  signed [35:0] p_load17_reg_1837;
reg  signed [35:0] p_load17_reg_1837_pp0_iter9_reg;
reg  signed [35:0] p_load16_reg_1843;
reg  signed [35:0] p_load16_reg_1843_pp0_iter9_reg;
wire   [66:0] grp_fu_916_p2;
reg   [66:0] mul_ln1118_10_reg_1849;
wire   [67:0] grp_fu_926_p2;
reg   [67:0] mul_ln1118_11_reg_1854;
reg   [35:0] tmp_4_reg_1859;
wire   [67:0] grp_fu_988_p2;
reg   [67:0] mul_ln1118_12_reg_1874;
wire   [66:0] grp_fu_997_p2;
reg   [66:0] mul_ln1118_13_reg_1879;
reg   [35:0] tmp_5_reg_1884;
reg  signed [35:0] p_load21_reg_1899;
reg  signed [35:0] p_load20_reg_1905;
wire   [65:0] grp_fu_1041_p2;
reg   [65:0] mul_ln1118_14_reg_1911;
wire   [65:0] grp_fu_1050_p2;
reg   [65:0] mul_ln1118_15_reg_1916;
reg   [35:0] tmp_6_reg_1921;
reg  signed [35:0] p_load23_reg_1936;
reg  signed [35:0] p_load22_reg_1942;
wire   [64:0] grp_fu_1125_p2;
reg   [64:0] mul_ln1118_16_reg_1948;
wire   [63:0] grp_fu_1135_p2;
reg   [63:0] mul_ln1118_17_reg_1953;
reg   [35:0] tmp_7_reg_1958;
wire   [61:0] grp_fu_1197_p2;
reg   [61:0] mul_ln1118_18_reg_1973;
wire   [61:0] grp_fu_1206_p2;
reg   [61:0] mul_ln1118_19_reg_1978;
reg   [35:0] tmp_8_reg_1983;
wire   [62:0] grp_fu_1268_p2;
reg   [62:0] mul_ln1118_20_reg_2008;
wire   [62:0] grp_fu_1277_p2;
reg   [62:0] mul_ln1118_21_reg_2013;
reg   [35:0] tmp_9_reg_2018;
wire   [61:0] grp_fu_1287_p2;
reg   [61:0] mul_ln1118_22_reg_2023;
wire   [59:0] grp_fu_1297_p2;
reg   [59:0] mul_ln1118_23_reg_2028;
wire   [61:0] add_ln1192_21_fu_1374_p2;
reg   [61:0] add_ln1192_21_reg_2033;
reg   [35:0] tmp_s_reg_2038;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_condition_pp0_exit_iter12_state16;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg   [7:0] ap_phi_mux_i_phi_fu_215_p4;
wire    ap_block_pp0_stage0;
reg  signed [35:0] ap_phi_mux_empty_54_phi_fu_227_p4;
reg  signed [35:0] ap_phi_mux_empty_55_phi_fu_238_p4;
wire   [63:0] i_cast_fu_1389_p1;
reg  signed [35:0] empty_fu_112;
reg  signed [35:0] empty_35_fu_116;
reg   [35:0] empty_36_fu_120;
reg   [35:0] empty_37_fu_124;
reg   [35:0] empty_38_fu_128;
reg   [35:0] empty_39_fu_132;
reg  signed [35:0] empty_40_fu_136;
reg  signed [35:0] empty_41_fu_140;
reg   [35:0] empty_42_fu_144;
reg   [35:0] empty_43_fu_148;
reg   [35:0] empty_44_fu_152;
reg   [35:0] empty_45_fu_156;
reg  signed [35:0] empty_46_fu_160;
reg  signed [35:0] empty_47_fu_164;
reg   [35:0] empty_48_fu_168;
reg  signed [35:0] empty_49_fu_172;
reg  signed [35:0] empty_50_fu_176;
reg  signed [35:0] empty_51_fu_180;
reg   [35:0] empty_52_fu_184;
reg   [35:0] empty_53_fu_188;
wire   [31:0] grp_fu_245_p0;
wire   [63:0] grp_fu_245_p1;
wire   [62:0] trunc_ln557_fu_265_p1;
wire   [10:0] exp_tmp_V_fu_307_p4;
wire   [51:0] trunc_ln565_fu_320_p1;
wire   [52:0] p_Result_1_fu_323_p3;
wire   [53:0] zext_ln569_fu_331_p1;
wire   [53:0] man_V_1_fu_335_p2;
wire   [11:0] zext_ln455_fu_316_p1;
wire   [11:0] add_ln581_fu_363_p2;
wire   [11:0] sub_ln581_fu_368_p2;
wire  signed [11:0] sh_amt_fu_373_p3;
wire   [53:0] zext_ln586_fu_402_p1;
wire   [53:0] ashr_ln586_fu_406_p2;
wire   [35:0] zext_ln604_fu_437_p1;
wire   [0:0] and_ln582_fu_445_p2;
wire   [0:0] or_ln582_fu_456_p2;
wire   [0:0] xor_ln582_fu_460_p2;
wire   [0:0] and_ln581_fu_466_p2;
wire   [0:0] and_ln585_fu_471_p2;
wire   [35:0] select_ln582_fu_449_p3;
wire   [0:0] or_ln581_fu_483_p2;
wire   [0:0] xor_ln581_fu_488_p2;
wire   [0:0] and_ln603_fu_494_p2;
wire   [35:0] shl_ln604_fu_440_p2;
wire   [35:0] select_ln585_fu_476_p3;
wire   [35:0] select_ln603_fu_499_p3;
wire   [0:0] xor_ln585_fu_514_p2;
wire   [0:0] and_ln585_1_fu_519_p2;
wire   [35:0] select_ln571_fu_507_p3;
wire   [0:0] or_ln61_fu_532_p2;
wire   [0:0] xor_ln61_fu_536_p2;
wire   [0:0] and_ln582_1_fu_542_p2;
wire   [0:0] or_ln582_1_fu_554_p2;
wire   [0:0] xor_ln582_1_fu_559_p2;
wire   [0:0] and_ln581_1_fu_565_p2;
wire   [0:0] and_ln585_2_fu_570_p2;
wire   [35:0] select_ln582_1_fu_547_p3;
wire   [0:0] or_ln581_1_fu_582_p2;
wire   [0:0] xor_ln581_1_fu_587_p2;
wire   [0:0] and_ln603_1_fu_593_p2;
wire   [35:0] select_ln585_2_fu_575_p3;
wire   [0:0] and_ln585_3_fu_606_p2;
wire   [35:0] select_ln603_1_fu_598_p3;
wire  signed [27:0] grp_fu_623_p0;
wire  signed [27:0] grp_fu_633_p0;
wire   [24:0] grp_fu_642_p0;
wire   [26:0] grp_fu_651_p0;
wire   [26:0] grp_fu_660_p0;
wire  signed [26:0] grp_fu_669_p0;
wire  signed [61:0] sext_ln703_fu_697_p1;
wire   [61:0] add_ln1192_fu_700_p2;
wire   [28:0] grp_fu_719_p0;
wire   [29:0] grp_fu_729_p0;
wire  signed [63:0] sext_ln1192_fu_745_p1;
wire  signed [63:0] sext_ln703_1_fu_742_p1;
wire   [61:0] tmp_fu_754_p3;
wire   [63:0] add_ln1192_1_fu_748_p2;
wire  signed [63:0] sext_ln1192_9_fu_761_p1;
wire  signed [62:0] sext_ln1192_1_fu_774_p1;
wire  signed [62:0] sext_ln703_2_fu_771_p1;
wire   [63:0] add_ln1192_2_fu_765_p2;
wire  signed [30:0] grp_fu_796_p0;
wire  signed [30:0] grp_fu_806_p0;
wire   [63:0] tmp_13_fu_845_p3;
wire  signed [68:0] sext_ln728_fu_842_p1;
wire  signed [68:0] sext_ln728_1_fu_852_p1;
wire  signed [65:0] sext_ln1192_2_fu_865_p1;
wire  signed [65:0] sext_ln703_3_fu_862_p1;
wire   [65:0] add_ln1192_5_fu_868_p2;
wire   [68:0] add_ln1192_4_fu_856_p2;
wire   [35:0] tmp_2_fu_878_p4;
wire  signed [68:0] sext_ln728_2_fu_874_p1;
wire   [68:0] shl_ln728_2_fu_888_p3;
wire   [68:0] add_ln1192_6_fu_896_p2;
wire   [31:0] grp_fu_916_p0;
wire   [32:0] grp_fu_926_p0;
wire  signed [66:0] sext_ln1192_3_fu_949_p1;
wire  signed [66:0] sext_ln703_4_fu_946_p1;
wire   [66:0] add_ln1192_7_fu_952_p2;
wire  signed [68:0] sext_ln728_3_fu_958_p1;
wire   [68:0] shl_ln728_3_fu_962_p3;
wire   [68:0] add_ln1192_8_fu_969_p2;
wire   [32:0] grp_fu_988_p0;
wire   [31:0] grp_fu_997_p0;
wire  signed [68:0] sext_ln703_6_fu_1006_p1;
wire  signed [68:0] sext_ln703_5_fu_1003_p1;
wire   [68:0] add_ln1192_9_fu_1009_p2;
wire   [68:0] shl_ln728_4_fu_1015_p3;
wire   [68:0] add_ln1192_10_fu_1022_p2;
wire  signed [30:0] grp_fu_1041_p0;
wire  signed [30:0] grp_fu_1050_p0;
wire  signed [68:0] sext_ln703_8_fu_1089_p1;
wire  signed [68:0] sext_ln703_7_fu_1086_p1;
wire   [68:0] add_ln1192_11_fu_1092_p2;
wire   [68:0] shl_ln728_5_fu_1098_p3;
wire   [68:0] add_ln1192_12_fu_1105_p2;
wire   [29:0] grp_fu_1125_p0;
wire   [28:0] grp_fu_1135_p0;
wire  signed [66:0] sext_ln1192_4_fu_1158_p1;
wire  signed [66:0] sext_ln703_9_fu_1155_p1;
wire   [66:0] add_ln1192_13_fu_1161_p2;
wire  signed [68:0] sext_ln728_4_fu_1167_p1;
wire   [68:0] shl_ln728_6_fu_1171_p3;
wire   [68:0] add_ln1192_14_fu_1178_p2;
wire  signed [26:0] grp_fu_1197_p0;
wire   [26:0] grp_fu_1206_p0;
wire  signed [65:0] sext_ln1192_5_fu_1229_p1;
wire  signed [65:0] sext_ln703_10_fu_1226_p1;
wire   [65:0] add_ln1192_15_fu_1232_p2;
wire  signed [68:0] sext_ln728_5_fu_1238_p1;
wire   [68:0] shl_ln728_7_fu_1242_p3;
wire   [68:0] add_ln1192_16_fu_1249_p2;
wire  signed [27:0] grp_fu_1268_p0;
wire  signed [27:0] grp_fu_1277_p0;
wire   [26:0] grp_fu_1287_p0;
wire   [24:0] grp_fu_1297_p0;
wire  signed [62:0] sext_ln1192_6_fu_1306_p1;
wire  signed [62:0] sext_ln703_11_fu_1303_p1;
wire   [62:0] add_ln1192_17_fu_1309_p2;
wire  signed [68:0] sext_ln728_6_fu_1315_p1;
wire   [68:0] shl_ln728_8_fu_1319_p3;
wire   [68:0] add_ln1192_18_fu_1326_p2;
wire  signed [63:0] sext_ln1192_7_fu_1345_p1;
wire  signed [63:0] sext_ln703_12_fu_1342_p1;
wire   [63:0] add_ln1192_19_fu_1348_p2;
wire  signed [68:0] sext_ln728_7_fu_1354_p1;
wire   [68:0] shl_ln728_9_fu_1358_p3;
wire  signed [61:0] sext_ln1192_8_fu_1371_p1;
wire   [68:0] add_ln1192_20_fu_1365_p2;
wire  signed [68:0] sext_ln728_8_fu_1394_p1;
wire   [68:0] shl_ln728_s_fu_1397_p3;
wire   [68:0] add_ln1192_22_fu_1404_p2;
wire    ap_CS_fsm_state20;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

e2e_system_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_245_p0),
    .ce(1'b1),
    .dout(grp_fu_245_p1)
);

e2e_system_mul_28s_36s_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 63 ))
mul_28s_36s_63_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_623_p0),
    .din1(ap_phi_mux_empty_55_phi_fu_238_p4),
    .ce(1'b1),
    .dout(grp_fu_623_p2)
);

e2e_system_mul_28s_36s_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 63 ))
mul_28s_36s_63_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_633_p0),
    .din1(ap_phi_mux_empty_54_phi_fu_227_p4),
    .ce(1'b1),
    .dout(grp_fu_633_p2)
);

e2e_system_mul_25ns_36s_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 60 ))
mul_25ns_36s_60_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_642_p0),
    .din1(select_ln585_1_reg_1667),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

e2e_system_mul_27ns_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27ns_36s_62_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_651_p0),
    .din1(select_ln585_3_reg_1673),
    .ce(1'b1),
    .dout(grp_fu_651_p2)
);

e2e_system_mul_27ns_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27ns_36s_62_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_660_p0),
    .din1(p_load7_reg_1655_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_660_p2)
);

e2e_system_mul_27s_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27s_36s_62_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_669_p0),
    .din1(p_load_reg_1661_pp0_iter3_reg),
    .ce(1'b1),
    .dout(grp_fu_669_p2)
);

e2e_system_mul_29ns_36s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 64 ))
mul_29ns_36s_64_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_719_p0),
    .din1(empty_50_fu_176),
    .ce(1'b1),
    .dout(grp_fu_719_p2)
);

e2e_system_mul_30ns_36s_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 65 ))
mul_30ns_36s_65_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_729_p0),
    .din1(empty_51_fu_180),
    .ce(1'b1),
    .dout(grp_fu_729_p2)
);

e2e_system_mul_31s_36s_66_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 66 ))
mul_31s_36s_66_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_796_p0),
    .din1(p_load11_reg_1729),
    .ce(1'b1),
    .dout(grp_fu_796_p2)
);

e2e_system_mul_31s_36s_66_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 66 ))
mul_31s_36s_66_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_806_p0),
    .din1(empty_49_fu_172),
    .ce(1'b1),
    .dout(grp_fu_806_p2)
);

e2e_system_mul_32ns_36s_67_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 67 ))
mul_32ns_36s_67_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_916_p0),
    .din1(empty_46_fu_160),
    .ce(1'b1),
    .dout(grp_fu_916_p2)
);

e2e_system_mul_33ns_36s_68_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 68 ))
mul_33ns_36s_68_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_926_p0),
    .din1(empty_47_fu_164),
    .ce(1'b1),
    .dout(grp_fu_926_p2)
);

e2e_system_mul_33ns_36s_68_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 68 ))
mul_33ns_36s_68_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(p_load15_reg_1800),
    .ce(1'b1),
    .dout(grp_fu_988_p2)
);

e2e_system_mul_32ns_36s_67_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 67 ))
mul_32ns_36s_67_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_997_p0),
    .din1(p_load14_reg_1806),
    .ce(1'b1),
    .dout(grp_fu_997_p2)
);

e2e_system_mul_31s_36s_66_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 66 ))
mul_31s_36s_66_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1041_p0),
    .din1(p_load17_reg_1837),
    .ce(1'b1),
    .dout(grp_fu_1041_p2)
);

e2e_system_mul_31s_36s_66_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 66 ))
mul_31s_36s_66_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1050_p0),
    .din1(p_load16_reg_1843),
    .ce(1'b1),
    .dout(grp_fu_1050_p2)
);

e2e_system_mul_30ns_36s_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 65 ))
mul_30ns_36s_65_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1125_p0),
    .din1(empty_40_fu_136),
    .ce(1'b1),
    .dout(grp_fu_1125_p2)
);

e2e_system_mul_29ns_36s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 64 ))
mul_29ns_36s_64_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1135_p0),
    .din1(empty_41_fu_140),
    .ce(1'b1),
    .dout(grp_fu_1135_p2)
);

e2e_system_mul_27s_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27s_36s_62_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1197_p0),
    .din1(p_load21_reg_1899),
    .ce(1'b1),
    .dout(grp_fu_1197_p2)
);

e2e_system_mul_27ns_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27ns_36s_62_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1206_p0),
    .din1(p_load20_reg_1905),
    .ce(1'b1),
    .dout(grp_fu_1206_p2)
);

e2e_system_mul_28s_36s_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 63 ))
mul_28s_36s_63_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1268_p0),
    .din1(p_load23_reg_1936),
    .ce(1'b1),
    .dout(grp_fu_1268_p2)
);

e2e_system_mul_28s_36s_63_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 63 ))
mul_28s_36s_63_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1277_p0),
    .din1(p_load22_reg_1942),
    .ce(1'b1),
    .dout(grp_fu_1277_p2)
);

e2e_system_mul_27ns_36s_62_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 62 ))
mul_27ns_36s_62_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1287_p0),
    .din1(empty_fu_112),
    .ce(1'b1),
    .dout(grp_fu_1287_p2)
);

e2e_system_mul_25ns_36s_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 60 ))
mul_25ns_36s_60_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1297_p0),
    .din1(empty_35_fu_116),
    .ce(1'b1),
    .dout(grp_fu_1297_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter12_state16)) begin
                ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter11;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter15 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter2_reg == 1'd0))) begin
        empty_54_reg_223 <= select_ln585_3_reg_1673;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_54_reg_223 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter2_reg == 1'd0))) begin
        empty_55_reg_234 <= select_ln585_1_reg_1667;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_55_reg_234 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_reg_1581 == 1'd0))) begin
        i_reg_211 <= add_ln48_reg_1585;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_211 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_fu_295_p2 == 1'd0))) begin
        F2_reg_1595 <= F2_fu_348_p2;
        select_ln570_reg_1590 <= select_ln570_fu_341_p3;
        trunc_ln583_reg_1603 <= trunc_ln583_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter13_reg == 1'd0))) begin
        add_ln1192_21_reg_2033 <= add_ln1192_21_fu_1374_p2;
        tmp_s_reg_2038 <= {{add_ln1192_20_fu_1365_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter5_reg == 1'd0))) begin
        add_ln1192_3_reg_1770 <= add_ln1192_3_fu_777_p2;
        mul_ln1118_6_reg_1780 <= grp_fu_719_p2;
        mul_ln1118_7_reg_1785 <= grp_fu_729_p2;
        tmp_12_reg_1775 <= {{add_ln1192_2_fu_765_p2[63:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln48_reg_1585 <= add_ln48_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        empty_35_fu_116 <= p_load22_reg_1942;
        empty_fu_112 <= p_load23_reg_1936;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        empty_36_fu_120 <= p_load21_reg_1899;
        empty_37_fu_124 <= p_load20_reg_1905;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        empty_38_fu_128 <= empty_40_fu_136;
        empty_39_fu_132 <= empty_41_fu_140;
        empty_40_fu_136 <= p_load17_reg_1837_pp0_iter9_reg;
        empty_41_fu_140 <= p_load16_reg_1843_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        empty_42_fu_144 <= p_load15_reg_1800;
        empty_43_fu_148 <= p_load14_reg_1806;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        empty_44_fu_152 <= empty_46_fu_160;
        empty_45_fu_156 <= empty_47_fu_164;
        empty_46_fu_160 <= p_load11_reg_1729_pp0_iter6_reg;
        empty_47_fu_164 <= p_load10_reg_1765;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        empty_48_fu_168 <= empty_50_fu_176;
        empty_50_fu_176 <= p_load7_reg_1655_pp0_iter4_reg;
        empty_51_fu_180 <= p_load_reg_1661_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        empty_49_fu_172 <= p_load8_reg_1735;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        empty_52_fu_184 <= ap_phi_mux_empty_55_phi_fu_238_p4;
        empty_53_fu_188 <= ap_phi_mux_empty_54_phi_fu_227_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_211_pp0_iter10_reg <= i_reg_211_pp0_iter9_reg;
        i_reg_211_pp0_iter11_reg <= i_reg_211_pp0_iter10_reg;
        i_reg_211_pp0_iter12_reg <= i_reg_211_pp0_iter11_reg;
        i_reg_211_pp0_iter13_reg <= i_reg_211_pp0_iter12_reg;
        i_reg_211_pp0_iter14_reg <= i_reg_211_pp0_iter13_reg;
        i_reg_211_pp0_iter2_reg <= i_reg_211_pp0_iter1_reg;
        i_reg_211_pp0_iter3_reg <= i_reg_211_pp0_iter2_reg;
        i_reg_211_pp0_iter4_reg <= i_reg_211_pp0_iter3_reg;
        i_reg_211_pp0_iter5_reg <= i_reg_211_pp0_iter4_reg;
        i_reg_211_pp0_iter6_reg <= i_reg_211_pp0_iter5_reg;
        i_reg_211_pp0_iter7_reg <= i_reg_211_pp0_iter6_reg;
        i_reg_211_pp0_iter8_reg <= i_reg_211_pp0_iter7_reg;
        i_reg_211_pp0_iter9_reg <= i_reg_211_pp0_iter8_reg;
        icmp_ln48_reg_1581_pp0_iter10_reg <= icmp_ln48_reg_1581_pp0_iter9_reg;
        icmp_ln48_reg_1581_pp0_iter11_reg <= icmp_ln48_reg_1581_pp0_iter10_reg;
        icmp_ln48_reg_1581_pp0_iter12_reg <= icmp_ln48_reg_1581_pp0_iter11_reg;
        icmp_ln48_reg_1581_pp0_iter13_reg <= icmp_ln48_reg_1581_pp0_iter12_reg;
        icmp_ln48_reg_1581_pp0_iter14_reg <= icmp_ln48_reg_1581_pp0_iter13_reg;
        icmp_ln48_reg_1581_pp0_iter2_reg <= icmp_ln48_reg_1581_pp0_iter1_reg;
        icmp_ln48_reg_1581_pp0_iter3_reg <= icmp_ln48_reg_1581_pp0_iter2_reg;
        icmp_ln48_reg_1581_pp0_iter4_reg <= icmp_ln48_reg_1581_pp0_iter3_reg;
        icmp_ln48_reg_1581_pp0_iter5_reg <= icmp_ln48_reg_1581_pp0_iter4_reg;
        icmp_ln48_reg_1581_pp0_iter6_reg <= icmp_ln48_reg_1581_pp0_iter5_reg;
        icmp_ln48_reg_1581_pp0_iter7_reg <= icmp_ln48_reg_1581_pp0_iter6_reg;
        icmp_ln48_reg_1581_pp0_iter8_reg <= icmp_ln48_reg_1581_pp0_iter7_reg;
        icmp_ln48_reg_1581_pp0_iter9_reg <= icmp_ln48_reg_1581_pp0_iter8_reg;
        mul_ln1118_2_reg_1699_pp0_iter4_reg <= mul_ln1118_2_reg_1699;
        mul_ln1118_2_reg_1699_pp0_iter5_reg <= mul_ln1118_2_reg_1699_pp0_iter4_reg;
        mul_ln1118_3_reg_1704_pp0_iter4_reg <= mul_ln1118_3_reg_1704;
        mul_ln1118_3_reg_1704_pp0_iter5_reg <= mul_ln1118_3_reg_1704_pp0_iter4_reg;
        p_load10_reg_1765 <= empty_49_fu_172;
        p_load11_reg_1729 <= empty_48_fu_168;
        p_load11_reg_1729_pp0_iter6_reg <= p_load11_reg_1729;
        p_load14_reg_1806 <= empty_45_fu_156;
        p_load15_reg_1800 <= empty_44_fu_152;
        p_load16_reg_1843 <= empty_43_fu_148;
        p_load16_reg_1843_pp0_iter9_reg <= p_load16_reg_1843;
        p_load17_reg_1837 <= empty_42_fu_144;
        p_load17_reg_1837_pp0_iter9_reg <= p_load17_reg_1837;
        p_load20_reg_1905 <= empty_39_fu_132;
        p_load21_reg_1899 <= empty_38_fu_128;
        p_load22_reg_1942 <= empty_37_fu_124;
        p_load23_reg_1936 <= empty_36_fu_120;
        p_load7_reg_1655 <= empty_52_fu_184;
        p_load7_reg_1655_pp0_iter3_reg <= p_load7_reg_1655;
        p_load7_reg_1655_pp0_iter4_reg <= p_load7_reg_1655_pp0_iter3_reg;
        p_load8_reg_1735 <= empty_51_fu_180;
        p_load_reg_1661 <= empty_53_fu_188;
        p_load_reg_1661_pp0_iter3_reg <= p_load_reg_1661;
        p_load_reg_1661_pp0_iter4_reg <= p_load_reg_1661_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_211_pp0_iter1_reg <= i_reg_211;
        icmp_ln48_reg_1581 <= icmp_ln48_fu_295_p2;
        icmp_ln48_reg_1581_pp0_iter1_reg <= icmp_ln48_reg_1581;
        trunc_ln583_reg_1603_pp0_iter1_reg <= trunc_ln583_reg_1603;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln571_reg_1562 <= icmp_ln571_fu_277_p2;
        ireg_reg_1551 <= ireg_fu_261_p1;
        p_Result_s_reg_1557 <= ireg_fu_261_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_reg_1581 == 1'd0))) begin
        icmp_ln581_reg_1610 <= icmp_ln581_fu_358_p2;
        icmp_ln582_reg_1618 <= icmp_ln582_fu_381_p2;
        icmp_ln585_reg_1626 <= icmp_ln585_fu_386_p2;
        icmp_ln603_reg_1633 <= icmp_ln603_fu_392_p2;
        icmp_ln61_reg_1650 <= icmp_ln61_fu_415_p2;
        sext_ln586_reg_1639 <= sext_ln586_fu_398_p1;
        trunc_ln586_reg_1644 <= trunc_ln586_fu_411_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter7_reg == 1'd0))) begin
        mul_ln1118_10_reg_1849 <= grp_fu_916_p2;
        mul_ln1118_11_reg_1854 <= grp_fu_926_p2;
        tmp_4_reg_1859 <= {{add_ln1192_8_fu_969_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter8_reg == 1'd0))) begin
        mul_ln1118_12_reg_1874 <= grp_fu_988_p2;
        mul_ln1118_13_reg_1879 <= grp_fu_997_p2;
        tmp_5_reg_1884 <= {{add_ln1192_10_fu_1022_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter9_reg == 1'd0))) begin
        mul_ln1118_14_reg_1911 <= grp_fu_1041_p2;
        mul_ln1118_15_reg_1916 <= grp_fu_1050_p2;
        tmp_6_reg_1921 <= {{add_ln1192_12_fu_1105_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter10_reg == 1'd0))) begin
        mul_ln1118_16_reg_1948 <= grp_fu_1125_p2;
        mul_ln1118_17_reg_1953 <= grp_fu_1135_p2;
        tmp_7_reg_1958 <= {{add_ln1192_14_fu_1178_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter11_reg == 1'd0))) begin
        mul_ln1118_18_reg_1973 <= grp_fu_1197_p2;
        mul_ln1118_19_reg_1978 <= grp_fu_1206_p2;
        tmp_8_reg_1983 <= {{add_ln1192_16_fu_1249_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter3_reg == 1'd0))) begin
        mul_ln1118_1_reg_1714 <= grp_fu_651_p2;
        mul_ln1118_reg_1709 <= grp_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter12_reg == 1'd0))) begin
        mul_ln1118_20_reg_2008 <= grp_fu_1268_p2;
        mul_ln1118_21_reg_2013 <= grp_fu_1277_p2;
        mul_ln1118_22_reg_2023 <= grp_fu_1287_p2;
        mul_ln1118_23_reg_2028 <= grp_fu_1297_p2;
        tmp_9_reg_2018 <= {{add_ln1192_18_fu_1326_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter2_reg == 1'd0))) begin
        mul_ln1118_2_reg_1699 <= grp_fu_623_p2;
        mul_ln1118_3_reg_1704 <= grp_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter4_reg == 1'd0))) begin
        mul_ln1118_4_reg_1745 <= grp_fu_660_p2;
        mul_ln1118_5_reg_1750 <= grp_fu_669_p2;
        trunc_ln4_reg_1740 <= {{add_ln1192_fu_700_p2[61:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_1581_pp0_iter6_reg == 1'd0))) begin
        mul_ln1118_8_reg_1812 <= grp_fu_796_p2;
        mul_ln1118_9_reg_1817 <= grp_fu_806_p2;
        tmp_3_reg_1822 <= {{add_ln1192_6_fu_896_p2[68:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter1_reg == 1'd0))) begin
        select_ln585_1_reg_1667 <= select_ln585_1_fu_525_p3;
        select_ln585_3_reg_1673 <= select_ln585_3_fu_612_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln588_reg_1570 <= select_ln588_fu_283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_11_reg_1546 <= input_read[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln571_reg_1562 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        xor_ln571_reg_1576 <= xor_ln571_fu_290_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b0))) begin
        ap_condition_pp0_exit_iter12_state16 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter12_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_fu_295_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_empty_54_phi_fu_227_p4 = select_ln585_3_reg_1673;
    end else begin
        ap_phi_mux_empty_54_phi_fu_227_p4 = empty_54_reg_223;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_empty_55_phi_fu_238_p4 = select_ln585_1_reg_1667;
    end else begin
        ap_phi_mux_empty_55_phi_fu_238_p4 = empty_55_reg_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln48_reg_1581 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_215_p4 = add_ln48_reg_1585;
    end else begin
        ap_phi_mux_i_phi_fu_215_p4 = i_reg_211;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        output_signal_V_ce0 = 1'b1;
    end else begin
        output_signal_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln48_reg_1581_pp0_iter14_reg == 1'd0))) begin
        output_signal_V_we0 = 1'b1;
    end else begin
        output_signal_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter15 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter15 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_348_p2 = (12'd1075 - zext_ln455_fu_316_p1);

assign add_ln1192_10_fu_1022_p2 = (add_ln1192_9_fu_1009_p2 + shl_ln728_4_fu_1015_p3);

assign add_ln1192_11_fu_1092_p2 = ($signed(sext_ln703_8_fu_1089_p1) + $signed(sext_ln703_7_fu_1086_p1));

assign add_ln1192_12_fu_1105_p2 = (add_ln1192_11_fu_1092_p2 + shl_ln728_5_fu_1098_p3);

assign add_ln1192_13_fu_1161_p2 = ($signed(sext_ln1192_4_fu_1158_p1) + $signed(sext_ln703_9_fu_1155_p1));

assign add_ln1192_14_fu_1178_p2 = ($signed(sext_ln728_4_fu_1167_p1) + $signed(shl_ln728_6_fu_1171_p3));

assign add_ln1192_15_fu_1232_p2 = ($signed(sext_ln1192_5_fu_1229_p1) + $signed(sext_ln703_10_fu_1226_p1));

assign add_ln1192_16_fu_1249_p2 = ($signed(sext_ln728_5_fu_1238_p1) + $signed(shl_ln728_7_fu_1242_p3));

assign add_ln1192_17_fu_1309_p2 = ($signed(sext_ln1192_6_fu_1306_p1) + $signed(sext_ln703_11_fu_1303_p1));

assign add_ln1192_18_fu_1326_p2 = ($signed(sext_ln728_6_fu_1315_p1) + $signed(shl_ln728_8_fu_1319_p3));

assign add_ln1192_19_fu_1348_p2 = ($signed(sext_ln1192_7_fu_1345_p1) + $signed(sext_ln703_12_fu_1342_p1));

assign add_ln1192_1_fu_748_p2 = ($signed(sext_ln1192_fu_745_p1) + $signed(sext_ln703_1_fu_742_p1));

assign add_ln1192_20_fu_1365_p2 = ($signed(sext_ln728_7_fu_1354_p1) + $signed(shl_ln728_9_fu_1358_p3));

assign add_ln1192_21_fu_1374_p2 = ($signed(sext_ln1192_8_fu_1371_p1) + $signed(mul_ln1118_22_reg_2023));

assign add_ln1192_22_fu_1404_p2 = ($signed(sext_ln728_8_fu_1394_p1) + $signed(shl_ln728_s_fu_1397_p3));

assign add_ln1192_2_fu_765_p2 = ($signed(add_ln1192_1_fu_748_p2) + $signed(sext_ln1192_9_fu_761_p1));

assign add_ln1192_3_fu_777_p2 = ($signed(sext_ln1192_1_fu_774_p1) + $signed(sext_ln703_2_fu_771_p1));

assign add_ln1192_4_fu_856_p2 = ($signed(sext_ln728_fu_842_p1) + $signed(sext_ln728_1_fu_852_p1));

assign add_ln1192_5_fu_868_p2 = ($signed(sext_ln1192_2_fu_865_p1) + $signed(sext_ln703_3_fu_862_p1));

assign add_ln1192_6_fu_896_p2 = ($signed(sext_ln728_2_fu_874_p1) + $signed(shl_ln728_2_fu_888_p3));

assign add_ln1192_7_fu_952_p2 = ($signed(sext_ln1192_3_fu_949_p1) + $signed(sext_ln703_4_fu_946_p1));

assign add_ln1192_8_fu_969_p2 = ($signed(sext_ln728_3_fu_958_p1) + $signed(shl_ln728_3_fu_962_p3));

assign add_ln1192_9_fu_1009_p2 = ($signed(sext_ln703_6_fu_1006_p1) + $signed(sext_ln703_5_fu_1003_p1));

assign add_ln1192_fu_700_p2 = ($signed(sext_ln703_fu_697_p1) + $signed(mul_ln1118_1_reg_1714));

assign add_ln48_fu_301_p2 = (ap_phi_mux_i_phi_fu_215_p4 + 8'd1);

assign add_ln581_fu_363_p2 = ($signed(12'd4063) + $signed(F2_reg_1595));

assign and_ln581_1_fu_565_p2 = (xor_ln582_1_fu_559_p2 & icmp_ln581_reg_1610);

assign and_ln581_fu_466_p2 = (xor_ln582_fu_460_p2 & icmp_ln581_reg_1610);

assign and_ln582_1_fu_542_p2 = (xor_ln61_fu_536_p2 & icmp_ln582_reg_1618);

assign and_ln582_fu_445_p2 = (xor_ln571_reg_1576 & icmp_ln582_reg_1618);

assign and_ln585_1_fu_519_p2 = (xor_ln585_fu_514_p2 & and_ln581_fu_466_p2);

assign and_ln585_2_fu_570_p2 = (icmp_ln585_reg_1626 & and_ln581_1_fu_565_p2);

assign and_ln585_3_fu_606_p2 = (xor_ln585_fu_514_p2 & and_ln581_1_fu_565_p2);

assign and_ln585_fu_471_p2 = (icmp_ln585_reg_1626 & and_ln581_fu_466_p2);

assign and_ln603_1_fu_593_p2 = (xor_ln581_1_fu_587_p2 & icmp_ln603_reg_1633);

assign and_ln603_fu_494_p2 = (xor_ln581_fu_488_p2 & icmp_ln603_reg_1633);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln586_fu_406_p2 = $signed(select_ln570_reg_1590) >>> zext_ln586_fu_402_p1;

assign exp_tmp_V_fu_307_p4 = {{ireg_reg_1551[62:52]}};

assign grp_fu_1041_p0 = 66'd73786976293928978757;

assign grp_fu_1050_p0 = 66'd73786976294206683996;

assign grp_fu_1125_p0 = 65'd402315114;

assign grp_fu_1135_p0 = 64'd198583255;

assign grp_fu_1197_p0 = 62'd4611686018381583867;

assign grp_fu_1206_p0 = 62'd48005295;

assign grp_fu_1268_p0 = 63'd9223372036770541683;

assign grp_fu_1277_p0 = 63'd9223372036781645340;

assign grp_fu_1287_p0 = 62'd42125834;

assign grp_fu_1297_p0 = 60'd12467180;

assign grp_fu_245_p0 = input_read;

assign grp_fu_623_p0 = 63'd9223372036781645340;

assign grp_fu_633_p0 = 63'd9223372036770541683;

assign grp_fu_642_p0 = 60'd12467180;

assign grp_fu_651_p0 = 62'd42125834;

assign grp_fu_660_p0 = 62'd48005295;

assign grp_fu_669_p0 = 62'd4611686018381583867;

assign grp_fu_719_p0 = 64'd198583255;

assign grp_fu_729_p0 = 65'd402315114;

assign grp_fu_796_p0 = 66'd73786976294206683996;

assign grp_fu_806_p0 = 66'd73786976293928978757;

assign grp_fu_916_p0 = 67'd1410816331;

assign grp_fu_926_p0 = 68'd3913428328;

assign grp_fu_988_p0 = 68'd3913428328;

assign grp_fu_997_p0 = 67'd1410816331;

assign i_cast_fu_1389_p1 = i_reg_211_pp0_iter14_reg;

assign icmp_ln48_fu_295_p2 = ((ap_phi_mux_i_phi_fu_215_p4 == 8'd170) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_277_p2 = ((trunc_ln557_fu_265_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_358_p2 = (($signed(F2_reg_1595) > $signed(12'd33)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_381_p2 = ((F2_reg_1595 == 12'd33) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_386_p2 = ((sh_amt_fu_373_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_392_p2 = ((sh_amt_fu_373_p3 < 12'd36) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_415_p2 = ((i_reg_211 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_fu_261_p1 = grp_fu_245_p1;

assign man_V_1_fu_335_p2 = (54'd0 - zext_ln569_fu_331_p1);

assign or_ln581_1_fu_582_p2 = (or_ln582_1_fu_554_p2 | icmp_ln581_reg_1610);

assign or_ln581_fu_483_p2 = (or_ln582_fu_456_p2 | icmp_ln581_reg_1610);

assign or_ln582_1_fu_554_p2 = (or_ln61_fu_532_p2 | icmp_ln582_reg_1618);

assign or_ln582_fu_456_p2 = (icmp_ln582_reg_1618 | icmp_ln571_reg_1562);

assign or_ln61_fu_532_p2 = (icmp_ln61_reg_1650 | icmp_ln571_reg_1562);

assign output_signal_V_address0 = i_cast_fu_1389_p1;

assign output_signal_V_d0 = {{add_ln1192_22_fu_1404_p2[68:33]}};

assign p_Result_1_fu_323_p3 = {{1'd1}, {trunc_ln565_fu_320_p1}};

assign select_ln570_fu_341_p3 = ((p_Result_s_reg_1557[0:0] === 1'b1) ? man_V_1_fu_335_p2 : zext_ln569_fu_331_p1);

assign select_ln571_fu_507_p3 = ((icmp_ln571_reg_1562[0:0] === 1'b1) ? 36'd0 : select_ln603_fu_499_p3);

assign select_ln582_1_fu_547_p3 = ((and_ln582_1_fu_542_p2[0:0] === 1'b1) ? trunc_ln583_reg_1603_pp0_iter1_reg : 36'd0);

assign select_ln582_fu_449_p3 = ((and_ln582_fu_445_p2[0:0] === 1'b1) ? trunc_ln583_reg_1603_pp0_iter1_reg : 36'd0);

assign select_ln585_1_fu_525_p3 = ((and_ln585_1_fu_519_p2[0:0] === 1'b1) ? select_ln588_reg_1570 : select_ln571_fu_507_p3);

assign select_ln585_2_fu_575_p3 = ((and_ln585_2_fu_570_p2[0:0] === 1'b1) ? trunc_ln586_reg_1644 : select_ln582_1_fu_547_p3);

assign select_ln585_3_fu_612_p3 = ((and_ln585_3_fu_606_p2[0:0] === 1'b1) ? select_ln588_reg_1570 : select_ln603_1_fu_598_p3);

assign select_ln585_fu_476_p3 = ((and_ln585_fu_471_p2[0:0] === 1'b1) ? trunc_ln586_reg_1644 : select_ln582_fu_449_p3);

assign select_ln588_fu_283_p3 = ((tmp_11_reg_1546[0:0] === 1'b1) ? 36'd68719476735 : 36'd0);

assign select_ln603_1_fu_598_p3 = ((and_ln603_1_fu_593_p2[0:0] === 1'b1) ? shl_ln604_fu_440_p2 : select_ln585_2_fu_575_p3);

assign select_ln603_fu_499_p3 = ((and_ln603_fu_494_p2[0:0] === 1'b1) ? shl_ln604_fu_440_p2 : select_ln585_fu_476_p3);

assign sext_ln1192_1_fu_774_p1 = $signed(mul_ln1118_5_reg_1750);

assign sext_ln1192_2_fu_865_p1 = $signed(mul_ln1118_7_reg_1785);

assign sext_ln1192_3_fu_949_p1 = $signed(mul_ln1118_9_reg_1817);

assign sext_ln1192_4_fu_1158_p1 = $signed(mul_ln1118_15_reg_1916);

assign sext_ln1192_5_fu_1229_p1 = $signed(mul_ln1118_17_reg_1953);

assign sext_ln1192_6_fu_1306_p1 = $signed(mul_ln1118_19_reg_1978);

assign sext_ln1192_7_fu_1345_p1 = $signed(mul_ln1118_21_reg_2013);

assign sext_ln1192_8_fu_1371_p1 = $signed(mul_ln1118_23_reg_2028);

assign sext_ln1192_9_fu_761_p1 = $signed(tmp_fu_754_p3);

assign sext_ln1192_fu_745_p1 = $signed(mul_ln1118_3_reg_1704_pp0_iter5_reg);

assign sext_ln586_fu_398_p1 = sh_amt_fu_373_p3;

assign sext_ln703_10_fu_1226_p1 = $signed(mul_ln1118_16_reg_1948);

assign sext_ln703_11_fu_1303_p1 = $signed(mul_ln1118_18_reg_1973);

assign sext_ln703_12_fu_1342_p1 = $signed(mul_ln1118_20_reg_2008);

assign sext_ln703_1_fu_742_p1 = $signed(mul_ln1118_2_reg_1699_pp0_iter5_reg);

assign sext_ln703_2_fu_771_p1 = $signed(mul_ln1118_4_reg_1745);

assign sext_ln703_3_fu_862_p1 = $signed(mul_ln1118_6_reg_1780);

assign sext_ln703_4_fu_946_p1 = $signed(mul_ln1118_8_reg_1812);

assign sext_ln703_5_fu_1003_p1 = $signed(mul_ln1118_10_reg_1849);

assign sext_ln703_6_fu_1006_p1 = $signed(mul_ln1118_11_reg_1854);

assign sext_ln703_7_fu_1086_p1 = $signed(mul_ln1118_12_reg_1874);

assign sext_ln703_8_fu_1089_p1 = $signed(mul_ln1118_13_reg_1879);

assign sext_ln703_9_fu_1155_p1 = $signed(mul_ln1118_14_reg_1911);

assign sext_ln703_fu_697_p1 = $signed(mul_ln1118_reg_1709);

assign sext_ln728_1_fu_852_p1 = $signed(tmp_13_fu_845_p3);

assign sext_ln728_2_fu_874_p1 = $signed(add_ln1192_5_fu_868_p2);

assign sext_ln728_3_fu_958_p1 = $signed(add_ln1192_7_fu_952_p2);

assign sext_ln728_4_fu_1167_p1 = $signed(add_ln1192_13_fu_1161_p2);

assign sext_ln728_5_fu_1238_p1 = $signed(add_ln1192_15_fu_1232_p2);

assign sext_ln728_6_fu_1315_p1 = $signed(add_ln1192_17_fu_1309_p2);

assign sext_ln728_7_fu_1354_p1 = $signed(add_ln1192_19_fu_1348_p2);

assign sext_ln728_8_fu_1394_p1 = $signed(add_ln1192_21_reg_2033);

assign sext_ln728_fu_842_p1 = $signed(add_ln1192_3_reg_1770);

assign sh_amt_fu_373_p3 = ((icmp_ln581_fu_358_p2[0:0] === 1'b1) ? add_ln581_fu_363_p2 : sub_ln581_fu_368_p2);

assign shl_ln604_fu_440_p2 = trunc_ln583_reg_1603_pp0_iter1_reg << zext_ln604_fu_437_p1;

assign shl_ln728_2_fu_888_p3 = {{tmp_2_fu_878_p4}, {33'd0}};

assign shl_ln728_3_fu_962_p3 = {{tmp_3_reg_1822}, {33'd0}};

assign shl_ln728_4_fu_1015_p3 = {{tmp_4_reg_1859}, {33'd0}};

assign shl_ln728_5_fu_1098_p3 = {{tmp_5_reg_1884}, {33'd0}};

assign shl_ln728_6_fu_1171_p3 = {{tmp_6_reg_1921}, {33'd0}};

assign shl_ln728_7_fu_1242_p3 = {{tmp_7_reg_1958}, {33'd0}};

assign shl_ln728_8_fu_1319_p3 = {{tmp_8_reg_1983}, {33'd0}};

assign shl_ln728_9_fu_1358_p3 = {{tmp_9_reg_2018}, {33'd0}};

assign shl_ln728_s_fu_1397_p3 = {{tmp_s_reg_2038}, {33'd0}};

assign sub_ln581_fu_368_p2 = (12'd33 - F2_reg_1595);

assign tmp_13_fu_845_p3 = {{tmp_12_reg_1775}, {33'd0}};

assign tmp_2_fu_878_p4 = {{add_ln1192_4_fu_856_p2[68:33]}};

assign tmp_fu_754_p3 = {{trunc_ln4_reg_1740}, {33'd0}};

assign trunc_ln557_fu_265_p1 = ireg_fu_261_p1[62:0];

assign trunc_ln565_fu_320_p1 = ireg_reg_1551[51:0];

assign trunc_ln583_fu_354_p1 = select_ln570_fu_341_p3[35:0];

assign trunc_ln586_fu_411_p1 = ashr_ln586_fu_406_p2[35:0];

assign xor_ln571_fu_290_p2 = (icmp_ln571_reg_1562 ^ 1'd1);

assign xor_ln581_1_fu_587_p2 = (or_ln581_1_fu_582_p2 ^ 1'd1);

assign xor_ln581_fu_488_p2 = (or_ln581_fu_483_p2 ^ 1'd1);

assign xor_ln582_1_fu_559_p2 = (or_ln582_1_fu_554_p2 ^ 1'd1);

assign xor_ln582_fu_460_p2 = (or_ln582_fu_456_p2 ^ 1'd1);

assign xor_ln585_fu_514_p2 = (icmp_ln585_reg_1626 ^ 1'd1);

assign xor_ln61_fu_536_p2 = (or_ln61_fu_532_p2 ^ 1'd1);

assign zext_ln455_fu_316_p1 = exp_tmp_V_fu_307_p4;

assign zext_ln569_fu_331_p1 = p_Result_1_fu_323_p3;

assign zext_ln586_fu_402_p1 = $unsigned(sext_ln586_fu_398_p1);

assign zext_ln604_fu_437_p1 = $unsigned(sext_ln586_reg_1639);

endmodule //e2e_system_filter
