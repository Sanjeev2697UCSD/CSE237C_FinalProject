-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity e2e_system is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_signal : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_signal_ap_vld : OUT STD_LOGIC;
    input_signal : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of e2e_system is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "e2e_system_e2e_system,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297333,HLS_SYN_LAT=9275,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=17442,HLS_SYN_LUT=9563,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv28_FFFFFFF : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111111111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv36_FFFFFFFFF : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111111111111111111111111";
    constant ap_const_lv36_1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_290 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_fu_458_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln38_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln38_reg_791_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_791_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_791_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_791_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_fu_475_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln935_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_805 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_805_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_805_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_805_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_810 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_810_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_810_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_810_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_506_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_reg_815 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_reg_815_pp1_iter2_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_reg_815_pp1_iter3_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Result_s_fu_514_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Result_s_reg_823 : STD_LOGIC_VECTOR (35 downto 0);
    signal sub_ln944_fu_543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_828_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_fu_549_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln947_reg_835 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln943_fu_553_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_840 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_840_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_840_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lsb_index_fu_557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln946_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_reg_856 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_4_reg_867 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Result_5_reg_872 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_dataflow_parent_loop_proc_fu_301_ap_ready : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_ap_done : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_ready : STD_LOGIC;
    signal ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal correlators_output_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal correlators_output_V_ce0 : STD_LOGIC;
    signal correlators_output_V_we0 : STD_LOGIC;
    signal correlators_output_V_d0 : STD_LOGIC_VECTOR (35 downto 0);
    signal correlators_output_V_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal correlators_output_V_ce1 : STD_LOGIC;
    signal correlators_output_V_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d0 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we0 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we1 : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_ap_start : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_ap_idle : STD_LOGIC;
    signal grp_dataflow_parent_loop_proc_fu_301_ap_continue : STD_LOGIC;
    signal i_reg_279 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln23_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dataflow_parent_loop_proc_fu_301_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done : STD_LOGIC := '0';
    signal i_1_cast_fu_464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_3_cast_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sub_ln939_fu_500_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Result_3_fu_524_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_531_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_562_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln947_fu_578_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_583_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln949_fu_593_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lshr_ln947_fu_587_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln949_fu_597_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal or_ln949_1_fu_603_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal and_ln949_fu_609_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_16_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_fu_639_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_fu_656_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln954_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_fu_676_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal select_ln946_fu_665_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_1_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln954_fu_680_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln955_fu_660_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal select_ln954_fu_685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_692_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln951_fu_703_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal zext_ln961_fu_699_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal m_1_fu_707_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal select_ln943_fu_734_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln964_fu_741_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_746_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_1_fu_731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_752_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_9_fu_759_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln743_fu_771_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component e2e_system_dataflow_parent_loop_proc IS
    port (
        input_signal : IN STD_LOGIC_VECTOR (31 downto 0);
        correlators_output_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        correlators_output_V_ce0 : OUT STD_LOGIC;
        correlators_output_V_d0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        correlators_output_V_q0 : IN STD_LOGIC_VECTOR (35 downto 0);
        correlators_output_V_we0 : OUT STD_LOGIC;
        correlators_output_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        correlators_output_V_ce1 : OUT STD_LOGIC;
        correlators_output_V_d1 : OUT STD_LOGIC_VECTOR (35 downto 0);
        correlators_output_V_q1 : IN STD_LOGIC_VECTOR (35 downto 0);
        correlators_output_V_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_signal_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component e2e_system_correlators_output_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (35 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    correlators_output_V_U : component e2e_system_correlators_output_V
    generic map (
        DataWidth => 36,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => correlators_output_V_address0,
        ce0 => correlators_output_V_ce0,
        we0 => correlators_output_V_we0,
        d0 => correlators_output_V_d0,
        q0 => correlators_output_V_q0,
        address1 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address1,
        ce1 => correlators_output_V_ce1,
        q1 => correlators_output_V_q1);

    grp_dataflow_parent_loop_proc_fu_301 : component e2e_system_dataflow_parent_loop_proc
    port map (
        input_signal => input_signal,
        correlators_output_V_address0 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address0,
        correlators_output_V_ce0 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce0,
        correlators_output_V_d0 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d0,
        correlators_output_V_q0 => ap_const_lv36_0,
        correlators_output_V_we0 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we0,
        correlators_output_V_address1 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address1,
        correlators_output_V_ce1 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce1,
        correlators_output_V_d1 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d1,
        correlators_output_V_q1 => correlators_output_V_q1,
        correlators_output_V_we1 => grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_signal_ap_vld => ap_const_logic_1,
        ap_start => grp_dataflow_parent_loop_proc_fu_301_ap_start,
        ap_done => grp_dataflow_parent_loop_proc_fu_301_ap_done,
        ap_ready => grp_dataflow_parent_loop_proc_fu_301_ap_ready,
        ap_idle => grp_dataflow_parent_loop_proc_fu_301_ap_idle,
        ap_continue => grp_dataflow_parent_loop_proc_fu_301_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc_fu_301_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready <= ap_const_logic_0;
                elsif ((grp_dataflow_parent_loop_proc_fu_301_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_parent_loop_proc_fu_301_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_parent_loop_proc_fu_301_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_ready = ap_const_logic_0)))) then 
                    grp_dataflow_parent_loop_proc_fu_301_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_parent_loop_proc_fu_301_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_parent_loop_proc_fu_301_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_reg_290 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln38_fu_469_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_1_reg_290 <= add_ln38_fu_475_p2;
            end if; 
        end if;
    end process;

    i_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_452_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_279 <= add_ln23_fu_458_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_279 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln38_reg_791 <= icmp_ln38_fu_469_p2;
                icmp_ln38_reg_791_pp1_iter1_reg <= icmp_ln38_reg_791;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln38_reg_791_pp1_iter2_reg <= icmp_ln38_reg_791_pp1_iter1_reg;
                icmp_ln38_reg_791_pp1_iter3_reg <= icmp_ln38_reg_791_pp1_iter2_reg;
                icmp_ln38_reg_791_pp1_iter4_reg <= icmp_ln38_reg_791_pp1_iter3_reg;
                icmp_ln935_reg_805_pp1_iter2_reg <= icmp_ln935_reg_805;
                icmp_ln935_reg_805_pp1_iter3_reg <= icmp_ln935_reg_805_pp1_iter2_reg;
                icmp_ln935_reg_805_pp1_iter4_reg <= icmp_ln935_reg_805_pp1_iter3_reg;
                p_Result_7_reg_810_pp1_iter2_reg <= p_Result_7_reg_810;
                p_Result_7_reg_810_pp1_iter3_reg <= p_Result_7_reg_810_pp1_iter2_reg;
                p_Result_7_reg_810_pp1_iter4_reg <= p_Result_7_reg_810_pp1_iter3_reg;
                p_Val2_1_reg_815_pp1_iter2_reg <= p_Val2_1_reg_815;
                p_Val2_1_reg_815_pp1_iter3_reg <= p_Val2_1_reg_815_pp1_iter2_reg;
                sub_ln944_reg_828_pp1_iter3_reg <= sub_ln944_reg_828;
                trunc_ln943_reg_840_pp1_iter3_reg <= trunc_ln943_reg_840;
                trunc_ln943_reg_840_pp1_iter4_reg <= trunc_ln943_reg_840_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln38_reg_791 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln935_reg_805 <= icmp_ln935_fu_486_p2;
                p_Result_7_reg_810 <= correlators_output_V_q0(35 downto 35);
                p_Result_s_reg_823 <= p_Result_s_fu_514_p4;
                p_Val2_1_reg_815 <= p_Val2_1_fu_506_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_reg_805_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln38_reg_791_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln946_reg_851 <= icmp_ln946_fu_572_p2;
                icmp_ln949_reg_856 <= icmp_ln949_fu_614_p2;
                icmp_ln954_reg_861 <= icmp_ln954_fu_620_p2;
                lsb_index_reg_845 <= lsb_index_fu_557_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_reg_805_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln38_reg_791_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                m_4_reg_867 <= m_1_fu_707_p2(36 downto 1);
                p_Result_5_reg_872 <= m_1_fu_707_p2(25 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_reg_805 = ap_const_lv1_0) and (icmp_ln38_reg_791_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                sub_ln944_reg_828 <= sub_ln944_fu_543_p2;
                trunc_ln943_reg_840 <= trunc_ln943_fu_553_p1;
                trunc_ln947_reg_835 <= trunc_ln947_fu_549_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln38_fu_469_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, icmp_ln23_fu_452_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_452_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln38_fu_469_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln38_fu_469_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln23_fu_458_p2 <= std_logic_vector(unsigned(i_reg_279) + unsigned(ap_const_lv6_1));
    add_ln38_fu_475_p2 <= std_logic_vector(unsigned(i_1_reg_290) + unsigned(ap_const_lv6_1));
    add_ln954_fu_671_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(sub_ln944_reg_828_pp1_iter3_reg));
    add_ln964_fu_746_p2 <= std_logic_vector(unsigned(select_ln943_fu_734_p3) + unsigned(sub_ln964_fu_741_p2));
    and_ln949_1_fu_645_p2 <= (xor_ln949_fu_633_p2 and p_Result_8_fu_639_p3);
    and_ln949_fu_609_p2 <= (p_Val2_1_reg_815_pp1_iter2_reg and or_ln949_1_fu_603_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_on_subcall_done_assign_proc : process(ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_ready, ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_ready and ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_done) = ap_const_logic_0);
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln38_fu_469_p2)
    begin
        if ((icmp_ln38_fu_469_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_done <= (grp_dataflow_parent_loop_proc_fu_301_ap_done or ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_done);
    ap_sync_grp_dataflow_parent_loop_proc_fu_301_ap_ready <= (grp_dataflow_parent_loop_proc_fu_301_ap_ready or ap_sync_reg_grp_dataflow_parent_loop_proc_fu_301_ap_ready);

    correlators_output_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state4, grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address0, i_1_cast_fu_464_p1, i_3_cast_fu_481_p1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            correlators_output_V_address0 <= i_3_cast_fu_481_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            correlators_output_V_address0 <= i_1_cast_fu_464_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            correlators_output_V_address0 <= grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_address0;
        else 
            correlators_output_V_address0 <= "XXXXXX";
        end if; 
    end process;


    correlators_output_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state4, grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            correlators_output_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            correlators_output_V_ce0 <= grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce0;
        else 
            correlators_output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    correlators_output_V_ce1_assign_proc : process(ap_CS_fsm_state4, grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            correlators_output_V_ce1 <= grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_ce1;
        else 
            correlators_output_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    correlators_output_V_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            correlators_output_V_d0 <= ap_const_lv36_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            correlators_output_V_d0 <= grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_d0;
        else 
            correlators_output_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    correlators_output_V_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we0, icmp_ln23_fu_452_p2)
    begin
        if (((icmp_ln23_fu_452_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            correlators_output_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            correlators_output_V_we0 <= grp_dataflow_parent_loop_proc_fu_301_correlators_output_V_we0;
        else 
            correlators_output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_dataflow_parent_loop_proc_fu_301_ap_continue_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_dataflow_parent_loop_proc_fu_301_ap_continue <= ap_const_logic_1;
        else 
            grp_dataflow_parent_loop_proc_fu_301_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_dataflow_parent_loop_proc_fu_301_ap_start <= grp_dataflow_parent_loop_proc_fu_301_ap_start_reg;
    i_1_cast_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_279),64));
    i_3_cast_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_290),64));
    icmp_ln23_fu_452_p2 <= "1" when (i_reg_279 = ap_const_lv6_21) else "0";
    icmp_ln38_fu_469_p2 <= "1" when (i_1_reg_290 = ap_const_lv6_21) else "0";
    icmp_ln935_fu_486_p2 <= "1" when (correlators_output_V_q0 = ap_const_lv36_0) else "0";
    icmp_ln946_fu_572_p2 <= "1" when (signed(tmp_15_fu_562_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_fu_614_p2 <= "0" when (and_ln949_fu_609_p2 = ap_const_lv36_0) else "1";
    icmp_ln954_fu_620_p2 <= "1" when (signed(lsb_index_fu_557_p2) > signed(ap_const_lv32_0)) else "0";
    l_fu_539_p1 <= tmp_fu_531_p3(32 - 1 downto 0);
    lsb_index_fu_557_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE8) + signed(sub_ln944_reg_828));
    lshr_ln947_fu_587_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv36_FFFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_583_p1(31-1 downto 0)))));
    lshr_ln954_fu_680_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_1_reg_815_pp1_iter3_reg),to_integer(unsigned('0' & zext_ln954_fu_676_p1(31-1 downto 0)))));
    m_1_fu_707_p2 <= std_logic_vector(unsigned(zext_ln951_fu_703_p1) + unsigned(zext_ln961_fu_699_p1));
    m_fu_692_p3 <= 
        lshr_ln954_fu_680_p2 when (icmp_ln954_reg_861(0) = '1') else 
        shl_ln955_fu_660_p2;
    or_ln949_1_fu_603_p2 <= (shl_ln949_fu_597_p2 or lshr_ln947_fu_587_p2);
    output_signal <= 
        ap_const_lv32_0 when (icmp_ln935_reg_805_pp1_iter4_reg(0) = '1') else 
        trunc_ln743_fu_771_p1;

    output_signal_ap_vld_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln38_reg_791_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if (((icmp_ln38_reg_791_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            output_signal_ap_vld <= ap_const_logic_1;
        else 
            output_signal_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_3_fu_524_p3 <= (ap_const_lv28_FFFFFFF & p_Result_s_reg_823);
    p_Result_7_fu_492_p3 <= correlators_output_V_q0(35 downto 35);
    p_Result_8_fu_639_p3 <= p_Val2_1_reg_815_pp1_iter3_reg(to_integer(unsigned(lsb_index_reg_845)) downto to_integer(unsigned(lsb_index_reg_845))) when (to_integer(unsigned(lsb_index_reg_845))>= 0 and to_integer(unsigned(lsb_index_reg_845))<=35) else "-";
    p_Result_9_fu_759_p5 <= (zext_ln951_1_fu_731_p1(63 downto 32) & tmp_1_fu_752_p3 & zext_ln951_1_fu_731_p1(22 downto 0));
    
    p_Result_s_fu_514_p4_proc : process(p_Val2_1_fu_506_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(36+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(36+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(36 - 1 downto 0);
    variable p_Result_s_fu_514_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(36 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(36 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(36 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_23(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_1_fu_506_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(36-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(36-1-unsigned(ap_const_lv32_23(6-1 downto 0)));
            for p_Result_s_fu_514_p4_i in 0 to 36-1 loop
                v0_cpy(p_Result_s_fu_514_p4_i) := p_Val2_1_fu_506_p3(36-1-p_Result_s_fu_514_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(36-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_514_p4 <= resvalue(36-1 downto 0);
    end process;

    p_Val2_1_fu_506_p3 <= 
        sub_ln939_fu_500_p2 when (p_Result_7_fu_492_p3(0) = '1') else 
        correlators_output_V_q0;
    select_ln943_fu_734_p3 <= 
        ap_const_lv8_7F when (p_Result_5_reg_872(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_fu_665_p3 <= 
        icmp_ln949_reg_856 when (icmp_ln946_reg_851(0) = '1') else 
        p_Result_8_fu_639_p3;
    select_ln954_fu_685_p3 <= 
        select_ln946_fu_665_p3 when (icmp_ln954_reg_861(0) = '1') else 
        and_ln949_1_fu_645_p2;
    shl_ln949_fu_597_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv36_1),to_integer(unsigned('0' & zext_ln949_fu_593_p1(31-1 downto 0)))));
    shl_ln955_fu_660_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_1_reg_815_pp1_iter3_reg),to_integer(unsigned('0' & zext_ln955_fu_656_p1(31-1 downto 0)))));
    sub_ln939_fu_500_p2 <= std_logic_vector(unsigned(ap_const_lv36_0) - unsigned(correlators_output_V_q0));
    sub_ln944_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv32_24) - unsigned(l_fu_539_p1));
    sub_ln947_fu_578_p2 <= std_logic_vector(signed(ap_const_lv6_3D) - signed(trunc_ln947_reg_835));
    sub_ln955_fu_651_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_828_pp1_iter3_reg));
    sub_ln964_fu_741_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln943_reg_840_pp1_iter4_reg));
    tmp_15_fu_562_p4 <= lsb_index_fu_557_p2(31 downto 1);
    tmp_16_fu_626_p3 <= lsb_index_reg_845(31 downto 31);
    tmp_1_fu_752_p3 <= (p_Result_7_reg_810_pp1_iter4_reg & add_ln964_fu_746_p2);
    
    tmp_fu_531_p3_proc : process(p_Result_3_fu_524_p3)
    begin
        tmp_fu_531_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_3_fu_524_p3(i) = '1' then
                tmp_fu_531_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    trunc_ln743_fu_771_p1 <= p_Result_9_fu_759_p5(32 - 1 downto 0);
    trunc_ln943_fu_553_p1 <= tmp_fu_531_p3(8 - 1 downto 0);
    trunc_ln947_fu_549_p1 <= sub_ln944_fu_543_p2(6 - 1 downto 0);
    xor_ln949_fu_633_p2 <= (tmp_16_fu_626_p3 xor ap_const_lv1_1);
    zext_ln947_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_578_p2),36));
    zext_ln949_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_fu_557_p2),36));
    zext_ln951_1_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_reg_867),64));
    zext_ln951_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_fu_692_p3),37));
    zext_ln954_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_fu_671_p2),36));
    zext_ln955_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_fu_651_p2),36));
    zext_ln961_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_fu_685_p3),37));
end behav;
