// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module e2e_system_dataflow_in_loop_PROCESSOR (
        input_signal,
        correlators_output_V_address0,
        correlators_output_V_ce0,
        correlators_output_V_d0,
        correlators_output_V_q0,
        correlators_output_V_we0,
        correlators_output_V_address1,
        correlators_output_V_ce1,
        correlators_output_V_d1,
        correlators_output_V_q1,
        correlators_output_V_we1,
        ap_clk,
        ap_rst,
        input_signal_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] input_signal;
output  [5:0] correlators_output_V_address0;
output   correlators_output_V_ce0;
output  [35:0] correlators_output_V_d0;
input  [35:0] correlators_output_V_q0;
output   correlators_output_V_we0;
output  [5:0] correlators_output_V_address1;
output   correlators_output_V_ce1;
output  [35:0] correlators_output_V_d1;
input  [35:0] correlators_output_V_q1;
output   correlators_output_V_we1;
input   ap_clk;
input   ap_rst;
input   input_signal_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    Block_entry_proc_proc13_U0_ap_start;
wire    Block_entry_proc_proc13_U0_ap_done;
wire    Block_entry_proc_proc13_U0_ap_continue;
wire    Block_entry_proc_proc13_U0_ap_idle;
wire    Block_entry_proc_proc13_U0_ap_ready;
wire    Block_entry_proc_proc13_U0_start_out;
wire    Block_entry_proc_proc13_U0_start_write;
wire   [31:0] Block_entry_proc_proc13_U0_input_signal_out_din;
wire    Block_entry_proc_proc13_U0_input_signal_out_write;
wire    filter_U0_ap_start;
wire    filter_U0_ap_done;
wire    filter_U0_ap_continue;
wire    filter_U0_ap_idle;
wire    filter_U0_ap_ready;
wire    filter_U0_input_signal_read;
wire   [35:0] filter_U0_output_signal_out_din;
wire    filter_U0_output_signal_out_write;
wire    correlator_U0_ap_start;
wire    correlator_U0_ap_done;
wire    correlator_U0_ap_continue;
wire    correlator_U0_ap_idle;
wire    correlator_U0_ap_ready;
wire   [5:0] correlator_U0_output_r_address0;
wire    correlator_U0_output_r_ce0;
wire    correlator_U0_output_r_we0;
wire   [35:0] correlator_U0_output_r_d0;
wire   [5:0] correlator_U0_output_r_address1;
wire    correlator_U0_output_r_ce1;
wire    correlator_U0_input_r_read;
wire    ap_sync_continue;
wire    input_signal_c_full_n;
wire   [31:0] input_signal_c_dout;
wire    input_signal_c_empty_n;
wire    temp_output_V1_c_full_n;
wire   [35:0] temp_output_V1_c_dout;
wire    temp_output_V1_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready;
wire    ap_sync_Block_entry_proc_proc13_U0_ap_ready;
reg   [1:0] Block_entry_proc_proc13_U0_ap_ready_count;
reg    ap_sync_reg_correlator_U0_ap_ready;
wire    ap_sync_correlator_U0_ap_ready;
reg   [1:0] correlator_U0_ap_ready_count;
wire   [0:0] start_for_filter_U0_din;
wire    start_for_filter_U0_full_n;
wire   [0:0] start_for_filter_U0_dout;
wire    start_for_filter_U0_empty_n;
wire    filter_U0_start_full_n;
wire    filter_U0_start_write;
wire    correlator_U0_start_full_n;
wire    correlator_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready = 1'b0;
#0 Block_entry_proc_proc13_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_correlator_U0_ap_ready = 1'b0;
#0 correlator_U0_ap_ready_count = 2'd0;
end

e2e_system_Block_entry_proc_proc13 Block_entry_proc_proc13_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Block_entry_proc_proc13_U0_ap_start),
    .start_full_n(start_for_filter_U0_full_n),
    .ap_done(Block_entry_proc_proc13_U0_ap_done),
    .ap_continue(Block_entry_proc_proc13_U0_ap_continue),
    .ap_idle(Block_entry_proc_proc13_U0_ap_idle),
    .ap_ready(Block_entry_proc_proc13_U0_ap_ready),
    .start_out(Block_entry_proc_proc13_U0_start_out),
    .start_write(Block_entry_proc_proc13_U0_start_write),
    .input_signal(input_signal),
    .input_signal_out_din(Block_entry_proc_proc13_U0_input_signal_out_din),
    .input_signal_out_full_n(input_signal_c_full_n),
    .input_signal_out_write(Block_entry_proc_proc13_U0_input_signal_out_write)
);

e2e_system_filter filter_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(filter_U0_ap_start),
    .ap_done(filter_U0_ap_done),
    .ap_continue(filter_U0_ap_continue),
    .ap_idle(filter_U0_ap_idle),
    .ap_ready(filter_U0_ap_ready),
    .input_signal_dout(input_signal_c_dout),
    .input_signal_empty_n(input_signal_c_empty_n),
    .input_signal_read(filter_U0_input_signal_read),
    .output_signal_out_din(filter_U0_output_signal_out_din),
    .output_signal_out_full_n(temp_output_V1_c_full_n),
    .output_signal_out_write(filter_U0_output_signal_out_write)
);

e2e_system_correlator correlator_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(correlator_U0_ap_start),
    .ap_done(correlator_U0_ap_done),
    .ap_continue(correlator_U0_ap_continue),
    .ap_idle(correlator_U0_ap_idle),
    .ap_ready(correlator_U0_ap_ready),
    .output_r_address0(correlator_U0_output_r_address0),
    .output_r_ce0(correlator_U0_output_r_ce0),
    .output_r_we0(correlator_U0_output_r_we0),
    .output_r_d0(correlator_U0_output_r_d0),
    .output_r_address1(correlator_U0_output_r_address1),
    .output_r_ce1(correlator_U0_output_r_ce1),
    .output_r_q1(correlators_output_V_q1),
    .input_r_dout(temp_output_V1_c_dout),
    .input_r_empty_n(temp_output_V1_c_empty_n),
    .input_r_read(correlator_U0_input_r_read)
);

e2e_system_fifo_w32_d2_S input_signal_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry_proc_proc13_U0_input_signal_out_din),
    .if_full_n(input_signal_c_full_n),
    .if_write(Block_entry_proc_proc13_U0_input_signal_out_write),
    .if_dout(input_signal_c_dout),
    .if_empty_n(input_signal_c_empty_n),
    .if_read(filter_U0_input_signal_read)
);

e2e_system_fifo_w36_d2_S temp_output_V1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter_U0_output_signal_out_din),
    .if_full_n(temp_output_V1_c_full_n),
    .if_write(filter_U0_output_signal_out_write),
    .if_dout(temp_output_V1_c_dout),
    .if_empty_n(temp_output_V1_c_empty_n),
    .if_read(correlator_U0_input_r_read)
);

e2e_system_start_for_filter_U0 start_for_filter_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_filter_U0_din),
    .if_full_n(start_for_filter_U0_full_n),
    .if_write(Block_entry_proc_proc13_U0_start_write),
    .if_dout(start_for_filter_U0_dout),
    .if_empty_n(start_for_filter_U0_empty_n),
    .if_read(filter_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready <= ap_sync_Block_entry_proc_proc13_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_correlator_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_correlator_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_correlator_U0_ap_ready <= ap_sync_correlator_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Block_entry_proc_proc13_U0_ap_ready))) begin
        Block_entry_proc_proc13_U0_ap_ready_count <= (Block_entry_proc_proc13_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_entry_proc_proc13_U0_ap_ready))) begin
        Block_entry_proc_proc13_U0_ap_ready_count <= (Block_entry_proc_proc13_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (correlator_U0_ap_ready == 1'b0))) begin
        correlator_U0_ap_ready_count <= (correlator_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (correlator_U0_ap_ready == 1'b1))) begin
        correlator_U0_ap_ready_count <= (correlator_U0_ap_ready_count + 2'd1);
    end
end

assign Block_entry_proc_proc13_U0_ap_continue = 1'b1;

assign Block_entry_proc_proc13_U0_ap_start = ((ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_done = correlator_U0_ap_done;

assign ap_idle = (filter_U0_ap_idle & correlator_U0_ap_idle & Block_entry_proc_proc13_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Block_entry_proc_proc13_U0_ap_ready = (ap_sync_reg_Block_entry_proc_proc13_U0_ap_ready | Block_entry_proc_proc13_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_correlator_U0_ap_ready = (correlator_U0_ap_ready | ap_sync_reg_correlator_U0_ap_ready);

assign ap_sync_done = correlator_U0_ap_done;

assign ap_sync_ready = (ap_sync_correlator_U0_ap_ready & ap_sync_Block_entry_proc_proc13_U0_ap_ready);

assign correlator_U0_ap_continue = ap_continue;

assign correlator_U0_ap_start = ((ap_sync_reg_correlator_U0_ap_ready ^ 1'b1) & ap_start);

assign correlator_U0_start_full_n = 1'b1;

assign correlator_U0_start_write = 1'b0;

assign correlators_output_V_address0 = correlator_U0_output_r_address0;

assign correlators_output_V_address1 = correlator_U0_output_r_address1;

assign correlators_output_V_ce0 = correlator_U0_output_r_ce0;

assign correlators_output_V_ce1 = correlator_U0_output_r_ce1;

assign correlators_output_V_d0 = correlator_U0_output_r_d0;

assign correlators_output_V_d1 = 36'd0;

assign correlators_output_V_we0 = correlator_U0_output_r_we0;

assign correlators_output_V_we1 = 1'b0;

assign filter_U0_ap_continue = 1'b1;

assign filter_U0_ap_start = start_for_filter_U0_empty_n;

assign filter_U0_start_full_n = 1'b1;

assign filter_U0_start_write = 1'b0;

assign start_for_filter_U0_din = 1'b1;

endmodule //e2e_system_dataflow_in_loop_PROCESSOR
