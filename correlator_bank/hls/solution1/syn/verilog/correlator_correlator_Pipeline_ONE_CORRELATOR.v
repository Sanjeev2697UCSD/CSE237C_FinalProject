// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module correlator_correlator_Pipeline_ONE_CORRELATOR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_input_address0,
        temp_input_ce0,
        temp_input_we0,
        temp_input_d0,
        temp_input_q0,
        temp_input_address1,
        temp_input_ce1,
        temp_input_we1,
        temp_input_d1,
        temp_input_q1,
        bitcast_ln37,
        codebook_0_load,
        codebook_1_load,
        codebook_2_load,
        codebook_3_load,
        codebook_4_load,
        codebook_5_load,
        codebook_6_load,
        codebook_7_load,
        codebook_8_load,
        codebook_9_load,
        codebook_10_load,
        codebook_11_load,
        codebook_12_load,
        codebook_13_load,
        codebook_14_load,
        codebook_15_load,
        codebook_16_load,
        codebook_17_load,
        codebook_18_load,
        codebook_19_load,
        codebook_20_load,
        codebook_21_load,
        codebook_22_load,
        codebook_23_load,
        codebook_24_load,
        codebook_25_load,
        codebook_26_load,
        codebook_27_load,
        codebook_28_load,
        codebook_29_load,
        mul_29,
        output_signal_i,
        output_signal_o,
        output_signal_o_ap_vld,
        grp_fu_567_p_din0,
        grp_fu_567_p_din1,
        grp_fu_567_p_dout0,
        grp_fu_567_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 29'd1;
parameter    ap_ST_fsm_pp0_stage1 = 29'd2;
parameter    ap_ST_fsm_pp0_stage2 = 29'd4;
parameter    ap_ST_fsm_pp0_stage3 = 29'd8;
parameter    ap_ST_fsm_pp0_stage4 = 29'd16;
parameter    ap_ST_fsm_pp0_stage5 = 29'd32;
parameter    ap_ST_fsm_pp0_stage6 = 29'd64;
parameter    ap_ST_fsm_pp0_stage7 = 29'd128;
parameter    ap_ST_fsm_pp0_stage8 = 29'd256;
parameter    ap_ST_fsm_pp0_stage9 = 29'd512;
parameter    ap_ST_fsm_pp0_stage10 = 29'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 29'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 29'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 29'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 29'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 29'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 29'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 29'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 29'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 29'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 29'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 29'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 29'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 29'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 29'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 29'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 29'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 29'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] temp_input_address0;
output   temp_input_ce0;
output   temp_input_we0;
output  [31:0] temp_input_d0;
input  [31:0] temp_input_q0;
output  [4:0] temp_input_address1;
output   temp_input_ce1;
output   temp_input_we1;
output  [31:0] temp_input_d1;
input  [31:0] temp_input_q1;
input  [31:0] bitcast_ln37;
input  [31:0] codebook_0_load;
input  [31:0] codebook_1_load;
input  [31:0] codebook_2_load;
input  [31:0] codebook_3_load;
input  [31:0] codebook_4_load;
input  [31:0] codebook_5_load;
input  [31:0] codebook_6_load;
input  [31:0] codebook_7_load;
input  [31:0] codebook_8_load;
input  [31:0] codebook_9_load;
input  [31:0] codebook_10_load;
input  [31:0] codebook_11_load;
input  [31:0] codebook_12_load;
input  [31:0] codebook_13_load;
input  [31:0] codebook_14_load;
input  [31:0] codebook_15_load;
input  [31:0] codebook_16_load;
input  [31:0] codebook_17_load;
input  [31:0] codebook_18_load;
input  [31:0] codebook_19_load;
input  [31:0] codebook_20_load;
input  [31:0] codebook_21_load;
input  [31:0] codebook_22_load;
input  [31:0] codebook_23_load;
input  [31:0] codebook_24_load;
input  [31:0] codebook_25_load;
input  [31:0] codebook_26_load;
input  [31:0] codebook_27_load;
input  [31:0] codebook_28_load;
input  [31:0] codebook_29_load;
input  [31:0] mul_29;
input  [31:0] output_signal_i;
output  [31:0] output_signal_o;
output   output_signal_o_ap_vld;
output  [31:0] grp_fu_567_p_din0;
output  [31:0] grp_fu_567_p_din1;
input  [31:0] grp_fu_567_p_dout0;
output   grp_fu_567_p_ce;

reg ap_idle;
reg[4:0] temp_input_address0;
reg temp_input_ce0;
reg temp_input_we0;
reg[31:0] temp_input_d0;
reg[4:0] temp_input_address1;
reg temp_input_ce1;
reg temp_input_we1;
reg[31:0] temp_input_d1;
reg[31:0] output_signal_o;
reg output_signal_o_ap_vld;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state58_pp0_stage28_iter1;
wire    ap_block_state87_pp0_stage28_iter2;
wire    ap_block_state116_pp0_stage28_iter3;
wire    ap_block_state145_pp0_stage28_iter4;
wire    ap_block_pp0_stage28_subdone;
reg   [0:0] icmp_ln30_reg_1054;
reg    ap_condition_exit_pp0_iter0_stage28;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_691;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state31_pp0_stage1_iter1;
wire    ap_block_state60_pp0_stage1_iter2;
wire    ap_block_state89_pp0_stage1_iter3;
wire    ap_block_state118_pp0_stage1_iter4;
wire    ap_block_state147_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state35_pp0_stage5_iter1;
wire    ap_block_state64_pp0_stage5_iter2;
wire    ap_block_state93_pp0_stage5_iter3;
wire    ap_block_state122_pp0_stage5_iter4;
wire    ap_block_state151_pp0_stage5_iter5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state39_pp0_stage9_iter1;
wire    ap_block_state68_pp0_stage9_iter2;
wire    ap_block_state97_pp0_stage9_iter3;
wire    ap_block_state126_pp0_stage9_iter4;
wire    ap_block_state155_pp0_stage9_iter5;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state43_pp0_stage13_iter1;
wire    ap_block_state72_pp0_stage13_iter2;
wire    ap_block_state101_pp0_stage13_iter3;
wire    ap_block_state130_pp0_stage13_iter4;
wire    ap_block_state159_pp0_stage13_iter5;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state47_pp0_stage17_iter1;
wire    ap_block_state76_pp0_stage17_iter2;
wire    ap_block_state105_pp0_stage17_iter3;
wire    ap_block_state134_pp0_stage17_iter4;
wire    ap_block_state163_pp0_stage17_iter5;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state51_pp0_stage21_iter1;
wire    ap_block_state80_pp0_stage21_iter2;
wire    ap_block_state109_pp0_stage21_iter3;
wire    ap_block_state138_pp0_stage21_iter4;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state55_pp0_stage25_iter1;
wire    ap_block_state84_pp0_stage25_iter2;
wire    ap_block_state113_pp0_stage25_iter3;
wire    ap_block_state142_pp0_stage25_iter4;
wire    ap_block_pp0_stage25_11001;
reg   [31:0] reg_699;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state32_pp0_stage2_iter1;
wire    ap_block_state61_pp0_stage2_iter2;
wire    ap_block_state90_pp0_stage2_iter3;
wire    ap_block_state119_pp0_stage2_iter4;
wire    ap_block_state148_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state36_pp0_stage6_iter1;
wire    ap_block_state65_pp0_stage6_iter2;
wire    ap_block_state94_pp0_stage6_iter3;
wire    ap_block_state123_pp0_stage6_iter4;
wire    ap_block_state152_pp0_stage6_iter5;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state40_pp0_stage10_iter1;
wire    ap_block_state69_pp0_stage10_iter2;
wire    ap_block_state98_pp0_stage10_iter3;
wire    ap_block_state127_pp0_stage10_iter4;
wire    ap_block_state156_pp0_stage10_iter5;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state44_pp0_stage14_iter1;
wire    ap_block_state73_pp0_stage14_iter2;
wire    ap_block_state102_pp0_stage14_iter3;
wire    ap_block_state131_pp0_stage14_iter4;
wire    ap_block_state160_pp0_stage14_iter5;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state48_pp0_stage18_iter1;
wire    ap_block_state77_pp0_stage18_iter2;
wire    ap_block_state106_pp0_stage18_iter3;
wire    ap_block_state135_pp0_stage18_iter4;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state52_pp0_stage22_iter1;
wire    ap_block_state81_pp0_stage22_iter2;
wire    ap_block_state110_pp0_stage22_iter3;
wire    ap_block_state139_pp0_stage22_iter4;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state57_pp0_stage27_iter1;
wire    ap_block_state86_pp0_stage27_iter2;
wire    ap_block_state115_pp0_stage27_iter3;
wire    ap_block_state144_pp0_stage27_iter4;
wire    ap_block_pp0_stage27_11001;
reg   [31:0] reg_707;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state54_pp0_stage24_iter1;
wire    ap_block_state83_pp0_stage24_iter2;
wire    ap_block_state112_pp0_stage24_iter3;
wire    ap_block_state141_pp0_stage24_iter4;
wire    ap_block_pp0_stage24_11001;
reg   [31:0] reg_715;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state33_pp0_stage3_iter1;
wire    ap_block_state62_pp0_stage3_iter2;
wire    ap_block_state91_pp0_stage3_iter3;
wire    ap_block_state120_pp0_stage3_iter4;
wire    ap_block_state149_pp0_stage3_iter5;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state37_pp0_stage7_iter1;
wire    ap_block_state66_pp0_stage7_iter2;
wire    ap_block_state95_pp0_stage7_iter3;
wire    ap_block_state124_pp0_stage7_iter4;
wire    ap_block_state153_pp0_stage7_iter5;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state41_pp0_stage11_iter1;
wire    ap_block_state70_pp0_stage11_iter2;
wire    ap_block_state99_pp0_stage11_iter3;
wire    ap_block_state128_pp0_stage11_iter4;
wire    ap_block_state157_pp0_stage11_iter5;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state45_pp0_stage15_iter1;
wire    ap_block_state74_pp0_stage15_iter2;
wire    ap_block_state103_pp0_stage15_iter3;
wire    ap_block_state132_pp0_stage15_iter4;
wire    ap_block_state161_pp0_stage15_iter5;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state49_pp0_stage19_iter1;
wire    ap_block_state78_pp0_stage19_iter2;
wire    ap_block_state107_pp0_stage19_iter3;
wire    ap_block_state136_pp0_stage19_iter4;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state53_pp0_stage23_iter1;
wire    ap_block_state82_pp0_stage23_iter2;
wire    ap_block_state111_pp0_stage23_iter3;
wire    ap_block_state140_pp0_stage23_iter4;
wire    ap_block_pp0_stage23_11001;
reg   [31:0] reg_721;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state38_pp0_stage8_iter1;
wire    ap_block_state67_pp0_stage8_iter2;
wire    ap_block_state96_pp0_stage8_iter3;
wire    ap_block_state125_pp0_stage8_iter4;
wire    ap_block_state154_pp0_stage8_iter5;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state42_pp0_stage12_iter1;
wire    ap_block_state71_pp0_stage12_iter2;
wire    ap_block_state100_pp0_stage12_iter3;
wire    ap_block_state129_pp0_stage12_iter4;
wire    ap_block_state158_pp0_stage12_iter5;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state46_pp0_stage16_iter1;
wire    ap_block_state75_pp0_stage16_iter2;
wire    ap_block_state104_pp0_stage16_iter3;
wire    ap_block_state133_pp0_stage16_iter4;
wire    ap_block_state162_pp0_stage16_iter5;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state50_pp0_stage20_iter1;
wire    ap_block_state79_pp0_stage20_iter2;
wire    ap_block_state108_pp0_stage20_iter3;
wire    ap_block_state137_pp0_stage20_iter4;
wire    ap_block_pp0_stage20_11001;
wire   [31:0] grp_fu_670_p2;
reg   [31:0] reg_730;
reg   [31:0] reg_735;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state56_pp0_stage26_iter1;
wire    ap_block_state85_pp0_stage26_iter2;
wire    ap_block_state114_pp0_stage26_iter3;
wire    ap_block_state143_pp0_stage26_iter4;
wire    ap_block_pp0_stage26_11001;
reg   [31:0] reg_740;
reg   [31:0] reg_745;
reg   [31:0] reg_750;
wire    ap_block_pp0_stage28_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state34_pp0_stage4_iter1;
wire    ap_block_state63_pp0_stage4_iter2;
wire    ap_block_state92_pp0_stage4_iter3;
wire    ap_block_state121_pp0_stage4_iter4;
wire    ap_block_state150_pp0_stage4_iter5;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] reg_755;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state30_pp0_stage0_iter1;
wire    ap_block_state59_pp0_stage0_iter2;
wire    ap_block_state88_pp0_stage0_iter3;
wire    ap_block_state117_pp0_stage0_iter4;
wire    ap_block_state146_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] reg_761;
wire   [4:0] temp_input_addr_30_reg_1049;
wire   [0:0] icmp_ln30_fu_775_p2;
reg   [0:0] icmp_ln30_reg_1054_pp0_iter1_reg;
reg   [0:0] icmp_ln30_reg_1054_pp0_iter2_reg;
reg   [0:0] icmp_ln30_reg_1054_pp0_iter3_reg;
reg   [0:0] icmp_ln30_reg_1054_pp0_iter4_reg;
wire   [4:0] temp_input_addr_28_reg_1063;
reg   [31:0] temp_input_load_reg_1068;
wire   [4:0] temp_input_addr_26_reg_1074;
wire   [4:0] temp_input_addr_24_reg_1085;
reg   [31:0] temp_input_load_4_reg_1102;
reg   [31:0] temp_input_load_5_reg_1108;
reg   [31:0] mul_reg_1120;
wire   [31:0] grp_fu_683_p2;
reg   [31:0] mul_27_reg_1125;
reg   [31:0] mul_27_reg_1125_pp0_iter1_reg;
reg   [31:0] mul_27_reg_1125_pp0_iter2_reg;
reg   [31:0] mul_27_reg_1125_pp0_iter3_reg;
reg   [31:0] mul_27_reg_1125_pp0_iter4_reg;
reg   [31:0] mul_1_reg_1136;
reg   [31:0] mul_26_reg_1141;
reg   [31:0] mul_26_reg_1141_pp0_iter1_reg;
reg   [31:0] mul_26_reg_1141_pp0_iter2_reg;
reg   [31:0] mul_26_reg_1141_pp0_iter3_reg;
reg   [31:0] mul_26_reg_1141_pp0_iter4_reg;
reg   [31:0] mul_2_reg_1152;
reg   [31:0] mul_3_reg_1157;
reg   [31:0] mul_4_reg_1168;
reg   [31:0] mul_5_reg_1173;
reg   [31:0] mul_6_reg_1184;
reg   [31:0] mul_7_reg_1195;
reg   [31:0] mul_7_reg_1195_pp0_iter1_reg;
reg   [31:0] mul_8_reg_1206;
reg   [31:0] mul_8_reg_1206_pp0_iter1_reg;
reg   [31:0] mul_9_reg_1217;
reg   [31:0] mul_9_reg_1217_pp0_iter1_reg;
reg   [31:0] mul_s_reg_1228;
reg   [31:0] mul_s_reg_1228_pp0_iter1_reg;
reg   [31:0] mul_10_reg_1239;
reg   [31:0] mul_10_reg_1239_pp0_iter1_reg;
reg   [31:0] mul_11_reg_1250;
reg   [31:0] mul_11_reg_1250_pp0_iter1_reg;
reg   [31:0] mul_12_reg_1261;
reg   [31:0] mul_12_reg_1261_pp0_iter1_reg;
reg   [31:0] mul_13_reg_1272;
reg   [31:0] mul_13_reg_1272_pp0_iter1_reg;
reg   [31:0] mul_13_reg_1272_pp0_iter2_reg;
wire   [4:0] temp_input_addr_9_reg_1277;
reg   [31:0] mul_14_reg_1282;
reg   [31:0] mul_14_reg_1282_pp0_iter1_reg;
reg   [31:0] mul_14_reg_1282_pp0_iter2_reg;
reg   [31:0] mul_15_reg_1293;
reg   [31:0] mul_15_reg_1293_pp0_iter1_reg;
reg   [31:0] mul_15_reg_1293_pp0_iter2_reg;
wire   [4:0] temp_input_addr_7_reg_1298;
reg   [31:0] mul_16_reg_1303;
reg   [31:0] mul_16_reg_1303_pp0_iter1_reg;
reg   [31:0] mul_16_reg_1303_pp0_iter2_reg;
reg   [31:0] mul_17_reg_1314;
reg   [31:0] mul_17_reg_1314_pp0_iter1_reg;
reg   [31:0] mul_17_reg_1314_pp0_iter2_reg;
wire   [4:0] temp_input_addr_5_reg_1319;
reg   [31:0] mul_18_reg_1324;
reg   [31:0] mul_18_reg_1324_pp0_iter1_reg;
reg   [31:0] mul_18_reg_1324_pp0_iter2_reg;
reg   [31:0] mul_19_reg_1335;
reg   [31:0] mul_19_reg_1335_pp0_iter1_reg;
reg   [31:0] mul_19_reg_1335_pp0_iter2_reg;
reg   [31:0] mul_20_reg_1345;
reg   [31:0] mul_20_reg_1345_pp0_iter1_reg;
reg   [31:0] mul_20_reg_1345_pp0_iter2_reg;
reg   [31:0] mul_21_reg_1350;
reg   [31:0] mul_21_reg_1350_pp0_iter1_reg;
reg   [31:0] mul_21_reg_1350_pp0_iter2_reg;
reg   [31:0] mul_21_reg_1350_pp0_iter3_reg;
reg   [31:0] mul_22_reg_1360;
reg   [31:0] mul_22_reg_1360_pp0_iter1_reg;
reg   [31:0] mul_22_reg_1360_pp0_iter2_reg;
reg   [31:0] mul_22_reg_1360_pp0_iter3_reg;
reg   [31:0] mul_23_reg_1365;
reg   [31:0] mul_23_reg_1365_pp0_iter1_reg;
reg   [31:0] mul_23_reg_1365_pp0_iter2_reg;
reg   [31:0] mul_23_reg_1365_pp0_iter3_reg;
reg   [31:0] mul_24_reg_1370;
reg   [31:0] mul_24_reg_1370_pp0_iter1_reg;
reg   [31:0] mul_24_reg_1370_pp0_iter2_reg;
reg   [31:0] mul_24_reg_1370_pp0_iter3_reg;
reg   [31:0] mul_25_reg_1375;
reg   [31:0] mul_25_reg_1375_pp0_iter2_reg;
reg   [31:0] mul_25_reg_1375_pp0_iter3_reg;
reg   [31:0] mul_25_reg_1375_pp0_iter4_reg;
reg   [31:0] mul_28_reg_1380;
reg   [31:0] mul_28_reg_1380_pp0_iter2_reg;
reg   [31:0] mul_28_reg_1380_pp0_iter3_reg;
reg   [31:0] mul_28_reg_1380_pp0_iter4_reg;
reg   [31:0] mul_28_reg_1380_pp0_iter5_reg;
wire   [0:0] icmp_ln48_2_fu_811_p2;
reg   [0:0] icmp_ln48_2_reg_1390;
wire   [0:0] icmp_ln48_3_fu_817_p2;
reg   [0:0] icmp_ln48_3_reg_1395;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage26;
wire    ap_block_pp0_stage28;
reg   [7:0] j_fu_172;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_1;
wire   [7:0] add_ln30_fu_781_p2;
wire   [31:0] bitcast_ln48_1_fu_823_p1;
wire    ap_block_pp0_stage17_01001;
wire   [0:0] and_ln48_1_fu_870_p2;
wire    ap_block_pp0_stage25;
wire    ap_block_pp0_stage27;
reg   [31:0] grp_fu_670_p0;
reg   [31:0] grp_fu_670_p1;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_675_p1;
reg   [31:0] grp_fu_679_p0;
reg   [31:0] grp_fu_679_p1;
reg   [31:0] grp_fu_683_p0;
reg   [31:0] grp_fu_683_p1;
wire   [31:0] grp_fu_687_p1;
wire   [7:0] tmp_1_fu_797_p4;
wire   [22:0] trunc_ln48_1_fu_807_p1;
wire   [7:0] tmp_fu_828_p4;
wire   [22:0] trunc_ln48_fu_838_p1;
wire   [0:0] icmp_ln48_1_fu_848_p2;
wire   [0:0] icmp_ln48_fu_842_p2;
wire   [0:0] or_ln48_fu_854_p2;
wire   [0:0] or_ln48_1_fu_860_p2;
wire   [0:0] and_ln48_fu_864_p2;
wire   [0:0] grp_fu_687_p2;
wire    ap_block_pp0_stage16_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter4_stage17;
reg    ap_idle_pp0_0to3;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [28:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to5;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1673;
reg    ap_condition_1677;
reg    ap_condition_1683;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

correlator_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_670_p0),
    .din1(grp_fu_670_p1),
    .ce(1'b1),
    .dout(grp_fu_670_p2)
);

correlator_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(1'b1),
    .dout(grp_fu_675_p2)
);

correlator_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_683_p0),
    .din1(grp_fu_683_p1),
    .ce(1'b1),
    .dout(grp_fu_683_p2)
);

correlator_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_761),
    .din1(grp_fu_687_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_687_p2)
);

correlator_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage28),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage28)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage28_subdone) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage28_subdone) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage28_subdone) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage28_subdone) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage17_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage28_subdone) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage17) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage17) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage17) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter4_stage17) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln30_fu_775_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_172 <= add_ln30_fu_781_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_172 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        reg_691 <= temp_input_q1;
    end else if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_691 <= temp_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_699 <= temp_input_q0;
    end else if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_699 <= temp_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_721 <= temp_input_q0;
    end else if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_721 <= temp_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln30_reg_1054 <= icmp_ln30_fu_775_p2;
        icmp_ln30_reg_1054_pp0_iter1_reg <= icmp_ln30_reg_1054;
        icmp_ln30_reg_1054_pp0_iter2_reg <= icmp_ln30_reg_1054_pp0_iter1_reg;
        icmp_ln30_reg_1054_pp0_iter3_reg <= icmp_ln30_reg_1054_pp0_iter2_reg;
        icmp_ln30_reg_1054_pp0_iter4_reg <= icmp_ln30_reg_1054_pp0_iter3_reg;
        mul_25_reg_1375_pp0_iter2_reg <= mul_25_reg_1375;
        mul_25_reg_1375_pp0_iter3_reg <= mul_25_reg_1375_pp0_iter2_reg;
        mul_25_reg_1375_pp0_iter4_reg <= mul_25_reg_1375_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        icmp_ln48_2_reg_1390 <= icmp_ln48_2_fu_811_p2;
        icmp_ln48_3_reg_1395 <= icmp_ln48_3_fu_817_p2;
        mul_12_reg_1261_pp0_iter1_reg <= mul_12_reg_1261;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul_10_reg_1239 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul_10_reg_1239_pp0_iter1_reg <= mul_10_reg_1239;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul_11_reg_1250 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul_11_reg_1250_pp0_iter1_reg <= mul_11_reg_1250;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        mul_12_reg_1261 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul_13_reg_1272 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        mul_13_reg_1272_pp0_iter1_reg <= mul_13_reg_1272;
        mul_13_reg_1272_pp0_iter2_reg <= mul_13_reg_1272_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul_14_reg_1282 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        mul_14_reg_1282_pp0_iter1_reg <= mul_14_reg_1282;
        mul_14_reg_1282_pp0_iter2_reg <= mul_14_reg_1282_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul_15_reg_1293 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        mul_15_reg_1293_pp0_iter1_reg <= mul_15_reg_1293;
        mul_15_reg_1293_pp0_iter2_reg <= mul_15_reg_1293_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul_16_reg_1303 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        mul_16_reg_1303_pp0_iter1_reg <= mul_16_reg_1303;
        mul_16_reg_1303_pp0_iter2_reg <= mul_16_reg_1303_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul_17_reg_1314 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        mul_17_reg_1314_pp0_iter1_reg <= mul_17_reg_1314;
        mul_17_reg_1314_pp0_iter2_reg <= mul_17_reg_1314_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul_18_reg_1324 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        mul_18_reg_1324_pp0_iter1_reg <= mul_18_reg_1324;
        mul_18_reg_1324_pp0_iter2_reg <= mul_18_reg_1324_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul_19_reg_1335 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul_19_reg_1335_pp0_iter1_reg <= mul_19_reg_1335;
        mul_19_reg_1335_pp0_iter2_reg <= mul_19_reg_1335_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_1_reg_1136 <= grp_fu_567_p_dout0;
        mul_26_reg_1141 <= grp_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        mul_20_reg_1345 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        mul_20_reg_1345_pp0_iter1_reg <= mul_20_reg_1345;
        mul_20_reg_1345_pp0_iter2_reg <= mul_20_reg_1345_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul_21_reg_1350 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        mul_21_reg_1350_pp0_iter1_reg <= mul_21_reg_1350;
        mul_21_reg_1350_pp0_iter2_reg <= mul_21_reg_1350_pp0_iter1_reg;
        mul_21_reg_1350_pp0_iter3_reg <= mul_21_reg_1350_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        mul_22_reg_1360 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        mul_22_reg_1360_pp0_iter1_reg <= mul_22_reg_1360;
        mul_22_reg_1360_pp0_iter2_reg <= mul_22_reg_1360_pp0_iter1_reg;
        mul_22_reg_1360_pp0_iter3_reg <= mul_22_reg_1360_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        mul_23_reg_1365 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        mul_23_reg_1365_pp0_iter1_reg <= mul_23_reg_1365;
        mul_23_reg_1365_pp0_iter2_reg <= mul_23_reg_1365_pp0_iter1_reg;
        mul_23_reg_1365_pp0_iter3_reg <= mul_23_reg_1365_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        mul_24_reg_1370 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        mul_24_reg_1370_pp0_iter1_reg <= mul_24_reg_1370;
        mul_24_reg_1370_pp0_iter2_reg <= mul_24_reg_1370_pp0_iter1_reg;
        mul_24_reg_1370_pp0_iter3_reg <= mul_24_reg_1370_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_25_reg_1375 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_26_reg_1141_pp0_iter1_reg <= mul_26_reg_1141;
        mul_26_reg_1141_pp0_iter2_reg <= mul_26_reg_1141_pp0_iter1_reg;
        mul_26_reg_1141_pp0_iter3_reg <= mul_26_reg_1141_pp0_iter2_reg;
        mul_26_reg_1141_pp0_iter4_reg <= mul_26_reg_1141_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_27_reg_1125 <= grp_fu_683_p2;
        mul_reg_1120 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_27_reg_1125_pp0_iter1_reg <= mul_27_reg_1125;
        mul_27_reg_1125_pp0_iter2_reg <= mul_27_reg_1125_pp0_iter1_reg;
        mul_27_reg_1125_pp0_iter3_reg <= mul_27_reg_1125_pp0_iter2_reg;
        mul_27_reg_1125_pp0_iter4_reg <= mul_27_reg_1125_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_28_reg_1380 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_28_reg_1380_pp0_iter2_reg <= mul_28_reg_1380;
        mul_28_reg_1380_pp0_iter3_reg <= mul_28_reg_1380_pp0_iter2_reg;
        mul_28_reg_1380_pp0_iter4_reg <= mul_28_reg_1380_pp0_iter3_reg;
        mul_28_reg_1380_pp0_iter5_reg <= mul_28_reg_1380_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_1152 <= grp_fu_567_p_dout0;
        mul_3_reg_1157 <= grp_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_4_reg_1168 <= grp_fu_567_p_dout0;
        mul_5_reg_1173 <= grp_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_6_reg_1184 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_7_reg_1195 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_7_reg_1195_pp0_iter1_reg <= mul_7_reg_1195;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_8_reg_1206 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_8_reg_1206_pp0_iter1_reg <= mul_8_reg_1206;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_9_reg_1217 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_9_reg_1217_pp0_iter1_reg <= mul_9_reg_1217;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_s_reg_1228 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_s_reg_1228_pp0_iter1_reg <= mul_s_reg_1228;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_707 <= temp_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_715 <= temp_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_730 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        reg_735 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        reg_740 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        reg_745 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_750 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_755 <= grp_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_761 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        temp_input_load_4_reg_1102 <= temp_input_q0;
        temp_input_load_5_reg_1108 <= temp_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp_input_load_reg_1068 <= temp_input_q1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_1054 == 1'd1) & (1'b0 == ap_block_pp0_stage28_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_condition_exit_pp0_iter0_stage28 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage17_subdone) & (icmp_ln30_reg_1054_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_condition_exit_pp0_iter4_stage17 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to5 = 1'b1;
    end else begin
        ap_idle_pp0_1to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage28_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_172;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_670_p0 = reg_755;
    end else if ((((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_670_p0 = reg_750;
    end else if ((((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_670_p0 = reg_745;
    end else if ((((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_670_p0 = reg_740;
    end else if ((((1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_670_p0 = reg_735;
    end else if ((((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_670_p0 = reg_730;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_670_p0 = mul_reg_1120;
    end else begin
        grp_fu_670_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_670_p1 = mul_27_reg_1125_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_670_p1 = mul_26_reg_1141_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_670_p1 = mul_25_reg_1375_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_670_p1 = mul_24_reg_1370_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_670_p1 = mul_23_reg_1365_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_670_p1 = mul_22_reg_1360_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_670_p1 = mul_21_reg_1350_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_670_p1 = mul_20_reg_1345_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_670_p1 = mul_19_reg_1335_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_670_p1 = mul_18_reg_1324_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_670_p1 = mul_17_reg_1314_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_670_p1 = mul_16_reg_1303_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        grp_fu_670_p1 = mul_15_reg_1293_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_670_p1 = mul_14_reg_1282_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_670_p1 = mul_13_reg_1272_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_670_p1 = mul_12_reg_1261_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_670_p1 = mul_11_reg_1250_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_670_p1 = mul_10_reg_1239_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        grp_fu_670_p1 = mul_s_reg_1228_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_670_p1 = mul_9_reg_1217_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_670_p1 = mul_8_reg_1206_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_670_p1 = mul_7_reg_1195_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_670_p1 = mul_6_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_670_p1 = mul_5_reg_1173;
    end else if (((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        grp_fu_670_p1 = mul_4_reg_1168;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_670_p1 = mul_3_reg_1157;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_670_p1 = mul_2_reg_1152;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_670_p1 = mul_1_reg_1136;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_670_p1 = 32'd0;
    end else begin
        grp_fu_670_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_675_p0 = reg_761;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_675_p0 = reg_755;
        end else begin
            grp_fu_675_p0 = 'bx;
        end
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_675_p1 = mul_29;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_675_p1 = mul_28_reg_1380_pp0_iter5_reg;
        end else begin
            grp_fu_675_p1 = 'bx;
        end
    end else begin
        grp_fu_675_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_679_p0 = reg_707;
    end else if ((((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        grp_fu_679_p0 = reg_721;
    end else if ((((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_679_p0 = reg_691;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_679_p0 = temp_input_load_4_reg_1102;
    end else if ((((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_679_p0 = reg_715;
    end else if ((((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_679_p0 = reg_699;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_679_p0 = temp_input_load_reg_1068;
    end else begin
        grp_fu_679_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage28) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            grp_fu_679_p1 = codebook_29_load;
        end else if (((1'b0 == ap_block_pp0_stage26) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
            grp_fu_679_p1 = codebook_26_load;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            grp_fu_679_p1 = codebook_25_load;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            grp_fu_679_p1 = codebook_24_load;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            grp_fu_679_p1 = codebook_23_load;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            grp_fu_679_p1 = codebook_22_load;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            grp_fu_679_p1 = codebook_21_load;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            grp_fu_679_p1 = codebook_20_load;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            grp_fu_679_p1 = codebook_19_load;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            grp_fu_679_p1 = codebook_18_load;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_679_p1 = codebook_17_load;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            grp_fu_679_p1 = codebook_16_load;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            grp_fu_679_p1 = codebook_15_load;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            grp_fu_679_p1 = codebook_14_load;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_679_p1 = codebook_13_load;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            grp_fu_679_p1 = codebook_12_load;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_679_p1 = codebook_11_load;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_679_p1 = codebook_10_load;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_679_p1 = codebook_9_load;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_679_p1 = codebook_8_load;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_679_p1 = codebook_7_load;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_679_p1 = codebook_6_load;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_679_p1 = codebook_4_load;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_679_p1 = codebook_2_load;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_679_p1 = codebook_1_load;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_679_p1 = codebook_0_load;
        end else begin
            grp_fu_679_p1 = 'bx;
        end
    end else begin
        grp_fu_679_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_683_p0 = temp_input_load_5_reg_1108;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_683_p0 = reg_721;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_683_p0 = reg_707;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_683_p0 = reg_691;
        end else begin
            grp_fu_683_p0 = 'bx;
        end
    end else begin
        grp_fu_683_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_683_p1 = codebook_5_load;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_683_p1 = codebook_3_load;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_683_p1 = codebook_27_load;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_683_p1 = codebook_28_load;
        end else begin
            grp_fu_683_p1 = 'bx;
        end
    end else begin
        grp_fu_683_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln48_1_fu_870_p2) & (1'b0 == ap_block_pp0_stage17_01001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        output_signal_o = bitcast_ln48_1_fu_823_p1;
    end else begin
        output_signal_o = output_signal_i;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln48_1_fu_870_p2) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        output_signal_o_ap_vld = 1'b1;
    end else begin
        output_signal_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage28) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            temp_input_address0 = 64'd30;
        end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
            temp_input_address0 = temp_input_addr_5_reg_1319;
        end else if ((1'b1 == ap_condition_1677)) begin
            temp_input_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            temp_input_address0 = temp_input_addr_7_reg_1298;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            temp_input_address0 = temp_input_addr_9_reg_1277;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            temp_input_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            temp_input_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            temp_input_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            temp_input_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            temp_input_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            temp_input_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            temp_input_address0 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            temp_input_address0 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            temp_input_address0 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            temp_input_address0 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            temp_input_address0 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            temp_input_address0 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            temp_input_address0 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            temp_input_address0 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            temp_input_address0 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            temp_input_address0 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            temp_input_address0 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            temp_input_address0 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            temp_input_address0 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            temp_input_address0 = 64'd23;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            temp_input_address0 = 64'd25;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            temp_input_address0 = 64'd27;
        end else if ((1'b1 == ap_condition_1673)) begin
            temp_input_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            temp_input_address0 = 64'd1;
        end else begin
            temp_input_address0 = 'bx;
        end
    end else begin
        temp_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage28) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            temp_input_address1 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
            temp_input_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage26) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
            temp_input_address1 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            temp_input_address1 = 64'd8;
        end else if ((1'b1 == ap_condition_1683)) begin
            temp_input_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            temp_input_address1 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage22) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
            temp_input_address1 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            temp_input_address1 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage20) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            temp_input_address1 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            temp_input_address1 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
            temp_input_address1 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            temp_input_address1 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            temp_input_address1 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            temp_input_address1 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            temp_input_address1 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            temp_input_address1 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            temp_input_address1 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            temp_input_address1 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            temp_input_address1 = 64'd23;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            temp_input_address1 = temp_input_addr_24_reg_1085;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            temp_input_address1 = 64'd25;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            temp_input_address1 = temp_input_addr_26_reg_1074;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            temp_input_address1 = 64'd27;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            temp_input_address1 = temp_input_addr_28_reg_1063;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            temp_input_address1 = temp_input_addr_30_reg_1049;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            temp_input_address1 = 64'd24;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            temp_input_address1 = 64'd26;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            temp_input_address1 = 64'd28;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            temp_input_address1 = 64'd29;
        end else begin
            temp_input_address1 = 'bx;
        end
    end else begin
        temp_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp_input_ce0 = 1'b1;
    end else begin
        temp_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp_input_ce1 = 1'b1;
    end else begin
        temp_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage28) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
            temp_input_d0 = temp_input_load_reg_1068;
        end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
            temp_input_d0 = reg_707;
        end else if ((1'b1 == ap_condition_1677)) begin
            temp_input_d0 = bitcast_ln37;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            temp_input_d0 = reg_699;
        end else if (((1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            temp_input_d0 = reg_721;
        end else if ((1'b1 == ap_condition_1673)) begin
            temp_input_d0 = temp_input_q0;
        end else begin
            temp_input_d0 = 'bx;
        end
    end else begin
        temp_input_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        temp_input_d1 = reg_707;
    end else if ((((1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        temp_input_d1 = reg_691;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        temp_input_d1 = temp_input_load_5_reg_1108;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        temp_input_d1 = temp_input_load_4_reg_1102;
    end else if ((((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        temp_input_d1 = reg_721;
    end else if ((((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        temp_input_d1 = reg_715;
    end else if ((((1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        temp_input_d1 = reg_699;
    end else begin
        temp_input_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp_input_we0 = 1'b1;
    end else begin
        temp_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        temp_input_we1 = 1'b1;
    end else begin
        temp_input_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to5 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter4_stage17) & (ap_idle_pp0_0to3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_fu_781_p2 = (ap_sig_allocacmp_j_1 + 8'd1);

assign and_ln48_1_fu_870_p2 = (grp_fu_687_p2 & and_ln48_fu_864_p2);

assign and_ln48_fu_864_p2 = (or_ln48_fu_854_p2 & or_ln48_1_fu_860_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage20_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage21_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage22_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage23_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage24_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage25_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage26_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage27_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage28_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage20_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage21_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage22_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage23_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage24_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage25_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage26_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage27_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage28_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp0_stage16_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp0_stage17_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage25_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage26_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage27_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage28_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage20_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage21_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage22_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage23_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage24_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage25_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage26_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage27_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage28_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1673 = ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_1677 = ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage26) & (1'b1 == ap_CS_fsm_pp0_stage26));
end

always @ (*) begin
    ap_condition_1683 = ((icmp_ln30_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (1'b1 == ap_CS_fsm_pp0_stage24));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage28;

assign bitcast_ln48_1_fu_823_p1 = reg_761;

assign grp_fu_567_p_ce = 1'b1;

assign grp_fu_567_p_din0 = grp_fu_679_p0;

assign grp_fu_567_p_din1 = grp_fu_679_p1;

assign grp_fu_687_p1 = output_signal_i;

assign icmp_ln30_fu_775_p2 = ((ap_sig_allocacmp_j_1 == 8'd170) ? 1'b1 : 1'b0);

assign icmp_ln48_1_fu_848_p2 = ((trunc_ln48_fu_838_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_2_fu_811_p2 = ((tmp_1_fu_797_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_3_fu_817_p2 = ((trunc_ln48_1_fu_807_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_842_p2 = ((tmp_fu_828_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln48_1_fu_860_p2 = (icmp_ln48_3_reg_1395 | icmp_ln48_2_reg_1390);

assign or_ln48_fu_854_p2 = (icmp_ln48_fu_842_p2 | icmp_ln48_1_fu_848_p2);

assign temp_input_addr_24_reg_1085 = 64'd24;

assign temp_input_addr_26_reg_1074 = 64'd26;

assign temp_input_addr_28_reg_1063 = 64'd28;

assign temp_input_addr_30_reg_1049 = 64'd29;

assign temp_input_addr_5_reg_1319 = 64'd5;

assign temp_input_addr_7_reg_1298 = 64'd7;

assign temp_input_addr_9_reg_1277 = 64'd9;

assign tmp_1_fu_797_p4 = {{output_signal_i[30:23]}};

assign tmp_fu_828_p4 = {{bitcast_ln48_1_fu_823_p1[30:23]}};

assign trunc_ln48_1_fu_807_p1 = output_signal_i[22:0];

assign trunc_ln48_fu_838_p1 = bitcast_ln48_1_fu_823_p1[22:0];

endmodule //correlator_correlator_Pipeline_ONE_CORRELATOR
