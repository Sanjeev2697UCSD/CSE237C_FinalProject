-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlator is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_signal_i : IN STD_LOGIC_VECTOR (31 downto 0);
    output_signal_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_signal_o_ap_vld : OUT STD_LOGIC;
    input_signal : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of correlator is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "correlator_correlator,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.447920,HLS_SYN_LAT=168499,HLS_SYN_TPT=none,HLS_SYN_MEM=31,HLS_SYN_DSP=0,HLS_SYN_FF=4681,HLS_SYN_LUT=3387,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal codebook_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_0_ce0 : STD_LOGIC;
    signal codebook_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_1_ce0 : STD_LOGIC;
    signal codebook_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_2_ce0 : STD_LOGIC;
    signal codebook_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_3_ce0 : STD_LOGIC;
    signal codebook_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_4_ce0 : STD_LOGIC;
    signal codebook_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_5_ce0 : STD_LOGIC;
    signal codebook_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_6_ce0 : STD_LOGIC;
    signal codebook_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_7_ce0 : STD_LOGIC;
    signal codebook_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_8_ce0 : STD_LOGIC;
    signal codebook_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_9_ce0 : STD_LOGIC;
    signal codebook_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_10_ce0 : STD_LOGIC;
    signal codebook_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_11_ce0 : STD_LOGIC;
    signal codebook_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_12_ce0 : STD_LOGIC;
    signal codebook_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_13_ce0 : STD_LOGIC;
    signal codebook_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_14_ce0 : STD_LOGIC;
    signal codebook_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_15_ce0 : STD_LOGIC;
    signal codebook_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_16_ce0 : STD_LOGIC;
    signal codebook_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_17_ce0 : STD_LOGIC;
    signal codebook_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_18_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_18_ce0 : STD_LOGIC;
    signal codebook_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_19_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_19_ce0 : STD_LOGIC;
    signal codebook_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_20_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_20_ce0 : STD_LOGIC;
    signal codebook_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_21_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_21_ce0 : STD_LOGIC;
    signal codebook_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_22_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_22_ce0 : STD_LOGIC;
    signal codebook_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_23_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_23_ce0 : STD_LOGIC;
    signal codebook_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_24_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_24_ce0 : STD_LOGIC;
    signal codebook_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_25_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_25_ce0 : STD_LOGIC;
    signal codebook_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_26_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_26_ce0 : STD_LOGIC;
    signal codebook_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_27_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_27_ce0 : STD_LOGIC;
    signal codebook_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_28_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_28_ce0 : STD_LOGIC;
    signal codebook_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_29_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_29_ce0 : STD_LOGIC;
    signal codebook_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_30_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal codebook_30_ce0 : STD_LOGIC;
    signal codebook_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln37_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln37_reg_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln26_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_reg_621 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln26_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal codebook_30_load_reg_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal codebook_0_load_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal codebook_1_load_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_2_load_reg_825 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_3_load_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_4_load_reg_835 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_5_load_reg_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_6_load_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_7_load_reg_850 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_8_load_reg_855 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_9_load_reg_860 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_10_load_reg_865 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_11_load_reg_870 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_12_load_reg_875 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_13_load_reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_14_load_reg_885 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_15_load_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_16_load_reg_895 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_17_load_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_18_load_reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_19_load_reg_910 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_20_load_reg_915 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_21_load_reg_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_22_load_reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_23_load_reg_930 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_24_load_reg_935 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_25_load_reg_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_26_load_reg_945 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_27_load_reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_28_load_reg_955 : STD_LOGIC_VECTOR (31 downto 0);
    signal codebook_29_load_reg_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_965 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_input_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal temp_input_ce0 : STD_LOGIC;
    signal temp_input_we0 : STD_LOGIC;
    signal temp_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_input_ce1 : STD_LOGIC;
    signal temp_input_we1 : STD_LOGIC;
    signal temp_input_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_1_fu_523_ap_start : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_ap_done : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_ap_idle : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_ap_ready : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_temp_input_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_correlator_Pipeline_1_fu_523_temp_input_ce0 : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_temp_input_we0 : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_temp_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_idle : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_ready : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce0 : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we0 : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce1 : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we1 : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o_ap_vld : STD_LOGIC;
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_ce : STD_LOGIC;
    signal grp_correlator_Pipeline_1_fu_523_ap_start_reg : STD_LOGIC := '0';
    signal grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_fu_106 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln26_fu_589_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_567_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_567_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component correlator_correlator_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        temp_input_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        temp_input_ce0 : OUT STD_LOGIC;
        temp_input_we0 : OUT STD_LOGIC;
        temp_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_correlator_Pipeline_ONE_CORRELATOR IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        temp_input_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        temp_input_ce0 : OUT STD_LOGIC;
        temp_input_we0 : OUT STD_LOGIC;
        temp_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        temp_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_input_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        temp_input_ce1 : OUT STD_LOGIC;
        temp_input_we1 : OUT STD_LOGIC;
        temp_input_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        temp_input_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln37 : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_4_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_5_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_6_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_7_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_8_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_9_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_10_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_11_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_12_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_13_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_14_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_15_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_16_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_17_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_18_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_19_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_20_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_21_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_22_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_23_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_24_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_25_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_26_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_27_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_28_load : IN STD_LOGIC_VECTOR (31 downto 0);
        codebook_29_load : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_29 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_signal_i : IN STD_LOGIC_VECTOR (31 downto 0);
        output_signal_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_signal_o_ap_vld : OUT STD_LOGIC;
        grp_fu_567_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_567_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_567_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_567_p_ce : OUT STD_LOGIC );
    end component;


    component correlator_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_9 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_10 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_11 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_12 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_13 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_14 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_15 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_16 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_17 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_18 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_19 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_20 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_21 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_22 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_23 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_24 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_25 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_26 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_27 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_28 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_29 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_codebook_30 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_temp_input IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    codebook_0_U : component correlator_codebook_0
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_0_address0,
        ce0 => codebook_0_ce0,
        q0 => codebook_0_q0);

    codebook_1_U : component correlator_codebook_1
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_1_address0,
        ce0 => codebook_1_ce0,
        q0 => codebook_1_q0);

    codebook_2_U : component correlator_codebook_2
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_2_address0,
        ce0 => codebook_2_ce0,
        q0 => codebook_2_q0);

    codebook_3_U : component correlator_codebook_3
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_3_address0,
        ce0 => codebook_3_ce0,
        q0 => codebook_3_q0);

    codebook_4_U : component correlator_codebook_4
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_4_address0,
        ce0 => codebook_4_ce0,
        q0 => codebook_4_q0);

    codebook_5_U : component correlator_codebook_5
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_5_address0,
        ce0 => codebook_5_ce0,
        q0 => codebook_5_q0);

    codebook_6_U : component correlator_codebook_6
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_6_address0,
        ce0 => codebook_6_ce0,
        q0 => codebook_6_q0);

    codebook_7_U : component correlator_codebook_7
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_7_address0,
        ce0 => codebook_7_ce0,
        q0 => codebook_7_q0);

    codebook_8_U : component correlator_codebook_8
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_8_address0,
        ce0 => codebook_8_ce0,
        q0 => codebook_8_q0);

    codebook_9_U : component correlator_codebook_9
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_9_address0,
        ce0 => codebook_9_ce0,
        q0 => codebook_9_q0);

    codebook_10_U : component correlator_codebook_10
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_10_address0,
        ce0 => codebook_10_ce0,
        q0 => codebook_10_q0);

    codebook_11_U : component correlator_codebook_11
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_11_address0,
        ce0 => codebook_11_ce0,
        q0 => codebook_11_q0);

    codebook_12_U : component correlator_codebook_12
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_12_address0,
        ce0 => codebook_12_ce0,
        q0 => codebook_12_q0);

    codebook_13_U : component correlator_codebook_13
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_13_address0,
        ce0 => codebook_13_ce0,
        q0 => codebook_13_q0);

    codebook_14_U : component correlator_codebook_14
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_14_address0,
        ce0 => codebook_14_ce0,
        q0 => codebook_14_q0);

    codebook_15_U : component correlator_codebook_15
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_15_address0,
        ce0 => codebook_15_ce0,
        q0 => codebook_15_q0);

    codebook_16_U : component correlator_codebook_16
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_16_address0,
        ce0 => codebook_16_ce0,
        q0 => codebook_16_q0);

    codebook_17_U : component correlator_codebook_17
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_17_address0,
        ce0 => codebook_17_ce0,
        q0 => codebook_17_q0);

    codebook_18_U : component correlator_codebook_18
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_18_address0,
        ce0 => codebook_18_ce0,
        q0 => codebook_18_q0);

    codebook_19_U : component correlator_codebook_19
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_19_address0,
        ce0 => codebook_19_ce0,
        q0 => codebook_19_q0);

    codebook_20_U : component correlator_codebook_20
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_20_address0,
        ce0 => codebook_20_ce0,
        q0 => codebook_20_q0);

    codebook_21_U : component correlator_codebook_21
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_21_address0,
        ce0 => codebook_21_ce0,
        q0 => codebook_21_q0);

    codebook_22_U : component correlator_codebook_22
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_22_address0,
        ce0 => codebook_22_ce0,
        q0 => codebook_22_q0);

    codebook_23_U : component correlator_codebook_23
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_23_address0,
        ce0 => codebook_23_ce0,
        q0 => codebook_23_q0);

    codebook_24_U : component correlator_codebook_24
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_24_address0,
        ce0 => codebook_24_ce0,
        q0 => codebook_24_q0);

    codebook_25_U : component correlator_codebook_25
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_25_address0,
        ce0 => codebook_25_ce0,
        q0 => codebook_25_q0);

    codebook_26_U : component correlator_codebook_26
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_26_address0,
        ce0 => codebook_26_ce0,
        q0 => codebook_26_q0);

    codebook_27_U : component correlator_codebook_27
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_27_address0,
        ce0 => codebook_27_ce0,
        q0 => codebook_27_q0);

    codebook_28_U : component correlator_codebook_28
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_28_address0,
        ce0 => codebook_28_ce0,
        q0 => codebook_28_q0);

    codebook_29_U : component correlator_codebook_29
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_29_address0,
        ce0 => codebook_29_ce0,
        q0 => codebook_29_q0);

    codebook_30_U : component correlator_codebook_30
    generic map (
        DataWidth => 32,
        AddressRange => 33,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_30_address0,
        ce0 => codebook_30_ce0,
        q0 => codebook_30_q0);

    temp_input_U : component correlator_temp_input
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_input_address0,
        ce0 => temp_input_ce0,
        we0 => temp_input_we0,
        d0 => temp_input_d0,
        q0 => temp_input_q0,
        address1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address1,
        ce1 => temp_input_ce1,
        we1 => temp_input_we1,
        d1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d1,
        q1 => temp_input_q1);

    grp_correlator_Pipeline_1_fu_523 : component correlator_correlator_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_correlator_Pipeline_1_fu_523_ap_start,
        ap_done => grp_correlator_Pipeline_1_fu_523_ap_done,
        ap_idle => grp_correlator_Pipeline_1_fu_523_ap_idle,
        ap_ready => grp_correlator_Pipeline_1_fu_523_ap_ready,
        temp_input_address0 => grp_correlator_Pipeline_1_fu_523_temp_input_address0,
        temp_input_ce0 => grp_correlator_Pipeline_1_fu_523_temp_input_ce0,
        temp_input_we0 => grp_correlator_Pipeline_1_fu_523_temp_input_we0,
        temp_input_d0 => grp_correlator_Pipeline_1_fu_523_temp_input_d0);

    grp_correlator_Pipeline_ONE_CORRELATOR_fu_528 : component correlator_correlator_Pipeline_ONE_CORRELATOR
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start,
        ap_done => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done,
        ap_idle => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_idle,
        ap_ready => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_ready,
        temp_input_address0 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address0,
        temp_input_ce0 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce0,
        temp_input_we0 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we0,
        temp_input_d0 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d0,
        temp_input_q0 => temp_input_q0,
        temp_input_address1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address1,
        temp_input_ce1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce1,
        temp_input_we1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we1,
        temp_input_d1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d1,
        temp_input_q1 => temp_input_q1,
        bitcast_ln37 => bitcast_ln37_reg_612,
        codebook_0_load => codebook_0_load_reg_815,
        codebook_1_load => codebook_1_load_reg_820,
        codebook_2_load => codebook_2_load_reg_825,
        codebook_3_load => codebook_3_load_reg_830,
        codebook_4_load => codebook_4_load_reg_835,
        codebook_5_load => codebook_5_load_reg_840,
        codebook_6_load => codebook_6_load_reg_845,
        codebook_7_load => codebook_7_load_reg_850,
        codebook_8_load => codebook_8_load_reg_855,
        codebook_9_load => codebook_9_load_reg_860,
        codebook_10_load => codebook_10_load_reg_865,
        codebook_11_load => codebook_11_load_reg_870,
        codebook_12_load => codebook_12_load_reg_875,
        codebook_13_load => codebook_13_load_reg_880,
        codebook_14_load => codebook_14_load_reg_885,
        codebook_15_load => codebook_15_load_reg_890,
        codebook_16_load => codebook_16_load_reg_895,
        codebook_17_load => codebook_17_load_reg_900,
        codebook_18_load => codebook_18_load_reg_905,
        codebook_19_load => codebook_19_load_reg_910,
        codebook_20_load => codebook_20_load_reg_915,
        codebook_21_load => codebook_21_load_reg_920,
        codebook_22_load => codebook_22_load_reg_925,
        codebook_23_load => codebook_23_load_reg_930,
        codebook_24_load => codebook_24_load_reg_935,
        codebook_25_load => codebook_25_load_reg_940,
        codebook_26_load => codebook_26_load_reg_945,
        codebook_27_load => codebook_27_load_reg_950,
        codebook_28_load => codebook_28_load_reg_955,
        codebook_29_load => codebook_29_load_reg_960,
        mul_29 => mul_s_reg_965,
        output_signal_i => output_signal_i,
        output_signal_o => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o,
        output_signal_o_ap_vld => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o_ap_vld,
        grp_fu_567_p_din0 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din0,
        grp_fu_567_p_din1 => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din1,
        grp_fu_567_p_dout0 => grp_fu_567_p2,
        grp_fu_567_p_ce => grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_ce);

    fmul_32ns_32ns_32_4_max_dsp_1_U44 : component correlator_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_567_p0,
        din1 => grp_fu_567_p1,
        ce => grp_fu_567_ce,
        dout => grp_fu_567_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_correlator_Pipeline_1_fu_523_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_correlator_Pipeline_1_fu_523_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln26_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_correlator_Pipeline_1_fu_523_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_correlator_Pipeline_1_fu_523_ap_ready = ap_const_logic_1)) then 
                    grp_correlator_Pipeline_1_fu_523_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_ready = ap_const_logic_1)) then 
                    grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_106 <= ap_const_lv6_0;
            elsif (((icmp_ln26_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_106 <= add_ln26_fu_589_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bitcast_ln37_reg_612 <= bitcast_ln37_fu_571_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                codebook_0_load_reg_815 <= codebook_0_q0;
                codebook_10_load_reg_865 <= codebook_10_q0;
                codebook_11_load_reg_870 <= codebook_11_q0;
                codebook_12_load_reg_875 <= codebook_12_q0;
                codebook_13_load_reg_880 <= codebook_13_q0;
                codebook_14_load_reg_885 <= codebook_14_q0;
                codebook_15_load_reg_890 <= codebook_15_q0;
                codebook_16_load_reg_895 <= codebook_16_q0;
                codebook_17_load_reg_900 <= codebook_17_q0;
                codebook_18_load_reg_905 <= codebook_18_q0;
                codebook_19_load_reg_910 <= codebook_19_q0;
                codebook_1_load_reg_820 <= codebook_1_q0;
                codebook_20_load_reg_915 <= codebook_20_q0;
                codebook_21_load_reg_920 <= codebook_21_q0;
                codebook_22_load_reg_925 <= codebook_22_q0;
                codebook_23_load_reg_930 <= codebook_23_q0;
                codebook_24_load_reg_935 <= codebook_24_q0;
                codebook_25_load_reg_940 <= codebook_25_q0;
                codebook_26_load_reg_945 <= codebook_26_q0;
                codebook_27_load_reg_950 <= codebook_27_q0;
                codebook_28_load_reg_955 <= codebook_28_q0;
                codebook_29_load_reg_960 <= codebook_29_q0;
                codebook_2_load_reg_825 <= codebook_2_q0;
                codebook_3_load_reg_830 <= codebook_3_q0;
                codebook_4_load_reg_835 <= codebook_4_q0;
                codebook_5_load_reg_840 <= codebook_5_q0;
                codebook_6_load_reg_845 <= codebook_6_q0;
                codebook_7_load_reg_850 <= codebook_7_q0;
                codebook_8_load_reg_855 <= codebook_8_q0;
                codebook_9_load_reg_860 <= codebook_9_q0;
                mul_s_reg_965 <= grp_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                codebook_30_load_reg_660 <= codebook_30_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_fu_583_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln26_reg_621(5 downto 0) <= zext_ln26_fu_595_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln26_reg_621(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln26_fu_583_p2, ap_CS_fsm_state3, grp_correlator_Pipeline_1_fu_523_ap_done, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln26_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_correlator_Pipeline_1_fu_523_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln26_fu_589_p2 <= std_logic_vector(unsigned(i_fu_106) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_correlator_Pipeline_1_fu_523_ap_done)
    begin
        if ((grp_correlator_Pipeline_1_fu_523_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done)
    begin
        if ((grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln26_fu_583_p2)
    begin
        if (((icmp_ln26_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln26_fu_583_p2)
    begin
        if (((icmp_ln26_fu_583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln37_fu_571_p1 <= input_signal;
    codebook_0_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_0_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_0_ce0 <= ap_const_logic_1;
        else 
            codebook_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_10_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_10_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_10_ce0 <= ap_const_logic_1;
        else 
            codebook_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_11_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_11_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_11_ce0 <= ap_const_logic_1;
        else 
            codebook_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_12_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_12_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_12_ce0 <= ap_const_logic_1;
        else 
            codebook_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_13_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_13_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_13_ce0 <= ap_const_logic_1;
        else 
            codebook_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_14_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_14_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_14_ce0 <= ap_const_logic_1;
        else 
            codebook_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_15_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_15_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_15_ce0 <= ap_const_logic_1;
        else 
            codebook_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_16_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_16_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_16_ce0 <= ap_const_logic_1;
        else 
            codebook_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_17_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_17_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_17_ce0 <= ap_const_logic_1;
        else 
            codebook_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_18_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_18_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_18_ce0 <= ap_const_logic_1;
        else 
            codebook_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_19_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_19_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_19_ce0 <= ap_const_logic_1;
        else 
            codebook_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_1_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_1_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_1_ce0 <= ap_const_logic_1;
        else 
            codebook_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_20_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_20_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_20_ce0 <= ap_const_logic_1;
        else 
            codebook_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_21_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_21_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_21_ce0 <= ap_const_logic_1;
        else 
            codebook_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_22_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_22_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_22_ce0 <= ap_const_logic_1;
        else 
            codebook_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_23_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_23_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_23_ce0 <= ap_const_logic_1;
        else 
            codebook_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_24_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_24_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_24_ce0 <= ap_const_logic_1;
        else 
            codebook_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_25_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_25_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_25_ce0 <= ap_const_logic_1;
        else 
            codebook_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_26_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_26_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_26_ce0 <= ap_const_logic_1;
        else 
            codebook_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_27_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_27_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_27_ce0 <= ap_const_logic_1;
        else 
            codebook_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_28_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_28_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_28_ce0 <= ap_const_logic_1;
        else 
            codebook_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_29_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_29_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_29_ce0 <= ap_const_logic_1;
        else 
            codebook_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_2_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_2_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_2_ce0 <= ap_const_logic_1;
        else 
            codebook_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_30_address0 <= zext_ln26_fu_595_p1(6 - 1 downto 0);

    codebook_30_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            codebook_30_ce0 <= ap_const_logic_1;
        else 
            codebook_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_3_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_3_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_3_ce0 <= ap_const_logic_1;
        else 
            codebook_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_4_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_4_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_4_ce0 <= ap_const_logic_1;
        else 
            codebook_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_5_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_5_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_5_ce0 <= ap_const_logic_1;
        else 
            codebook_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_6_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_6_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_6_ce0 <= ap_const_logic_1;
        else 
            codebook_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_7_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_7_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_7_ce0 <= ap_const_logic_1;
        else 
            codebook_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_8_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_8_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_8_ce0 <= ap_const_logic_1;
        else 
            codebook_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_9_address0 <= zext_ln26_reg_621(6 - 1 downto 0);

    codebook_9_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            codebook_9_ce0 <= ap_const_logic_1;
        else 
            codebook_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_correlator_Pipeline_1_fu_523_ap_start <= grp_correlator_Pipeline_1_fu_523_ap_start_reg;
    grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_ap_start_reg;

    grp_fu_567_ce_assign_proc : process(grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_ce, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_fu_567_ce <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_ce;
        else 
            grp_fu_567_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_567_p0_assign_proc : process(bitcast_ln37_reg_612, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din0, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_fu_567_p0 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_567_p0 <= bitcast_ln37_reg_612;
        else 
            grp_fu_567_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_567_p1_assign_proc : process(codebook_30_load_reg_660, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din1, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_fu_567_p1 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_grp_fu_567_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_567_p1 <= codebook_30_load_reg_660;
        else 
            grp_fu_567_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln26_fu_583_p2 <= "1" when (i_fu_106 = ap_const_lv6_21) else "0";

    output_signal_o_assign_proc : process(output_signal_i, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o_ap_vld, ap_CS_fsm_state9)
    begin
        if (((grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            output_signal_o <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o;
        else 
            output_signal_o <= output_signal_i;
        end if; 
    end process;

    output_signal_o_ap_vld <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_output_signal_o_ap_vld;

    temp_input_address0_assign_proc : process(ap_CS_fsm_state3, grp_correlator_Pipeline_1_fu_523_temp_input_address0, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_address0 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_input_address0 <= grp_correlator_Pipeline_1_fu_523_temp_input_address0;
        else 
            temp_input_address0 <= "XXXXX";
        end if; 
    end process;


    temp_input_ce0_assign_proc : process(ap_CS_fsm_state3, grp_correlator_Pipeline_1_fu_523_temp_input_ce0, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_ce0 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_input_ce0 <= grp_correlator_Pipeline_1_fu_523_temp_input_ce0;
        else 
            temp_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_input_ce1_assign_proc : process(grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_ce1 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_ce1;
        else 
            temp_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_input_d0_assign_proc : process(ap_CS_fsm_state3, grp_correlator_Pipeline_1_fu_523_temp_input_d0, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_d0 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_input_d0 <= grp_correlator_Pipeline_1_fu_523_temp_input_d0;
        else 
            temp_input_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_input_we0_assign_proc : process(ap_CS_fsm_state3, grp_correlator_Pipeline_1_fu_523_temp_input_we0, grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_we0 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_input_we0 <= grp_correlator_Pipeline_1_fu_523_temp_input_we0;
        else 
            temp_input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_input_we1_assign_proc : process(grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_input_we1 <= grp_correlator_Pipeline_ONE_CORRELATOR_fu_528_temp_input_we1;
        else 
            temp_input_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln26_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_106),64));
end behav;
