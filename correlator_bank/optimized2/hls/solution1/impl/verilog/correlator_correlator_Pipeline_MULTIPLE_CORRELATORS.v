// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module correlator_correlator_Pipeline_MULTIPLE_CORRELATORS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc_V_address0,
        acc_V_ce0,
        acc_V_we0,
        acc_V_d0,
        acc_V_q0,
        acc_V_address1,
        acc_V_ce1,
        acc_V_we1,
        acc_V_d1,
        acc_V_q1,
        temp_input_V_address0,
        temp_input_V_ce0,
        temp_input_V_q0
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] acc_V_address0;
output   acc_V_ce0;
output   acc_V_we0;
output  [29:0] acc_V_d0;
input  [29:0] acc_V_q0;
output  [5:0] acc_V_address1;
output   acc_V_ce1;
output   acc_V_we1;
output  [29:0] acc_V_d1;
input  [29:0] acc_V_q1;
output  [4:0] temp_input_V_address0;
output   temp_input_V_ce0;
input  [29:0] temp_input_V_q0;

reg ap_idle;
reg[5:0] acc_V_address0;
reg acc_V_ce0;
reg acc_V_we0;
reg[29:0] acc_V_d0;
reg[5:0] acc_V_address1;
reg acc_V_ce1;
reg acc_V_we1;
reg[29:0] acc_V_d1;
reg temp_input_V_ce0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln43_fu_921_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state33;
wire    ap_block_state33_pp0_stage32_iter0;
wire   [4:0] codebook_V_0_address0;
reg    codebook_V_0_ce0;
wire   [1:0] codebook_V_0_q0;
wire   [4:0] codebook_V_1_address0;
reg    codebook_V_1_ce0;
wire   [1:0] codebook_V_1_q0;
wire   [4:0] codebook_V_2_address0;
reg    codebook_V_2_ce0;
wire   [1:0] codebook_V_2_q0;
wire   [4:0] codebook_V_3_address0;
reg    codebook_V_3_ce0;
wire   [1:0] codebook_V_3_q0;
wire   [4:0] codebook_V_4_address0;
reg    codebook_V_4_ce0;
wire   [1:0] codebook_V_4_q0;
wire   [4:0] codebook_V_5_address0;
reg    codebook_V_5_ce0;
wire   [1:0] codebook_V_5_q0;
wire   [4:0] codebook_V_6_address0;
reg    codebook_V_6_ce0;
wire   [1:0] codebook_V_6_q0;
wire   [4:0] codebook_V_7_address0;
reg    codebook_V_7_ce0;
wire   [1:0] codebook_V_7_q0;
wire   [4:0] codebook_V_8_address0;
reg    codebook_V_8_ce0;
wire   [1:0] codebook_V_8_q0;
wire   [4:0] codebook_V_9_address0;
reg    codebook_V_9_ce0;
wire   [1:0] codebook_V_9_q0;
wire   [4:0] codebook_V_10_address0;
reg    codebook_V_10_ce0;
wire   [1:0] codebook_V_10_q0;
wire   [4:0] codebook_V_11_address0;
reg    codebook_V_11_ce0;
wire   [1:0] codebook_V_11_q0;
wire   [4:0] codebook_V_12_address0;
reg    codebook_V_12_ce0;
wire   [1:0] codebook_V_12_q0;
wire   [4:0] codebook_V_13_address0;
reg    codebook_V_13_ce0;
wire   [1:0] codebook_V_13_q0;
wire   [4:0] codebook_V_14_address0;
reg    codebook_V_14_ce0;
wire   [1:0] codebook_V_14_q0;
wire   [4:0] codebook_V_15_address0;
reg    codebook_V_15_ce0;
wire   [1:0] codebook_V_15_q0;
wire   [4:0] codebook_V_16_address0;
reg    codebook_V_16_ce0;
wire   [1:0] codebook_V_16_q0;
wire   [4:0] codebook_V_17_address0;
reg    codebook_V_17_ce0;
wire   [1:0] codebook_V_17_q0;
wire   [4:0] codebook_V_18_address0;
reg    codebook_V_18_ce0;
wire   [1:0] codebook_V_18_q0;
wire   [4:0] codebook_V_19_address0;
reg    codebook_V_19_ce0;
wire   [1:0] codebook_V_19_q0;
wire   [4:0] codebook_V_20_address0;
reg    codebook_V_20_ce0;
wire   [1:0] codebook_V_20_q0;
wire   [4:0] codebook_V_21_address0;
reg    codebook_V_21_ce0;
wire   [1:0] codebook_V_21_q0;
wire   [4:0] codebook_V_22_address0;
reg    codebook_V_22_ce0;
wire   [1:0] codebook_V_22_q0;
wire   [4:0] codebook_V_23_address0;
reg    codebook_V_23_ce0;
wire   [1:0] codebook_V_23_q0;
wire   [4:0] codebook_V_24_address0;
reg    codebook_V_24_ce0;
wire   [1:0] codebook_V_24_q0;
wire   [4:0] codebook_V_25_address0;
reg    codebook_V_25_ce0;
wire   [1:0] codebook_V_25_q0;
wire   [4:0] codebook_V_26_address0;
reg    codebook_V_26_ce0;
wire   [1:0] codebook_V_26_q0;
wire   [4:0] codebook_V_27_address0;
reg    codebook_V_27_ce0;
wire   [1:0] codebook_V_27_q0;
wire   [4:0] codebook_V_28_address0;
reg    codebook_V_28_ce0;
wire   [1:0] codebook_V_28_q0;
wire   [4:0] codebook_V_29_address0;
reg    codebook_V_29_ce0;
wire   [1:0] codebook_V_29_q0;
wire   [4:0] codebook_V_30_address0;
reg    codebook_V_30_ce0;
wire   [1:0] codebook_V_30_q0;
wire   [4:0] codebook_V_31_address0;
reg    codebook_V_31_ce0;
wire   [1:0] codebook_V_31_q0;
wire   [4:0] codebook_V_32_address0;
reg    codebook_V_32_ce0;
wire   [1:0] codebook_V_32_q0;
reg   [29:0] reg_889;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_CS_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_CS_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_CS_fsm_state14;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_fsm_state17;
wire    ap_block_state17_pp0_stage16_iter0;
reg   [29:0] reg_893;
reg   [29:0] reg_897;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_CS_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_CS_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_CS_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_CS_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_CS_fsm_state18;
wire    ap_block_state18_pp0_stage17_iter0;
reg   [29:0] reg_901;
reg   [29:0] reg_905;
wire    ap_CS_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_CS_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_CS_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_CS_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
reg   [29:0] reg_909;
reg   [29:0] r_V_1_reg_2524;
reg  signed [1:0] codebook_V_0_load_reg_2529;
reg  signed [1:0] codebook_V_1_load_reg_2534;
reg  signed [1:0] codebook_V_2_load_reg_2539;
reg  signed [1:0] codebook_V_3_load_reg_2544;
reg  signed [1:0] codebook_V_4_load_reg_2549;
reg  signed [1:0] codebook_V_5_load_reg_2554;
reg  signed [1:0] codebook_V_6_load_reg_2559;
reg  signed [1:0] codebook_V_7_load_reg_2564;
reg  signed [1:0] codebook_V_8_load_reg_2569;
reg  signed [1:0] codebook_V_9_load_reg_2574;
reg  signed [1:0] codebook_V_10_load_reg_2579;
reg  signed [1:0] codebook_V_11_load_reg_2584;
reg  signed [1:0] codebook_V_12_load_reg_2589;
reg  signed [1:0] codebook_V_13_load_reg_2594;
reg  signed [1:0] codebook_V_14_load_reg_2599;
reg  signed [1:0] codebook_V_15_load_reg_2604;
reg  signed [1:0] codebook_V_16_load_reg_2609;
reg  signed [1:0] codebook_V_17_load_reg_2614;
reg  signed [1:0] codebook_V_18_load_reg_2619;
reg  signed [1:0] codebook_V_19_load_reg_2624;
reg  signed [1:0] codebook_V_20_load_reg_2629;
reg  signed [1:0] codebook_V_21_load_reg_2634;
reg  signed [1:0] codebook_V_22_load_reg_2639;
reg  signed [1:0] codebook_V_23_load_reg_2644;
reg  signed [1:0] codebook_V_24_load_reg_2649;
reg  signed [1:0] codebook_V_25_load_reg_2654;
reg  signed [1:0] codebook_V_26_load_reg_2659;
reg  signed [1:0] codebook_V_27_load_reg_2664;
reg  signed [1:0] codebook_V_28_load_reg_2669;
reg  signed [1:0] codebook_V_29_load_reg_2674;
reg  signed [1:0] codebook_V_30_load_reg_2679;
reg  signed [1:0] codebook_V_31_load_reg_2684;
reg  signed [1:0] codebook_V_32_load_reg_2689;
wire  signed [31:0] r_V_fu_986_p1;
reg  signed [31:0] r_V_reg_2694;
wire   [31:0] grp_fu_992_p2;
reg   [31:0] mul_ln1171_reg_2741;
wire   [31:0] grp_fu_1001_p2;
reg   [31:0] mul_ln1171_1_reg_2746;
reg   [29:0] trunc_ln4_reg_2761;
reg   [29:0] trunc_ln717_1_reg_2766;
wire   [31:0] grp_fu_1010_p2;
reg   [31:0] mul_ln1171_2_reg_2771;
wire   [31:0] grp_fu_1018_p2;
reg   [31:0] mul_ln1171_3_reg_2776;
reg   [29:0] trunc_ln717_2_reg_2791;
reg   [29:0] trunc_ln717_3_reg_2796;
wire   [31:0] grp_fu_1080_p2;
reg   [31:0] mul_ln1171_4_reg_2801;
wire   [31:0] grp_fu_1088_p2;
reg   [31:0] mul_ln1171_5_reg_2806;
reg   [29:0] trunc_ln717_4_reg_2821;
reg   [29:0] trunc_ln717_5_reg_2826;
wire   [31:0] grp_fu_1150_p2;
reg   [31:0] mul_ln1171_6_reg_2831;
wire   [31:0] grp_fu_1158_p2;
reg   [31:0] mul_ln1171_7_reg_2836;
reg   [29:0] trunc_ln717_6_reg_2851;
reg   [29:0] trunc_ln717_7_reg_2856;
wire   [31:0] grp_fu_1220_p2;
reg   [31:0] mul_ln1171_8_reg_2861;
wire   [31:0] grp_fu_1228_p2;
reg   [31:0] mul_ln1171_9_reg_2866;
reg   [29:0] trunc_ln717_8_reg_2881;
reg   [29:0] trunc_ln717_9_reg_2886;
wire   [31:0] grp_fu_1290_p2;
reg   [31:0] mul_ln1171_10_reg_2891;
wire   [31:0] grp_fu_1298_p2;
reg   [31:0] mul_ln1171_11_reg_2896;
reg   [29:0] trunc_ln717_s_reg_2911;
reg   [29:0] trunc_ln717_10_reg_2916;
wire   [31:0] grp_fu_1360_p2;
reg   [31:0] mul_ln1171_12_reg_2921;
wire   [31:0] grp_fu_1368_p2;
reg   [31:0] mul_ln1171_13_reg_2926;
reg   [29:0] trunc_ln717_11_reg_2941;
reg   [29:0] trunc_ln717_12_reg_2946;
wire   [31:0] grp_fu_1430_p2;
reg   [31:0] mul_ln1171_14_reg_2951;
wire   [31:0] grp_fu_1438_p2;
reg   [31:0] mul_ln1171_15_reg_2956;
reg   [29:0] trunc_ln717_13_reg_2971;
reg   [29:0] trunc_ln717_14_reg_2976;
wire   [31:0] grp_fu_1500_p2;
reg   [31:0] mul_ln1171_16_reg_2981;
wire   [31:0] grp_fu_1508_p2;
reg   [31:0] mul_ln1171_17_reg_2986;
reg   [29:0] trunc_ln717_15_reg_3001;
reg   [29:0] trunc_ln717_16_reg_3006;
wire   [31:0] grp_fu_1570_p2;
reg   [31:0] mul_ln1171_18_reg_3011;
wire   [31:0] grp_fu_1578_p2;
reg   [31:0] mul_ln1171_19_reg_3016;
reg   [29:0] trunc_ln717_17_reg_3031;
reg   [29:0] trunc_ln717_18_reg_3036;
wire   [31:0] grp_fu_1640_p2;
reg   [31:0] mul_ln1171_20_reg_3041;
wire   [31:0] grp_fu_1648_p2;
reg   [31:0] mul_ln1171_21_reg_3046;
reg   [29:0] trunc_ln717_19_reg_3061;
reg   [29:0] trunc_ln717_20_reg_3066;
wire   [31:0] grp_fu_1710_p2;
reg   [31:0] mul_ln1171_22_reg_3071;
wire   [31:0] grp_fu_1718_p2;
reg   [31:0] mul_ln1171_23_reg_3076;
reg   [29:0] trunc_ln717_21_reg_3091;
reg   [29:0] trunc_ln717_22_reg_3096;
wire   [31:0] grp_fu_1780_p2;
reg   [31:0] mul_ln1171_24_reg_3101;
wire   [31:0] grp_fu_1788_p2;
reg   [31:0] mul_ln1171_25_reg_3106;
reg   [29:0] trunc_ln717_23_reg_3121;
reg   [29:0] trunc_ln717_24_reg_3126;
wire   [31:0] grp_fu_1850_p2;
reg   [31:0] mul_ln1171_26_reg_3131;
wire   [31:0] grp_fu_1858_p2;
reg   [31:0] mul_ln1171_27_reg_3136;
reg   [29:0] trunc_ln717_25_reg_3151;
reg   [29:0] trunc_ln717_26_reg_3156;
wire   [31:0] grp_fu_1920_p2;
reg   [31:0] mul_ln1171_28_reg_3161;
wire   [31:0] grp_fu_1928_p2;
reg   [31:0] mul_ln1171_29_reg_3166;
reg   [29:0] trunc_ln717_27_reg_3181;
wire    ap_CS_fsm_state19;
wire    ap_block_state19_pp0_stage18_iter0;
reg   [29:0] trunc_ln717_28_reg_3186;
wire   [31:0] grp_fu_1990_p2;
reg   [31:0] mul_ln1171_30_reg_3191;
wire   [31:0] grp_fu_1998_p2;
reg   [31:0] mul_ln1171_31_reg_3196;
reg   [29:0] trunc_ln717_29_reg_3206;
wire    ap_CS_fsm_state20;
wire    ap_block_state20_pp0_stage19_iter0;
reg   [29:0] trunc_ln717_30_reg_3211;
wire   [31:0] grp_fu_2060_p2;
reg   [31:0] mul_ln1171_32_reg_3216;
reg   [29:0] trunc_ln717_31_reg_3221;
wire    ap_CS_fsm_state21;
wire    ap_block_state21_pp0_stage20_iter0;
wire   [63:0] p_cast_fu_976_p1;
wire   [63:0] k_cast_fu_933_p1;
reg   [4:0] k_fu_168;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_k_1;
wire   [4:0] add_ln43_fu_927_p2;
wire    ap_CS_fsm_state22;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_CS_fsm_state23;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_CS_fsm_state24;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_CS_fsm_state25;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_CS_fsm_state26;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_CS_fsm_state27;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_CS_fsm_state28;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_CS_fsm_state29;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_CS_fsm_state30;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_CS_fsm_state31;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_CS_fsm_state32;
wire    ap_block_state32_pp0_stage31_iter0;
wire   [4:0] empty_21_fu_970_p2;
wire  signed [29:0] grp_fu_992_p0;
wire  signed [29:0] grp_fu_1001_p0;
wire  signed [29:0] grp_fu_1010_p0;
wire  signed [29:0] grp_fu_1018_p0;
wire   [34:0] shl_ln_fu_1023_p3;
wire  signed [34:0] sext_ln1245_fu_1031_p1;
wire   [34:0] add_ln1245_fu_1034_p2;
wire   [34:0] shl_ln737_1_fu_1050_p3;
wire  signed [34:0] sext_ln1245_1_fu_1058_p1;
wire   [34:0] add_ln1245_1_fu_1061_p2;
wire  signed [29:0] grp_fu_1080_p0;
wire  signed [29:0] grp_fu_1088_p0;
wire   [34:0] shl_ln737_2_fu_1093_p3;
wire  signed [34:0] sext_ln1245_2_fu_1101_p1;
wire   [34:0] add_ln1245_2_fu_1104_p2;
wire   [34:0] shl_ln737_3_fu_1120_p3;
wire  signed [34:0] sext_ln1245_3_fu_1128_p1;
wire   [34:0] add_ln1245_3_fu_1131_p2;
wire  signed [29:0] grp_fu_1150_p0;
wire  signed [29:0] grp_fu_1158_p0;
wire   [34:0] shl_ln737_4_fu_1163_p3;
wire  signed [34:0] sext_ln1245_4_fu_1171_p1;
wire   [34:0] add_ln1245_4_fu_1174_p2;
wire   [34:0] shl_ln737_5_fu_1190_p3;
wire  signed [34:0] sext_ln1245_5_fu_1198_p1;
wire   [34:0] add_ln1245_5_fu_1201_p2;
wire  signed [29:0] grp_fu_1220_p0;
wire  signed [29:0] grp_fu_1228_p0;
wire   [34:0] shl_ln737_6_fu_1233_p3;
wire  signed [34:0] sext_ln1245_6_fu_1241_p1;
wire   [34:0] add_ln1245_6_fu_1244_p2;
wire   [34:0] shl_ln737_7_fu_1260_p3;
wire  signed [34:0] sext_ln1245_7_fu_1268_p1;
wire   [34:0] add_ln1245_7_fu_1271_p2;
wire  signed [29:0] grp_fu_1290_p0;
wire  signed [29:0] grp_fu_1298_p0;
wire   [34:0] shl_ln737_8_fu_1303_p3;
wire  signed [34:0] sext_ln1245_8_fu_1311_p1;
wire   [34:0] add_ln1245_8_fu_1314_p2;
wire   [34:0] shl_ln737_9_fu_1330_p3;
wire  signed [34:0] sext_ln1245_9_fu_1338_p1;
wire   [34:0] add_ln1245_9_fu_1341_p2;
wire  signed [29:0] grp_fu_1360_p0;
wire  signed [29:0] grp_fu_1368_p0;
wire   [34:0] shl_ln737_s_fu_1373_p3;
wire  signed [34:0] sext_ln1245_10_fu_1381_p1;
wire   [34:0] add_ln1245_10_fu_1384_p2;
wire   [34:0] shl_ln737_10_fu_1400_p3;
wire  signed [34:0] sext_ln1245_11_fu_1408_p1;
wire   [34:0] add_ln1245_11_fu_1411_p2;
wire  signed [29:0] grp_fu_1430_p0;
wire  signed [29:0] grp_fu_1438_p0;
wire   [34:0] shl_ln737_11_fu_1443_p3;
wire  signed [34:0] sext_ln1245_12_fu_1451_p1;
wire   [34:0] add_ln1245_12_fu_1454_p2;
wire   [34:0] shl_ln737_12_fu_1470_p3;
wire  signed [34:0] sext_ln1245_13_fu_1478_p1;
wire   [34:0] add_ln1245_13_fu_1481_p2;
wire  signed [29:0] grp_fu_1500_p0;
wire  signed [29:0] grp_fu_1508_p0;
wire   [34:0] shl_ln737_13_fu_1513_p3;
wire  signed [34:0] sext_ln1245_14_fu_1521_p1;
wire   [34:0] add_ln1245_14_fu_1524_p2;
wire   [34:0] shl_ln737_14_fu_1540_p3;
wire  signed [34:0] sext_ln1245_15_fu_1548_p1;
wire   [34:0] add_ln1245_15_fu_1551_p2;
wire  signed [29:0] grp_fu_1570_p0;
wire  signed [29:0] grp_fu_1578_p0;
wire   [34:0] shl_ln737_15_fu_1583_p3;
wire  signed [34:0] sext_ln1245_16_fu_1591_p1;
wire   [34:0] add_ln1245_16_fu_1594_p2;
wire   [34:0] shl_ln737_16_fu_1610_p3;
wire  signed [34:0] sext_ln1245_17_fu_1618_p1;
wire   [34:0] add_ln1245_17_fu_1621_p2;
wire  signed [29:0] grp_fu_1640_p0;
wire  signed [29:0] grp_fu_1648_p0;
wire   [34:0] shl_ln737_17_fu_1653_p3;
wire  signed [34:0] sext_ln1245_18_fu_1661_p1;
wire   [34:0] add_ln1245_18_fu_1664_p2;
wire   [34:0] shl_ln737_18_fu_1680_p3;
wire  signed [34:0] sext_ln1245_19_fu_1688_p1;
wire   [34:0] add_ln1245_19_fu_1691_p2;
wire  signed [29:0] grp_fu_1710_p0;
wire  signed [29:0] grp_fu_1718_p0;
wire   [34:0] shl_ln737_19_fu_1723_p3;
wire  signed [34:0] sext_ln1245_20_fu_1731_p1;
wire   [34:0] add_ln1245_20_fu_1734_p2;
wire   [34:0] shl_ln737_20_fu_1750_p3;
wire  signed [34:0] sext_ln1245_21_fu_1758_p1;
wire   [34:0] add_ln1245_21_fu_1761_p2;
wire  signed [29:0] grp_fu_1780_p0;
wire  signed [29:0] grp_fu_1788_p0;
wire   [34:0] shl_ln737_21_fu_1793_p3;
wire  signed [34:0] sext_ln1245_22_fu_1801_p1;
wire   [34:0] add_ln1245_22_fu_1804_p2;
wire   [34:0] shl_ln737_22_fu_1820_p3;
wire  signed [34:0] sext_ln1245_23_fu_1828_p1;
wire   [34:0] add_ln1245_23_fu_1831_p2;
wire  signed [29:0] grp_fu_1850_p0;
wire  signed [29:0] grp_fu_1858_p0;
wire   [34:0] shl_ln737_23_fu_1863_p3;
wire  signed [34:0] sext_ln1245_24_fu_1871_p1;
wire   [34:0] add_ln1245_24_fu_1874_p2;
wire   [34:0] shl_ln737_24_fu_1890_p3;
wire  signed [34:0] sext_ln1245_25_fu_1898_p1;
wire   [34:0] add_ln1245_25_fu_1901_p2;
wire  signed [29:0] grp_fu_1920_p0;
wire  signed [29:0] grp_fu_1928_p0;
wire   [34:0] shl_ln737_25_fu_1933_p3;
wire  signed [34:0] sext_ln1245_26_fu_1941_p1;
wire   [34:0] add_ln1245_26_fu_1944_p2;
wire   [34:0] shl_ln737_26_fu_1960_p3;
wire  signed [34:0] sext_ln1245_27_fu_1968_p1;
wire   [34:0] add_ln1245_27_fu_1971_p2;
wire  signed [29:0] grp_fu_1990_p0;
wire  signed [29:0] grp_fu_1998_p0;
wire   [34:0] shl_ln737_27_fu_2003_p3;
wire  signed [34:0] sext_ln1245_28_fu_2011_p1;
wire   [34:0] add_ln1245_28_fu_2014_p2;
wire   [34:0] shl_ln737_28_fu_2030_p3;
wire  signed [34:0] sext_ln1245_29_fu_2038_p1;
wire   [34:0] add_ln1245_29_fu_2041_p2;
wire  signed [29:0] grp_fu_2060_p0;
wire   [34:0] shl_ln737_29_fu_2065_p3;
wire  signed [34:0] sext_ln1245_30_fu_2073_p1;
wire   [34:0] add_ln1245_30_fu_2076_p2;
wire   [34:0] shl_ln737_30_fu_2092_p3;
wire  signed [34:0] sext_ln1245_31_fu_2100_p1;
wire   [34:0] add_ln1245_31_fu_2103_p2;
wire   [34:0] shl_ln737_31_fu_2119_p3;
wire  signed [34:0] sext_ln1245_32_fu_2127_p1;
wire   [34:0] add_ln1245_32_fu_2130_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [32:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 ap_done_reg = 1'b0;
end

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_0 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_0_address0),
    .ce0(codebook_V_0_ce0),
    .q0(codebook_V_0_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_1 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_1_address0),
    .ce0(codebook_V_1_ce0),
    .q0(codebook_V_1_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_2 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_2_address0),
    .ce0(codebook_V_2_ce0),
    .q0(codebook_V_2_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_3 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_3_address0),
    .ce0(codebook_V_3_ce0),
    .q0(codebook_V_3_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_4 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_4_address0),
    .ce0(codebook_V_4_ce0),
    .q0(codebook_V_4_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_5 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_5_address0),
    .ce0(codebook_V_5_ce0),
    .q0(codebook_V_5_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_6 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_6_address0),
    .ce0(codebook_V_6_ce0),
    .q0(codebook_V_6_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_7 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_7_address0),
    .ce0(codebook_V_7_ce0),
    .q0(codebook_V_7_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_8 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_8_address0),
    .ce0(codebook_V_8_ce0),
    .q0(codebook_V_8_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_9 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_9_address0),
    .ce0(codebook_V_9_ce0),
    .q0(codebook_V_9_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_10 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_10_address0),
    .ce0(codebook_V_10_ce0),
    .q0(codebook_V_10_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_11 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_11_address0),
    .ce0(codebook_V_11_ce0),
    .q0(codebook_V_11_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_12 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_12_address0),
    .ce0(codebook_V_12_ce0),
    .q0(codebook_V_12_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_13 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_13_address0),
    .ce0(codebook_V_13_ce0),
    .q0(codebook_V_13_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_14 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_14_address0),
    .ce0(codebook_V_14_ce0),
    .q0(codebook_V_14_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_15 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_15_address0),
    .ce0(codebook_V_15_ce0),
    .q0(codebook_V_15_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_16 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_16_address0),
    .ce0(codebook_V_16_ce0),
    .q0(codebook_V_16_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_17 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_17_address0),
    .ce0(codebook_V_17_ce0),
    .q0(codebook_V_17_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_18 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_18_address0),
    .ce0(codebook_V_18_ce0),
    .q0(codebook_V_18_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_19 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_19_address0),
    .ce0(codebook_V_19_ce0),
    .q0(codebook_V_19_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_20 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_20_address0),
    .ce0(codebook_V_20_ce0),
    .q0(codebook_V_20_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_21 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_21_address0),
    .ce0(codebook_V_21_ce0),
    .q0(codebook_V_21_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_22 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_22_address0),
    .ce0(codebook_V_22_ce0),
    .q0(codebook_V_22_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_23 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_23_address0),
    .ce0(codebook_V_23_ce0),
    .q0(codebook_V_23_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_24 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_24_address0),
    .ce0(codebook_V_24_ce0),
    .q0(codebook_V_24_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_25 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_25_address0),
    .ce0(codebook_V_25_ce0),
    .q0(codebook_V_25_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_26 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_26_address0),
    .ce0(codebook_V_26_ce0),
    .q0(codebook_V_26_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_27 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_27_address0),
    .ce0(codebook_V_27_ce0),
    .q0(codebook_V_27_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_28 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_28_address0),
    .ce0(codebook_V_28_ce0),
    .q0(codebook_V_28_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_29 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_29_address0),
    .ce0(codebook_V_29_ce0),
    .q0(codebook_V_29_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_30 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_30_address0),
    .ce0(codebook_V_30_ce0),
    .q0(codebook_V_30_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_31 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_31_address0),
    .ce0(codebook_V_31_ce0),
    .q0(codebook_V_31_q0)
);

correlator_correlator_Pipeline_MULTIPLE_CORRELATORS_codebook_V_32 #(
    .DataWidth( 2 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
codebook_V_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(codebook_V_32_address0),
    .ce0(codebook_V_32_ce0),
    .q0(codebook_V_32_q0)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_992_p0),
    .din1(codebook_V_0_load_reg_2529),
    .ce(1'b1),
    .dout(grp_fu_992_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1001_p0),
    .din1(codebook_V_1_load_reg_2534),
    .ce(1'b1),
    .dout(grp_fu_1001_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1010_p0),
    .din1(codebook_V_2_load_reg_2539),
    .ce(1'b1),
    .dout(grp_fu_1010_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1018_p0),
    .din1(codebook_V_3_load_reg_2544),
    .ce(1'b1),
    .dout(grp_fu_1018_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1080_p0),
    .din1(codebook_V_4_load_reg_2549),
    .ce(1'b1),
    .dout(grp_fu_1080_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1088_p0),
    .din1(codebook_V_5_load_reg_2554),
    .ce(1'b1),
    .dout(grp_fu_1088_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1150_p0),
    .din1(codebook_V_6_load_reg_2559),
    .ce(1'b1),
    .dout(grp_fu_1150_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1158_p0),
    .din1(codebook_V_7_load_reg_2564),
    .ce(1'b1),
    .dout(grp_fu_1158_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1220_p0),
    .din1(codebook_V_8_load_reg_2569),
    .ce(1'b1),
    .dout(grp_fu_1220_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1228_p0),
    .din1(codebook_V_9_load_reg_2574),
    .ce(1'b1),
    .dout(grp_fu_1228_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1290_p0),
    .din1(codebook_V_10_load_reg_2579),
    .ce(1'b1),
    .dout(grp_fu_1290_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1298_p0),
    .din1(codebook_V_11_load_reg_2584),
    .ce(1'b1),
    .dout(grp_fu_1298_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1360_p0),
    .din1(codebook_V_12_load_reg_2589),
    .ce(1'b1),
    .dout(grp_fu_1360_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1368_p0),
    .din1(codebook_V_13_load_reg_2594),
    .ce(1'b1),
    .dout(grp_fu_1368_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1430_p0),
    .din1(codebook_V_14_load_reg_2599),
    .ce(1'b1),
    .dout(grp_fu_1430_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1438_p0),
    .din1(codebook_V_15_load_reg_2604),
    .ce(1'b1),
    .dout(grp_fu_1438_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1500_p0),
    .din1(codebook_V_16_load_reg_2609),
    .ce(1'b1),
    .dout(grp_fu_1500_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1508_p0),
    .din1(codebook_V_17_load_reg_2614),
    .ce(1'b1),
    .dout(grp_fu_1508_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1570_p0),
    .din1(codebook_V_18_load_reg_2619),
    .ce(1'b1),
    .dout(grp_fu_1570_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1578_p0),
    .din1(codebook_V_19_load_reg_2624),
    .ce(1'b1),
    .dout(grp_fu_1578_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1640_p0),
    .din1(codebook_V_20_load_reg_2629),
    .ce(1'b1),
    .dout(grp_fu_1640_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1648_p0),
    .din1(codebook_V_21_load_reg_2634),
    .ce(1'b1),
    .dout(grp_fu_1648_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1710_p0),
    .din1(codebook_V_22_load_reg_2639),
    .ce(1'b1),
    .dout(grp_fu_1710_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1718_p0),
    .din1(codebook_V_23_load_reg_2644),
    .ce(1'b1),
    .dout(grp_fu_1718_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1780_p0),
    .din1(codebook_V_24_load_reg_2649),
    .ce(1'b1),
    .dout(grp_fu_1780_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1788_p0),
    .din1(codebook_V_25_load_reg_2654),
    .ce(1'b1),
    .dout(grp_fu_1788_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1850_p0),
    .din1(codebook_V_26_load_reg_2659),
    .ce(1'b1),
    .dout(grp_fu_1850_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1858_p0),
    .din1(codebook_V_27_load_reg_2664),
    .ce(1'b1),
    .dout(grp_fu_1858_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1920_p0),
    .din1(codebook_V_28_load_reg_2669),
    .ce(1'b1),
    .dout(grp_fu_1920_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1928_p0),
    .din1(codebook_V_29_load_reg_2674),
    .ce(1'b1),
    .dout(grp_fu_1928_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1990_p0),
    .din1(codebook_V_30_load_reg_2679),
    .ce(1'b1),
    .dout(grp_fu_1990_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1998_p0),
    .din1(codebook_V_31_load_reg_2684),
    .ce(1'b1),
    .dout(grp_fu_1998_p2)
);

correlator_mul_30s_2s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mul_30s_2s_32_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2060_p0),
    .din1(codebook_V_32_load_reg_2689),
    .ce(1'b1),
    .dout(grp_fu_2060_p2)
);

correlator_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        if ((icmp_ln43_fu_921_p2 == 1'd0)) begin
            k_fu_168 <= add_ln43_fu_927_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_168 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        codebook_V_0_load_reg_2529 <= codebook_V_0_q0;
        codebook_V_10_load_reg_2579 <= codebook_V_10_q0;
        codebook_V_11_load_reg_2584 <= codebook_V_11_q0;
        codebook_V_12_load_reg_2589 <= codebook_V_12_q0;
        codebook_V_13_load_reg_2594 <= codebook_V_13_q0;
        codebook_V_14_load_reg_2599 <= codebook_V_14_q0;
        codebook_V_15_load_reg_2604 <= codebook_V_15_q0;
        codebook_V_16_load_reg_2609 <= codebook_V_16_q0;
        codebook_V_17_load_reg_2614 <= codebook_V_17_q0;
        codebook_V_18_load_reg_2619 <= codebook_V_18_q0;
        codebook_V_19_load_reg_2624 <= codebook_V_19_q0;
        codebook_V_1_load_reg_2534 <= codebook_V_1_q0;
        codebook_V_20_load_reg_2629 <= codebook_V_20_q0;
        codebook_V_21_load_reg_2634 <= codebook_V_21_q0;
        codebook_V_22_load_reg_2639 <= codebook_V_22_q0;
        codebook_V_23_load_reg_2644 <= codebook_V_23_q0;
        codebook_V_24_load_reg_2649 <= codebook_V_24_q0;
        codebook_V_25_load_reg_2654 <= codebook_V_25_q0;
        codebook_V_26_load_reg_2659 <= codebook_V_26_q0;
        codebook_V_27_load_reg_2664 <= codebook_V_27_q0;
        codebook_V_28_load_reg_2669 <= codebook_V_28_q0;
        codebook_V_29_load_reg_2674 <= codebook_V_29_q0;
        codebook_V_2_load_reg_2539 <= codebook_V_2_q0;
        codebook_V_30_load_reg_2679 <= codebook_V_30_q0;
        codebook_V_31_load_reg_2684 <= codebook_V_31_q0;
        codebook_V_32_load_reg_2689 <= codebook_V_32_q0;
        codebook_V_3_load_reg_2544 <= codebook_V_3_q0;
        codebook_V_4_load_reg_2549 <= codebook_V_4_q0;
        codebook_V_5_load_reg_2554 <= codebook_V_5_q0;
        codebook_V_6_load_reg_2559 <= codebook_V_6_q0;
        codebook_V_7_load_reg_2564 <= codebook_V_7_q0;
        codebook_V_8_load_reg_2569 <= codebook_V_8_q0;
        codebook_V_9_load_reg_2574 <= codebook_V_9_q0;
        r_V_1_reg_2524 <= temp_input_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mul_ln1171_10_reg_2891 <= grp_fu_1290_p2;
        mul_ln1171_11_reg_2896 <= grp_fu_1298_p2;
        trunc_ln717_8_reg_2881 <= {{add_ln1245_8_fu_1314_p2[34:5]}};
        trunc_ln717_9_reg_2886 <= {{add_ln1245_9_fu_1341_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mul_ln1171_12_reg_2921 <= grp_fu_1360_p2;
        mul_ln1171_13_reg_2926 <= grp_fu_1368_p2;
        trunc_ln717_10_reg_2916 <= {{add_ln1245_11_fu_1411_p2[34:5]}};
        trunc_ln717_s_reg_2911 <= {{add_ln1245_10_fu_1384_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_ln1171_14_reg_2951 <= grp_fu_1430_p2;
        mul_ln1171_15_reg_2956 <= grp_fu_1438_p2;
        trunc_ln717_11_reg_2941 <= {{add_ln1245_12_fu_1454_p2[34:5]}};
        trunc_ln717_12_reg_2946 <= {{add_ln1245_13_fu_1481_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mul_ln1171_16_reg_2981 <= grp_fu_1500_p2;
        mul_ln1171_17_reg_2986 <= grp_fu_1508_p2;
        trunc_ln717_13_reg_2971 <= {{add_ln1245_14_fu_1524_p2[34:5]}};
        trunc_ln717_14_reg_2976 <= {{add_ln1245_15_fu_1551_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mul_ln1171_18_reg_3011 <= grp_fu_1570_p2;
        mul_ln1171_19_reg_3016 <= grp_fu_1578_p2;
        trunc_ln717_15_reg_3001 <= {{add_ln1245_16_fu_1594_p2[34:5]}};
        trunc_ln717_16_reg_3006 <= {{add_ln1245_17_fu_1621_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln1171_1_reg_2746 <= grp_fu_1001_p2;
        mul_ln1171_reg_2741 <= grp_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        mul_ln1171_20_reg_3041 <= grp_fu_1640_p2;
        mul_ln1171_21_reg_3046 <= grp_fu_1648_p2;
        trunc_ln717_17_reg_3031 <= {{add_ln1245_18_fu_1664_p2[34:5]}};
        trunc_ln717_18_reg_3036 <= {{add_ln1245_19_fu_1691_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_ln1171_22_reg_3071 <= grp_fu_1710_p2;
        mul_ln1171_23_reg_3076 <= grp_fu_1718_p2;
        trunc_ln717_19_reg_3061 <= {{add_ln1245_20_fu_1734_p2[34:5]}};
        trunc_ln717_20_reg_3066 <= {{add_ln1245_21_fu_1761_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln1171_24_reg_3101 <= grp_fu_1780_p2;
        mul_ln1171_25_reg_3106 <= grp_fu_1788_p2;
        trunc_ln717_21_reg_3091 <= {{add_ln1245_22_fu_1804_p2[34:5]}};
        trunc_ln717_22_reg_3096 <= {{add_ln1245_23_fu_1831_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_ln1171_26_reg_3131 <= grp_fu_1850_p2;
        mul_ln1171_27_reg_3136 <= grp_fu_1858_p2;
        trunc_ln717_23_reg_3121 <= {{add_ln1245_24_fu_1874_p2[34:5]}};
        trunc_ln717_24_reg_3126 <= {{add_ln1245_25_fu_1901_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_ln1171_28_reg_3161 <= grp_fu_1920_p2;
        mul_ln1171_29_reg_3166 <= grp_fu_1928_p2;
        trunc_ln717_25_reg_3151 <= {{add_ln1245_26_fu_1944_p2[34:5]}};
        trunc_ln717_26_reg_3156 <= {{add_ln1245_27_fu_1971_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln1171_2_reg_2771 <= grp_fu_1010_p2;
        mul_ln1171_3_reg_2776 <= grp_fu_1018_p2;
        trunc_ln4_reg_2761 <= {{add_ln1245_fu_1034_p2[34:5]}};
        trunc_ln717_1_reg_2766 <= {{add_ln1245_1_fu_1061_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mul_ln1171_30_reg_3191 <= grp_fu_1990_p2;
        mul_ln1171_31_reg_3196 <= grp_fu_1998_p2;
        trunc_ln717_27_reg_3181 <= {{add_ln1245_28_fu_2014_p2[34:5]}};
        trunc_ln717_28_reg_3186 <= {{add_ln1245_29_fu_2041_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        mul_ln1171_32_reg_3216 <= grp_fu_2060_p2;
        trunc_ln717_29_reg_3206 <= {{add_ln1245_30_fu_2076_p2[34:5]}};
        trunc_ln717_30_reg_3211 <= {{add_ln1245_31_fu_2103_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln1171_4_reg_2801 <= grp_fu_1080_p2;
        mul_ln1171_5_reg_2806 <= grp_fu_1088_p2;
        trunc_ln717_2_reg_2791 <= {{add_ln1245_2_fu_1104_p2[34:5]}};
        trunc_ln717_3_reg_2796 <= {{add_ln1245_3_fu_1131_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln1171_6_reg_2831 <= grp_fu_1150_p2;
        mul_ln1171_7_reg_2836 <= grp_fu_1158_p2;
        trunc_ln717_4_reg_2821 <= {{add_ln1245_4_fu_1174_p2[34:5]}};
        trunc_ln717_5_reg_2826 <= {{add_ln1245_5_fu_1201_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mul_ln1171_8_reg_2861 <= grp_fu_1220_p2;
        mul_ln1171_9_reg_2866 <= grp_fu_1228_p2;
        trunc_ln717_6_reg_2851 <= {{add_ln1245_6_fu_1244_p2[34:5]}};
        trunc_ln717_7_reg_2856 <= {{add_ln1245_7_fu_1271_p2[34:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        r_V_reg_2694 <= r_V_fu_986_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_889 <= acc_V_q1;
        reg_893 <= acc_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_897 <= acc_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_901 <= acc_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_905 <= acc_V_q1;
        reg_909 <= acc_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        trunc_ln717_31_reg_3221 <= {{add_ln1245_32_fu_2130_p2[34:5]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        acc_V_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        acc_V_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        acc_V_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        acc_V_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        acc_V_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        acc_V_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        acc_V_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        acc_V_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        acc_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        acc_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        acc_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        acc_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        acc_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        acc_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        acc_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        acc_V_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        acc_V_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acc_V_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        acc_V_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        acc_V_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        acc_V_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        acc_V_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        acc_V_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        acc_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        acc_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        acc_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        acc_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        acc_V_address0 = 64'd3;
    end else if (((icmp_ln43_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_V_address0 = 64'd1;
    end else begin
        acc_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        acc_V_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        acc_V_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        acc_V_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        acc_V_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        acc_V_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        acc_V_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        acc_V_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        acc_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        acc_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        acc_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        acc_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        acc_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        acc_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        acc_V_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        acc_V_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        acc_V_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        acc_V_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        acc_V_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        acc_V_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        acc_V_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        acc_V_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        acc_V_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        acc_V_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_V_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        acc_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        acc_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        acc_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        acc_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        acc_V_address1 = 64'd2;
    end else if (((icmp_ln43_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_V_address1 = 64'd0;
    end else begin
        acc_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln43_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        acc_V_ce0 = 1'b1;
    end else begin
        acc_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln43_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        acc_V_ce1 = 1'b1;
    end else begin
        acc_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        acc_V_d0 = trunc_ln717_31_reg_3221;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        acc_V_d0 = trunc_ln717_29_reg_3206;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_d0 = trunc_ln717_27_reg_3181;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        acc_V_d0 = trunc_ln717_25_reg_3151;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        acc_V_d0 = trunc_ln717_23_reg_3121;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        acc_V_d0 = trunc_ln717_21_reg_3091;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        acc_V_d0 = trunc_ln717_19_reg_3061;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        acc_V_d0 = trunc_ln717_17_reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        acc_V_d0 = trunc_ln717_15_reg_3001;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        acc_V_d0 = trunc_ln717_13_reg_2971;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        acc_V_d0 = trunc_ln717_11_reg_2941;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        acc_V_d0 = trunc_ln717_s_reg_2911;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_V_d0 = trunc_ln717_8_reg_2881;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        acc_V_d0 = trunc_ln717_6_reg_2851;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        acc_V_d0 = trunc_ln717_4_reg_2821;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        acc_V_d0 = trunc_ln717_2_reg_2791;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        acc_V_d0 = trunc_ln4_reg_2761;
    end else begin
        acc_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        acc_V_d1 = trunc_ln717_30_reg_3211;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        acc_V_d1 = trunc_ln717_28_reg_3186;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_d1 = trunc_ln717_26_reg_3156;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        acc_V_d1 = trunc_ln717_24_reg_3126;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        acc_V_d1 = trunc_ln717_22_reg_3096;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        acc_V_d1 = trunc_ln717_20_reg_3066;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        acc_V_d1 = trunc_ln717_18_reg_3036;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        acc_V_d1 = trunc_ln717_16_reg_3006;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        acc_V_d1 = trunc_ln717_14_reg_2976;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        acc_V_d1 = trunc_ln717_12_reg_2946;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        acc_V_d1 = trunc_ln717_10_reg_2916;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        acc_V_d1 = trunc_ln717_9_reg_2886;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_V_d1 = trunc_ln717_7_reg_2856;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        acc_V_d1 = trunc_ln717_5_reg_2826;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        acc_V_d1 = trunc_ln717_3_reg_2796;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        acc_V_d1 = trunc_ln717_1_reg_2766;
    end else begin
        acc_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        acc_V_we0 = 1'b1;
    end else begin
        acc_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state18))) begin
        acc_V_we1 = 1'b1;
    end else begin
        acc_V_we1 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln43_fu_921_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_k_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_168;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_0_ce0 = 1'b1;
    end else begin
        codebook_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_10_ce0 = 1'b1;
    end else begin
        codebook_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_11_ce0 = 1'b1;
    end else begin
        codebook_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_12_ce0 = 1'b1;
    end else begin
        codebook_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_13_ce0 = 1'b1;
    end else begin
        codebook_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_14_ce0 = 1'b1;
    end else begin
        codebook_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_15_ce0 = 1'b1;
    end else begin
        codebook_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_16_ce0 = 1'b1;
    end else begin
        codebook_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_17_ce0 = 1'b1;
    end else begin
        codebook_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_18_ce0 = 1'b1;
    end else begin
        codebook_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_19_ce0 = 1'b1;
    end else begin
        codebook_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_1_ce0 = 1'b1;
    end else begin
        codebook_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_20_ce0 = 1'b1;
    end else begin
        codebook_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_21_ce0 = 1'b1;
    end else begin
        codebook_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_22_ce0 = 1'b1;
    end else begin
        codebook_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_23_ce0 = 1'b1;
    end else begin
        codebook_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_24_ce0 = 1'b1;
    end else begin
        codebook_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_25_ce0 = 1'b1;
    end else begin
        codebook_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_26_ce0 = 1'b1;
    end else begin
        codebook_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_27_ce0 = 1'b1;
    end else begin
        codebook_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_28_ce0 = 1'b1;
    end else begin
        codebook_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_29_ce0 = 1'b1;
    end else begin
        codebook_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_2_ce0 = 1'b1;
    end else begin
        codebook_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_30_ce0 = 1'b1;
    end else begin
        codebook_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_31_ce0 = 1'b1;
    end else begin
        codebook_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_32_ce0 = 1'b1;
    end else begin
        codebook_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_3_ce0 = 1'b1;
    end else begin
        codebook_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_4_ce0 = 1'b1;
    end else begin
        codebook_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_5_ce0 = 1'b1;
    end else begin
        codebook_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_6_ce0 = 1'b1;
    end else begin
        codebook_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_7_ce0 = 1'b1;
    end else begin
        codebook_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_8_ce0 = 1'b1;
    end else begin
        codebook_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        codebook_V_9_ce0 = 1'b1;
    end else begin
        codebook_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        temp_input_V_ce0 = 1'b1;
    end else begin
        temp_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln43_fu_921_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1245_10_fu_1384_p2 = ($signed(shl_ln737_s_fu_1373_p3) + $signed(sext_ln1245_10_fu_1381_p1));

assign add_ln1245_11_fu_1411_p2 = ($signed(shl_ln737_10_fu_1400_p3) + $signed(sext_ln1245_11_fu_1408_p1));

assign add_ln1245_12_fu_1454_p2 = ($signed(shl_ln737_11_fu_1443_p3) + $signed(sext_ln1245_12_fu_1451_p1));

assign add_ln1245_13_fu_1481_p2 = ($signed(shl_ln737_12_fu_1470_p3) + $signed(sext_ln1245_13_fu_1478_p1));

assign add_ln1245_14_fu_1524_p2 = ($signed(shl_ln737_13_fu_1513_p3) + $signed(sext_ln1245_14_fu_1521_p1));

assign add_ln1245_15_fu_1551_p2 = ($signed(shl_ln737_14_fu_1540_p3) + $signed(sext_ln1245_15_fu_1548_p1));

assign add_ln1245_16_fu_1594_p2 = ($signed(shl_ln737_15_fu_1583_p3) + $signed(sext_ln1245_16_fu_1591_p1));

assign add_ln1245_17_fu_1621_p2 = ($signed(shl_ln737_16_fu_1610_p3) + $signed(sext_ln1245_17_fu_1618_p1));

assign add_ln1245_18_fu_1664_p2 = ($signed(shl_ln737_17_fu_1653_p3) + $signed(sext_ln1245_18_fu_1661_p1));

assign add_ln1245_19_fu_1691_p2 = ($signed(shl_ln737_18_fu_1680_p3) + $signed(sext_ln1245_19_fu_1688_p1));

assign add_ln1245_1_fu_1061_p2 = ($signed(shl_ln737_1_fu_1050_p3) + $signed(sext_ln1245_1_fu_1058_p1));

assign add_ln1245_20_fu_1734_p2 = ($signed(shl_ln737_19_fu_1723_p3) + $signed(sext_ln1245_20_fu_1731_p1));

assign add_ln1245_21_fu_1761_p2 = ($signed(shl_ln737_20_fu_1750_p3) + $signed(sext_ln1245_21_fu_1758_p1));

assign add_ln1245_22_fu_1804_p2 = ($signed(shl_ln737_21_fu_1793_p3) + $signed(sext_ln1245_22_fu_1801_p1));

assign add_ln1245_23_fu_1831_p2 = ($signed(shl_ln737_22_fu_1820_p3) + $signed(sext_ln1245_23_fu_1828_p1));

assign add_ln1245_24_fu_1874_p2 = ($signed(shl_ln737_23_fu_1863_p3) + $signed(sext_ln1245_24_fu_1871_p1));

assign add_ln1245_25_fu_1901_p2 = ($signed(shl_ln737_24_fu_1890_p3) + $signed(sext_ln1245_25_fu_1898_p1));

assign add_ln1245_26_fu_1944_p2 = ($signed(shl_ln737_25_fu_1933_p3) + $signed(sext_ln1245_26_fu_1941_p1));

assign add_ln1245_27_fu_1971_p2 = ($signed(shl_ln737_26_fu_1960_p3) + $signed(sext_ln1245_27_fu_1968_p1));

assign add_ln1245_28_fu_2014_p2 = ($signed(shl_ln737_27_fu_2003_p3) + $signed(sext_ln1245_28_fu_2011_p1));

assign add_ln1245_29_fu_2041_p2 = ($signed(shl_ln737_28_fu_2030_p3) + $signed(sext_ln1245_29_fu_2038_p1));

assign add_ln1245_2_fu_1104_p2 = ($signed(shl_ln737_2_fu_1093_p3) + $signed(sext_ln1245_2_fu_1101_p1));

assign add_ln1245_30_fu_2076_p2 = ($signed(shl_ln737_29_fu_2065_p3) + $signed(sext_ln1245_30_fu_2073_p1));

assign add_ln1245_31_fu_2103_p2 = ($signed(shl_ln737_30_fu_2092_p3) + $signed(sext_ln1245_31_fu_2100_p1));

assign add_ln1245_32_fu_2130_p2 = ($signed(shl_ln737_31_fu_2119_p3) + $signed(sext_ln1245_32_fu_2127_p1));

assign add_ln1245_3_fu_1131_p2 = ($signed(shl_ln737_3_fu_1120_p3) + $signed(sext_ln1245_3_fu_1128_p1));

assign add_ln1245_4_fu_1174_p2 = ($signed(shl_ln737_4_fu_1163_p3) + $signed(sext_ln1245_4_fu_1171_p1));

assign add_ln1245_5_fu_1201_p2 = ($signed(shl_ln737_5_fu_1190_p3) + $signed(sext_ln1245_5_fu_1198_p1));

assign add_ln1245_6_fu_1244_p2 = ($signed(shl_ln737_6_fu_1233_p3) + $signed(sext_ln1245_6_fu_1241_p1));

assign add_ln1245_7_fu_1271_p2 = ($signed(shl_ln737_7_fu_1260_p3) + $signed(sext_ln1245_7_fu_1268_p1));

assign add_ln1245_8_fu_1314_p2 = ($signed(shl_ln737_8_fu_1303_p3) + $signed(sext_ln1245_8_fu_1311_p1));

assign add_ln1245_9_fu_1341_p2 = ($signed(shl_ln737_9_fu_1330_p3) + $signed(sext_ln1245_9_fu_1338_p1));

assign add_ln1245_fu_1034_p2 = ($signed(shl_ln_fu_1023_p3) + $signed(sext_ln1245_fu_1031_p1));

assign add_ln43_fu_927_p2 = (ap_sig_allocacmp_k_1 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign codebook_V_0_address0 = k_cast_fu_933_p1;

assign codebook_V_10_address0 = k_cast_fu_933_p1;

assign codebook_V_11_address0 = k_cast_fu_933_p1;

assign codebook_V_12_address0 = k_cast_fu_933_p1;

assign codebook_V_13_address0 = k_cast_fu_933_p1;

assign codebook_V_14_address0 = k_cast_fu_933_p1;

assign codebook_V_15_address0 = k_cast_fu_933_p1;

assign codebook_V_16_address0 = k_cast_fu_933_p1;

assign codebook_V_17_address0 = k_cast_fu_933_p1;

assign codebook_V_18_address0 = k_cast_fu_933_p1;

assign codebook_V_19_address0 = k_cast_fu_933_p1;

assign codebook_V_1_address0 = k_cast_fu_933_p1;

assign codebook_V_20_address0 = k_cast_fu_933_p1;

assign codebook_V_21_address0 = k_cast_fu_933_p1;

assign codebook_V_22_address0 = k_cast_fu_933_p1;

assign codebook_V_23_address0 = k_cast_fu_933_p1;

assign codebook_V_24_address0 = k_cast_fu_933_p1;

assign codebook_V_25_address0 = k_cast_fu_933_p1;

assign codebook_V_26_address0 = k_cast_fu_933_p1;

assign codebook_V_27_address0 = k_cast_fu_933_p1;

assign codebook_V_28_address0 = k_cast_fu_933_p1;

assign codebook_V_29_address0 = k_cast_fu_933_p1;

assign codebook_V_2_address0 = k_cast_fu_933_p1;

assign codebook_V_30_address0 = k_cast_fu_933_p1;

assign codebook_V_31_address0 = k_cast_fu_933_p1;

assign codebook_V_32_address0 = k_cast_fu_933_p1;

assign codebook_V_3_address0 = k_cast_fu_933_p1;

assign codebook_V_4_address0 = k_cast_fu_933_p1;

assign codebook_V_5_address0 = k_cast_fu_933_p1;

assign codebook_V_6_address0 = k_cast_fu_933_p1;

assign codebook_V_7_address0 = k_cast_fu_933_p1;

assign codebook_V_8_address0 = k_cast_fu_933_p1;

assign codebook_V_9_address0 = k_cast_fu_933_p1;

assign empty_21_fu_970_p2 = ($signed(5'd30) - $signed(ap_sig_allocacmp_k_1));

assign grp_fu_1001_p0 = r_V_fu_986_p1;

assign grp_fu_1010_p0 = r_V_reg_2694;

assign grp_fu_1018_p0 = r_V_reg_2694;

assign grp_fu_1080_p0 = r_V_reg_2694;

assign grp_fu_1088_p0 = r_V_reg_2694;

assign grp_fu_1150_p0 = r_V_reg_2694;

assign grp_fu_1158_p0 = r_V_reg_2694;

assign grp_fu_1220_p0 = r_V_reg_2694;

assign grp_fu_1228_p0 = r_V_reg_2694;

assign grp_fu_1290_p0 = r_V_reg_2694;

assign grp_fu_1298_p0 = r_V_reg_2694;

assign grp_fu_1360_p0 = r_V_reg_2694;

assign grp_fu_1368_p0 = r_V_reg_2694;

assign grp_fu_1430_p0 = r_V_reg_2694;

assign grp_fu_1438_p0 = r_V_reg_2694;

assign grp_fu_1500_p0 = r_V_reg_2694;

assign grp_fu_1508_p0 = r_V_reg_2694;

assign grp_fu_1570_p0 = r_V_reg_2694;

assign grp_fu_1578_p0 = r_V_reg_2694;

assign grp_fu_1640_p0 = r_V_reg_2694;

assign grp_fu_1648_p0 = r_V_reg_2694;

assign grp_fu_1710_p0 = r_V_reg_2694;

assign grp_fu_1718_p0 = r_V_reg_2694;

assign grp_fu_1780_p0 = r_V_reg_2694;

assign grp_fu_1788_p0 = r_V_reg_2694;

assign grp_fu_1850_p0 = r_V_reg_2694;

assign grp_fu_1858_p0 = r_V_reg_2694;

assign grp_fu_1920_p0 = r_V_reg_2694;

assign grp_fu_1928_p0 = r_V_reg_2694;

assign grp_fu_1990_p0 = r_V_reg_2694;

assign grp_fu_1998_p0 = r_V_reg_2694;

assign grp_fu_2060_p0 = r_V_reg_2694;

assign grp_fu_992_p0 = r_V_fu_986_p1;

assign icmp_ln43_fu_921_p2 = ((ap_sig_allocacmp_k_1 == 5'd31) ? 1'b1 : 1'b0);

assign k_cast_fu_933_p1 = ap_sig_allocacmp_k_1;

assign p_cast_fu_976_p1 = empty_21_fu_970_p2;

assign r_V_fu_986_p1 = $signed(r_V_1_reg_2524);

assign sext_ln1245_10_fu_1381_p1 = $signed(mul_ln1171_10_reg_2891);

assign sext_ln1245_11_fu_1408_p1 = $signed(mul_ln1171_11_reg_2896);

assign sext_ln1245_12_fu_1451_p1 = $signed(mul_ln1171_12_reg_2921);

assign sext_ln1245_13_fu_1478_p1 = $signed(mul_ln1171_13_reg_2926);

assign sext_ln1245_14_fu_1521_p1 = $signed(mul_ln1171_14_reg_2951);

assign sext_ln1245_15_fu_1548_p1 = $signed(mul_ln1171_15_reg_2956);

assign sext_ln1245_16_fu_1591_p1 = $signed(mul_ln1171_16_reg_2981);

assign sext_ln1245_17_fu_1618_p1 = $signed(mul_ln1171_17_reg_2986);

assign sext_ln1245_18_fu_1661_p1 = $signed(mul_ln1171_18_reg_3011);

assign sext_ln1245_19_fu_1688_p1 = $signed(mul_ln1171_19_reg_3016);

assign sext_ln1245_1_fu_1058_p1 = $signed(mul_ln1171_1_reg_2746);

assign sext_ln1245_20_fu_1731_p1 = $signed(mul_ln1171_20_reg_3041);

assign sext_ln1245_21_fu_1758_p1 = $signed(mul_ln1171_21_reg_3046);

assign sext_ln1245_22_fu_1801_p1 = $signed(mul_ln1171_22_reg_3071);

assign sext_ln1245_23_fu_1828_p1 = $signed(mul_ln1171_23_reg_3076);

assign sext_ln1245_24_fu_1871_p1 = $signed(mul_ln1171_24_reg_3101);

assign sext_ln1245_25_fu_1898_p1 = $signed(mul_ln1171_25_reg_3106);

assign sext_ln1245_26_fu_1941_p1 = $signed(mul_ln1171_26_reg_3131);

assign sext_ln1245_27_fu_1968_p1 = $signed(mul_ln1171_27_reg_3136);

assign sext_ln1245_28_fu_2011_p1 = $signed(mul_ln1171_28_reg_3161);

assign sext_ln1245_29_fu_2038_p1 = $signed(mul_ln1171_29_reg_3166);

assign sext_ln1245_2_fu_1101_p1 = $signed(mul_ln1171_2_reg_2771);

assign sext_ln1245_30_fu_2073_p1 = $signed(mul_ln1171_30_reg_3191);

assign sext_ln1245_31_fu_2100_p1 = $signed(mul_ln1171_31_reg_3196);

assign sext_ln1245_32_fu_2127_p1 = $signed(mul_ln1171_32_reg_3216);

assign sext_ln1245_3_fu_1128_p1 = $signed(mul_ln1171_3_reg_2776);

assign sext_ln1245_4_fu_1171_p1 = $signed(mul_ln1171_4_reg_2801);

assign sext_ln1245_5_fu_1198_p1 = $signed(mul_ln1171_5_reg_2806);

assign sext_ln1245_6_fu_1241_p1 = $signed(mul_ln1171_6_reg_2831);

assign sext_ln1245_7_fu_1268_p1 = $signed(mul_ln1171_7_reg_2836);

assign sext_ln1245_8_fu_1311_p1 = $signed(mul_ln1171_8_reg_2861);

assign sext_ln1245_9_fu_1338_p1 = $signed(mul_ln1171_9_reg_2866);

assign sext_ln1245_fu_1031_p1 = $signed(mul_ln1171_reg_2741);

assign shl_ln737_10_fu_1400_p3 = {{reg_909}, {5'd0}};

assign shl_ln737_11_fu_1443_p3 = {{reg_889}, {5'd0}};

assign shl_ln737_12_fu_1470_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_13_fu_1513_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_14_fu_1540_p3 = {{reg_901}, {5'd0}};

assign shl_ln737_15_fu_1583_p3 = {{reg_905}, {5'd0}};

assign shl_ln737_16_fu_1610_p3 = {{reg_909}, {5'd0}};

assign shl_ln737_17_fu_1653_p3 = {{reg_889}, {5'd0}};

assign shl_ln737_18_fu_1680_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_19_fu_1723_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_1_fu_1050_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_20_fu_1750_p3 = {{reg_901}, {5'd0}};

assign shl_ln737_21_fu_1793_p3 = {{reg_905}, {5'd0}};

assign shl_ln737_22_fu_1820_p3 = {{reg_909}, {5'd0}};

assign shl_ln737_23_fu_1863_p3 = {{reg_889}, {5'd0}};

assign shl_ln737_24_fu_1890_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_25_fu_1933_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_26_fu_1960_p3 = {{reg_901}, {5'd0}};

assign shl_ln737_27_fu_2003_p3 = {{reg_905}, {5'd0}};

assign shl_ln737_28_fu_2030_p3 = {{reg_909}, {5'd0}};

assign shl_ln737_29_fu_2065_p3 = {{reg_889}, {5'd0}};

assign shl_ln737_2_fu_1093_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_30_fu_2092_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_31_fu_2119_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_3_fu_1120_p3 = {{reg_901}, {5'd0}};

assign shl_ln737_4_fu_1163_p3 = {{reg_905}, {5'd0}};

assign shl_ln737_5_fu_1190_p3 = {{reg_909}, {5'd0}};

assign shl_ln737_6_fu_1233_p3 = {{reg_889}, {5'd0}};

assign shl_ln737_7_fu_1260_p3 = {{reg_893}, {5'd0}};

assign shl_ln737_8_fu_1303_p3 = {{reg_897}, {5'd0}};

assign shl_ln737_9_fu_1330_p3 = {{reg_901}, {5'd0}};

assign shl_ln737_s_fu_1373_p3 = {{reg_905}, {5'd0}};

assign shl_ln_fu_1023_p3 = {{reg_889}, {5'd0}};

assign temp_input_V_address0 = p_cast_fu_976_p1;

endmodule //correlator_correlator_Pipeline_MULTIPLE_CORRELATORS
