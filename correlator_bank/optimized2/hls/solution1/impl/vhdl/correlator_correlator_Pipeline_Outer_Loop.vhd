-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlator_correlator_Pipeline_Outer_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    acc_V_32_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_31_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_30_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_29_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_28_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_27_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_26_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_25_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_24_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_23_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_22_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_21_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_20_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_19_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_18_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_17_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_16_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_15_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_14_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_13_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_12_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_11_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_10_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_9_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_8_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_7_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_6_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_5_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_4_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_3_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_2_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_1_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_0_1_reload : IN STD_LOGIC_VECTOR (29 downto 0);
    select_ln580 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_1_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_2_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_3_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_4_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_5_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_6_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_7_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_8_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_9_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_10_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_11_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_12_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_13_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_14_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_15_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_16_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_17_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_18_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_19_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_20_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_21_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_22_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_23_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_24_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_25_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_26_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_27_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_28_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_29_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    temp_input_V_30_0 : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_V_32_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_32_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_31_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_31_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_30_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_30_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_29_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_29_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_28_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_28_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_27_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_27_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_26_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_26_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_25_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_25_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_24_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_24_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_23_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_23_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_22_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_22_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_21_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_21_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_20_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_20_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_19_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_19_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_18_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_18_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_17_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_17_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_16_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_16_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_15_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_15_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_14_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_14_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_13_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_13_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_12_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_12_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_11_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_11_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_10_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_10_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_9_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_9_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_8_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_8_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_7_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_7_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_6_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_6_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_5_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_5_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_4_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_4_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_3_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_3_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_2_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_2_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_1_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_1_3_out_ap_vld : OUT STD_LOGIC;
    acc_V_0_3_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    acc_V_0_3_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of correlator_correlator_Pipeline_Outer_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln47_fu_1655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal codebook_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_0_ce0 : STD_LOGIC;
    signal codebook_V_0_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_1_ce0 : STD_LOGIC;
    signal codebook_V_1_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_2_ce0 : STD_LOGIC;
    signal codebook_V_2_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_3_ce0 : STD_LOGIC;
    signal codebook_V_3_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_4_ce0 : STD_LOGIC;
    signal codebook_V_4_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_5_ce0 : STD_LOGIC;
    signal codebook_V_5_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_6_ce0 : STD_LOGIC;
    signal codebook_V_6_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_7_ce0 : STD_LOGIC;
    signal codebook_V_7_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_8_ce0 : STD_LOGIC;
    signal codebook_V_8_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_9_ce0 : STD_LOGIC;
    signal codebook_V_9_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_10_ce0 : STD_LOGIC;
    signal codebook_V_10_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_11_ce0 : STD_LOGIC;
    signal codebook_V_11_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_12_ce0 : STD_LOGIC;
    signal codebook_V_12_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_13_ce0 : STD_LOGIC;
    signal codebook_V_13_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_14_ce0 : STD_LOGIC;
    signal codebook_V_14_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_15_ce0 : STD_LOGIC;
    signal codebook_V_15_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_16_ce0 : STD_LOGIC;
    signal codebook_V_16_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_17_ce0 : STD_LOGIC;
    signal codebook_V_17_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_18_ce0 : STD_LOGIC;
    signal codebook_V_18_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_19_ce0 : STD_LOGIC;
    signal codebook_V_19_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_20_ce0 : STD_LOGIC;
    signal codebook_V_20_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_21_ce0 : STD_LOGIC;
    signal codebook_V_21_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_22_ce0 : STD_LOGIC;
    signal codebook_V_22_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_23_ce0 : STD_LOGIC;
    signal codebook_V_23_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_24_ce0 : STD_LOGIC;
    signal codebook_V_24_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_25_ce0 : STD_LOGIC;
    signal codebook_V_25_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_26_ce0 : STD_LOGIC;
    signal codebook_V_26_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_27_ce0 : STD_LOGIC;
    signal codebook_V_27_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_28_ce0 : STD_LOGIC;
    signal codebook_V_28_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_29_ce0 : STD_LOGIC;
    signal codebook_V_29_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_30_ce0 : STD_LOGIC;
    signal codebook_V_30_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_31_ce0 : STD_LOGIC;
    signal codebook_V_31_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_32_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal codebook_V_32_ce0 : STD_LOGIC;
    signal codebook_V_32_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln47_reg_3641 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_3641_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_3641_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_1710_p33 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_3645 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_3645_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal codebook_V_0_load_reg_3815 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_1_load_reg_3820 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_2_load_reg_3825 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_3_load_reg_3830 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_4_load_reg_3835 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_5_load_reg_3840 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_6_load_reg_3845 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_7_load_reg_3850 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_8_load_reg_3855 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_9_load_reg_3860 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_10_load_reg_3865 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_11_load_reg_3870 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_12_load_reg_3875 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_13_load_reg_3880 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_14_load_reg_3885 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_15_load_reg_3890 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_16_load_reg_3895 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_17_load_reg_3900 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_18_load_reg_3905 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_19_load_reg_3910 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_20_load_reg_3915 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_21_load_reg_3920 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_22_load_reg_3925 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_23_load_reg_3930 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_24_load_reg_3935 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_25_load_reg_3940 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_26_load_reg_3945 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_27_load_reg_3950 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_28_load_reg_3955 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_29_load_reg_3960 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_30_load_reg_3965 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_31_load_reg_3970 : STD_LOGIC_VECTOR (1 downto 0);
    signal codebook_V_32_load_reg_3975 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_fu_1783_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1789_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_reg_4182 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_1_reg_4187 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1807_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_2_reg_4192 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_3_reg_4197 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1825_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_4_reg_4202 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1834_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_5_reg_4207 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_6_reg_4212 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_7_reg_4217 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_8_reg_4222 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1870_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_9_reg_4227 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_10_reg_4232 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1888_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_11_reg_4237 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_12_reg_4242 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_13_reg_4247 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_14_reg_4252 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1924_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_15_reg_4257 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_16_reg_4262 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_17_reg_4267 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_18_reg_4272 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_19_reg_4277 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1969_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_20_reg_4282 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1978_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_21_reg_4287 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_22_reg_4292 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_23_reg_4297 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_24_reg_4302 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2014_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_25_reg_4307 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2023_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_26_reg_4312 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2032_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_27_reg_4317 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_28_reg_4322 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_29_reg_4327 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2059_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_30_reg_4332 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_31_reg_4337 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2077_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1171_32_reg_4342 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln47_fu_1667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal k_fu_302 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln47_fu_1661_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal acc_V_0_3_fu_306 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_1_3_fu_310 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_2_3_fu_314 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_3_3_fu_318 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_4_3_fu_322 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_5_3_fu_326 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_6_3_fu_330 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_7_3_fu_334 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_8_3_fu_338 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_9_3_fu_342 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_10_3_fu_346 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_11_3_fu_350 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_12_3_fu_354 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_13_3_fu_358 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_14_3_fu_362 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_15_3_fu_366 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_16_3_fu_370 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_17_3_fu_374 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_18_3_fu_378 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_19_3_fu_382 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_20_3_fu_386 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_21_3_fu_390 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_22_3_fu_394 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_23_3_fu_398 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_24_3_fu_402 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_25_3_fu_406 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_26_3_fu_410 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_27_3_fu_414 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_28_3_fu_418 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_29_3_fu_422 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_30_3_fu_426 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_31_3_fu_430 : STD_LOGIC_VECTOR (29 downto 0);
    signal acc_V_32_3_fu_434 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_1_fu_1710_p32 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1789_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1798_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1807_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1816_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1825_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1834_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1843_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1852_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1861_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1870_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1879_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1888_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1897_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1906_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1915_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1924_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1933_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1942_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1951_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1960_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1969_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1978_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1987_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1996_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2005_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2014_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2023_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2032_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2041_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2050_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2059_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2068_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_2077_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln_fu_2182_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_fu_2190_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_fu_2193_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_1_fu_2209_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_1_fu_2217_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_1_fu_2220_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_2_fu_2236_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_2_fu_2244_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_2_fu_2247_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_3_fu_2263_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_3_fu_2271_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_3_fu_2274_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_4_fu_2290_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_4_fu_2298_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_4_fu_2301_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_5_fu_2317_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_5_fu_2325_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_5_fu_2328_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_6_fu_2344_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_6_fu_2352_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_6_fu_2355_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_7_fu_2371_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_7_fu_2379_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_7_fu_2382_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_8_fu_2398_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_8_fu_2406_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_8_fu_2409_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_9_fu_2425_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_9_fu_2433_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_9_fu_2436_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_s_fu_2452_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_10_fu_2460_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_10_fu_2463_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_10_fu_2479_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_11_fu_2487_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_11_fu_2490_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_11_fu_2506_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_12_fu_2514_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_12_fu_2517_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_12_fu_2533_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_13_fu_2541_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_13_fu_2544_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_13_fu_2560_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_14_fu_2568_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_14_fu_2571_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_14_fu_2587_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_15_fu_2595_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_15_fu_2598_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_15_fu_2614_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_16_fu_2622_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_16_fu_2625_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_16_fu_2641_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_17_fu_2649_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_17_fu_2652_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_17_fu_2668_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_18_fu_2676_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_18_fu_2679_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_18_fu_2695_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_19_fu_2703_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_19_fu_2706_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_19_fu_2722_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_20_fu_2730_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_20_fu_2733_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_20_fu_2749_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_21_fu_2757_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_21_fu_2760_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_21_fu_2776_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_22_fu_2784_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_22_fu_2787_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_22_fu_2803_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_23_fu_2811_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_23_fu_2814_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_23_fu_2830_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_24_fu_2838_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_24_fu_2841_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_24_fu_2857_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_25_fu_2865_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_25_fu_2868_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_25_fu_2884_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_26_fu_2892_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_26_fu_2895_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_26_fu_2911_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_27_fu_2919_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_27_fu_2922_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_27_fu_2938_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_28_fu_2946_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_28_fu_2949_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_28_fu_2965_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_29_fu_2973_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_29_fu_2976_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_29_fu_2992_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_30_fu_3000_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_30_fu_3003_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_30_fu_3019_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_31_fu_3027_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_31_fu_3030_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal shl_ln737_31_fu_3046_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1245_32_fu_3054_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal add_ln1245_32_fu_3057_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component correlator_mux_315_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        din3 : IN STD_LOGIC_VECTOR (29 downto 0);
        din4 : IN STD_LOGIC_VECTOR (29 downto 0);
        din5 : IN STD_LOGIC_VECTOR (29 downto 0);
        din6 : IN STD_LOGIC_VECTOR (29 downto 0);
        din7 : IN STD_LOGIC_VECTOR (29 downto 0);
        din8 : IN STD_LOGIC_VECTOR (29 downto 0);
        din9 : IN STD_LOGIC_VECTOR (29 downto 0);
        din10 : IN STD_LOGIC_VECTOR (29 downto 0);
        din11 : IN STD_LOGIC_VECTOR (29 downto 0);
        din12 : IN STD_LOGIC_VECTOR (29 downto 0);
        din13 : IN STD_LOGIC_VECTOR (29 downto 0);
        din14 : IN STD_LOGIC_VECTOR (29 downto 0);
        din15 : IN STD_LOGIC_VECTOR (29 downto 0);
        din16 : IN STD_LOGIC_VECTOR (29 downto 0);
        din17 : IN STD_LOGIC_VECTOR (29 downto 0);
        din18 : IN STD_LOGIC_VECTOR (29 downto 0);
        din19 : IN STD_LOGIC_VECTOR (29 downto 0);
        din20 : IN STD_LOGIC_VECTOR (29 downto 0);
        din21 : IN STD_LOGIC_VECTOR (29 downto 0);
        din22 : IN STD_LOGIC_VECTOR (29 downto 0);
        din23 : IN STD_LOGIC_VECTOR (29 downto 0);
        din24 : IN STD_LOGIC_VECTOR (29 downto 0);
        din25 : IN STD_LOGIC_VECTOR (29 downto 0);
        din26 : IN STD_LOGIC_VECTOR (29 downto 0);
        din27 : IN STD_LOGIC_VECTOR (29 downto 0);
        din28 : IN STD_LOGIC_VECTOR (29 downto 0);
        din29 : IN STD_LOGIC_VECTOR (29 downto 0);
        din30 : IN STD_LOGIC_VECTOR (29 downto 0);
        din31 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component correlator_mul_30s_2s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_9 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_10 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_11 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_12 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_13 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_14 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_15 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_16 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_17 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_18 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_19 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_20 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_21 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_22 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_23 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_24 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_25 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_26 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_27 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_28 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_29 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_30 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_31 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_correlator_Pipeline_Outer_Loop_codebook_V_32 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component correlator_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    codebook_V_0_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_0
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_0_address0,
        ce0 => codebook_V_0_ce0,
        q0 => codebook_V_0_q0);

    codebook_V_1_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_1
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_1_address0,
        ce0 => codebook_V_1_ce0,
        q0 => codebook_V_1_q0);

    codebook_V_2_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_2
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_2_address0,
        ce0 => codebook_V_2_ce0,
        q0 => codebook_V_2_q0);

    codebook_V_3_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_3
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_3_address0,
        ce0 => codebook_V_3_ce0,
        q0 => codebook_V_3_q0);

    codebook_V_4_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_4
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_4_address0,
        ce0 => codebook_V_4_ce0,
        q0 => codebook_V_4_q0);

    codebook_V_5_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_5
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_5_address0,
        ce0 => codebook_V_5_ce0,
        q0 => codebook_V_5_q0);

    codebook_V_6_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_6
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_6_address0,
        ce0 => codebook_V_6_ce0,
        q0 => codebook_V_6_q0);

    codebook_V_7_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_7
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_7_address0,
        ce0 => codebook_V_7_ce0,
        q0 => codebook_V_7_q0);

    codebook_V_8_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_8
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_8_address0,
        ce0 => codebook_V_8_ce0,
        q0 => codebook_V_8_q0);

    codebook_V_9_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_9
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_9_address0,
        ce0 => codebook_V_9_ce0,
        q0 => codebook_V_9_q0);

    codebook_V_10_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_10
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_10_address0,
        ce0 => codebook_V_10_ce0,
        q0 => codebook_V_10_q0);

    codebook_V_11_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_11
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_11_address0,
        ce0 => codebook_V_11_ce0,
        q0 => codebook_V_11_q0);

    codebook_V_12_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_12
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_12_address0,
        ce0 => codebook_V_12_ce0,
        q0 => codebook_V_12_q0);

    codebook_V_13_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_13
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_13_address0,
        ce0 => codebook_V_13_ce0,
        q0 => codebook_V_13_q0);

    codebook_V_14_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_14
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_14_address0,
        ce0 => codebook_V_14_ce0,
        q0 => codebook_V_14_q0);

    codebook_V_15_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_15
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_15_address0,
        ce0 => codebook_V_15_ce0,
        q0 => codebook_V_15_q0);

    codebook_V_16_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_16
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_16_address0,
        ce0 => codebook_V_16_ce0,
        q0 => codebook_V_16_q0);

    codebook_V_17_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_17
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_17_address0,
        ce0 => codebook_V_17_ce0,
        q0 => codebook_V_17_q0);

    codebook_V_18_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_18
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_18_address0,
        ce0 => codebook_V_18_ce0,
        q0 => codebook_V_18_q0);

    codebook_V_19_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_19
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_19_address0,
        ce0 => codebook_V_19_ce0,
        q0 => codebook_V_19_q0);

    codebook_V_20_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_20
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_20_address0,
        ce0 => codebook_V_20_ce0,
        q0 => codebook_V_20_q0);

    codebook_V_21_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_21
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_21_address0,
        ce0 => codebook_V_21_ce0,
        q0 => codebook_V_21_q0);

    codebook_V_22_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_22
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_22_address0,
        ce0 => codebook_V_22_ce0,
        q0 => codebook_V_22_q0);

    codebook_V_23_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_23
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_23_address0,
        ce0 => codebook_V_23_ce0,
        q0 => codebook_V_23_q0);

    codebook_V_24_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_24
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_24_address0,
        ce0 => codebook_V_24_ce0,
        q0 => codebook_V_24_q0);

    codebook_V_25_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_25
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_25_address0,
        ce0 => codebook_V_25_ce0,
        q0 => codebook_V_25_q0);

    codebook_V_26_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_26
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_26_address0,
        ce0 => codebook_V_26_ce0,
        q0 => codebook_V_26_q0);

    codebook_V_27_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_27
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_27_address0,
        ce0 => codebook_V_27_ce0,
        q0 => codebook_V_27_q0);

    codebook_V_28_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_28
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_28_address0,
        ce0 => codebook_V_28_ce0,
        q0 => codebook_V_28_q0);

    codebook_V_29_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_29
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_29_address0,
        ce0 => codebook_V_29_ce0,
        q0 => codebook_V_29_q0);

    codebook_V_30_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_30
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_30_address0,
        ce0 => codebook_V_30_ce0,
        q0 => codebook_V_30_q0);

    codebook_V_31_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_31
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_31_address0,
        ce0 => codebook_V_31_ce0,
        q0 => codebook_V_31_q0);

    codebook_V_32_U : component correlator_correlator_Pipeline_Outer_Loop_codebook_V_32
    generic map (
        DataWidth => 2,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => codebook_V_32_address0,
        ce0 => codebook_V_32_ce0,
        q0 => codebook_V_32_q0);

    mux_315_30_1_1_U101 : component correlator_mux_315_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 30,
        din2_WIDTH => 30,
        din3_WIDTH => 30,
        din4_WIDTH => 30,
        din5_WIDTH => 30,
        din6_WIDTH => 30,
        din7_WIDTH => 30,
        din8_WIDTH => 30,
        din9_WIDTH => 30,
        din10_WIDTH => 30,
        din11_WIDTH => 30,
        din12_WIDTH => 30,
        din13_WIDTH => 30,
        din14_WIDTH => 30,
        din15_WIDTH => 30,
        din16_WIDTH => 30,
        din17_WIDTH => 30,
        din18_WIDTH => 30,
        din19_WIDTH => 30,
        din20_WIDTH => 30,
        din21_WIDTH => 30,
        din22_WIDTH => 30,
        din23_WIDTH => 30,
        din24_WIDTH => 30,
        din25_WIDTH => 30,
        din26_WIDTH => 30,
        din27_WIDTH => 30,
        din28_WIDTH => 30,
        din29_WIDTH => 30,
        din30_WIDTH => 30,
        din31_WIDTH => 5,
        dout_WIDTH => 30)
    port map (
        din0 => select_ln580,
        din1 => temp_input_V_1_0,
        din2 => temp_input_V_2_0,
        din3 => temp_input_V_3_0,
        din4 => temp_input_V_4_0,
        din5 => temp_input_V_5_0,
        din6 => temp_input_V_6_0,
        din7 => temp_input_V_7_0,
        din8 => temp_input_V_8_0,
        din9 => temp_input_V_9_0,
        din10 => temp_input_V_10_0,
        din11 => temp_input_V_11_0,
        din12 => temp_input_V_12_0,
        din13 => temp_input_V_13_0,
        din14 => temp_input_V_14_0,
        din15 => temp_input_V_15_0,
        din16 => temp_input_V_16_0,
        din17 => temp_input_V_17_0,
        din18 => temp_input_V_18_0,
        din19 => temp_input_V_19_0,
        din20 => temp_input_V_20_0,
        din21 => temp_input_V_21_0,
        din22 => temp_input_V_22_0,
        din23 => temp_input_V_23_0,
        din24 => temp_input_V_24_0,
        din25 => temp_input_V_25_0,
        din26 => temp_input_V_26_0,
        din27 => temp_input_V_27_0,
        din28 => temp_input_V_28_0,
        din29 => temp_input_V_29_0,
        din30 => temp_input_V_30_0,
        din31 => r_V_1_fu_1710_p32,
        dout => r_V_1_fu_1710_p33);

    mul_30s_2s_32_2_1_U102 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1789_p0,
        din1 => codebook_V_0_load_reg_3815,
        ce => ap_const_logic_1,
        dout => grp_fu_1789_p2);

    mul_30s_2s_32_2_1_U103 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1798_p0,
        din1 => codebook_V_1_load_reg_3820,
        ce => ap_const_logic_1,
        dout => grp_fu_1798_p2);

    mul_30s_2s_32_2_1_U104 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1807_p0,
        din1 => codebook_V_2_load_reg_3825,
        ce => ap_const_logic_1,
        dout => grp_fu_1807_p2);

    mul_30s_2s_32_2_1_U105 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1816_p0,
        din1 => codebook_V_3_load_reg_3830,
        ce => ap_const_logic_1,
        dout => grp_fu_1816_p2);

    mul_30s_2s_32_2_1_U106 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1825_p0,
        din1 => codebook_V_4_load_reg_3835,
        ce => ap_const_logic_1,
        dout => grp_fu_1825_p2);

    mul_30s_2s_32_2_1_U107 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1834_p0,
        din1 => codebook_V_5_load_reg_3840,
        ce => ap_const_logic_1,
        dout => grp_fu_1834_p2);

    mul_30s_2s_32_2_1_U108 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1843_p0,
        din1 => codebook_V_6_load_reg_3845,
        ce => ap_const_logic_1,
        dout => grp_fu_1843_p2);

    mul_30s_2s_32_2_1_U109 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1852_p0,
        din1 => codebook_V_7_load_reg_3850,
        ce => ap_const_logic_1,
        dout => grp_fu_1852_p2);

    mul_30s_2s_32_2_1_U110 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1861_p0,
        din1 => codebook_V_8_load_reg_3855,
        ce => ap_const_logic_1,
        dout => grp_fu_1861_p2);

    mul_30s_2s_32_2_1_U111 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1870_p0,
        din1 => codebook_V_9_load_reg_3860,
        ce => ap_const_logic_1,
        dout => grp_fu_1870_p2);

    mul_30s_2s_32_2_1_U112 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1879_p0,
        din1 => codebook_V_10_load_reg_3865,
        ce => ap_const_logic_1,
        dout => grp_fu_1879_p2);

    mul_30s_2s_32_2_1_U113 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1888_p0,
        din1 => codebook_V_11_load_reg_3870,
        ce => ap_const_logic_1,
        dout => grp_fu_1888_p2);

    mul_30s_2s_32_2_1_U114 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1897_p0,
        din1 => codebook_V_12_load_reg_3875,
        ce => ap_const_logic_1,
        dout => grp_fu_1897_p2);

    mul_30s_2s_32_2_1_U115 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1906_p0,
        din1 => codebook_V_13_load_reg_3880,
        ce => ap_const_logic_1,
        dout => grp_fu_1906_p2);

    mul_30s_2s_32_2_1_U116 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1915_p0,
        din1 => codebook_V_14_load_reg_3885,
        ce => ap_const_logic_1,
        dout => grp_fu_1915_p2);

    mul_30s_2s_32_2_1_U117 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1924_p0,
        din1 => codebook_V_15_load_reg_3890,
        ce => ap_const_logic_1,
        dout => grp_fu_1924_p2);

    mul_30s_2s_32_2_1_U118 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1933_p0,
        din1 => codebook_V_16_load_reg_3895,
        ce => ap_const_logic_1,
        dout => grp_fu_1933_p2);

    mul_30s_2s_32_2_1_U119 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1942_p0,
        din1 => codebook_V_17_load_reg_3900,
        ce => ap_const_logic_1,
        dout => grp_fu_1942_p2);

    mul_30s_2s_32_2_1_U120 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1951_p0,
        din1 => codebook_V_18_load_reg_3905,
        ce => ap_const_logic_1,
        dout => grp_fu_1951_p2);

    mul_30s_2s_32_2_1_U121 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1960_p0,
        din1 => codebook_V_19_load_reg_3910,
        ce => ap_const_logic_1,
        dout => grp_fu_1960_p2);

    mul_30s_2s_32_2_1_U122 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1969_p0,
        din1 => codebook_V_20_load_reg_3915,
        ce => ap_const_logic_1,
        dout => grp_fu_1969_p2);

    mul_30s_2s_32_2_1_U123 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1978_p0,
        din1 => codebook_V_21_load_reg_3920,
        ce => ap_const_logic_1,
        dout => grp_fu_1978_p2);

    mul_30s_2s_32_2_1_U124 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1987_p0,
        din1 => codebook_V_22_load_reg_3925,
        ce => ap_const_logic_1,
        dout => grp_fu_1987_p2);

    mul_30s_2s_32_2_1_U125 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1996_p0,
        din1 => codebook_V_23_load_reg_3930,
        ce => ap_const_logic_1,
        dout => grp_fu_1996_p2);

    mul_30s_2s_32_2_1_U126 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2005_p0,
        din1 => codebook_V_24_load_reg_3935,
        ce => ap_const_logic_1,
        dout => grp_fu_2005_p2);

    mul_30s_2s_32_2_1_U127 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2014_p0,
        din1 => codebook_V_25_load_reg_3940,
        ce => ap_const_logic_1,
        dout => grp_fu_2014_p2);

    mul_30s_2s_32_2_1_U128 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2023_p0,
        din1 => codebook_V_26_load_reg_3945,
        ce => ap_const_logic_1,
        dout => grp_fu_2023_p2);

    mul_30s_2s_32_2_1_U129 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2032_p0,
        din1 => codebook_V_27_load_reg_3950,
        ce => ap_const_logic_1,
        dout => grp_fu_2032_p2);

    mul_30s_2s_32_2_1_U130 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2041_p0,
        din1 => codebook_V_28_load_reg_3955,
        ce => ap_const_logic_1,
        dout => grp_fu_2041_p2);

    mul_30s_2s_32_2_1_U131 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2050_p0,
        din1 => codebook_V_29_load_reg_3960,
        ce => ap_const_logic_1,
        dout => grp_fu_2050_p2);

    mul_30s_2s_32_2_1_U132 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2059_p0,
        din1 => codebook_V_30_load_reg_3965,
        ce => ap_const_logic_1,
        dout => grp_fu_2059_p2);

    mul_30s_2s_32_2_1_U133 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2068_p0,
        din1 => codebook_V_31_load_reg_3970,
        ce => ap_const_logic_1,
        dout => grp_fu_2068_p2);

    mul_30s_2s_32_2_1_U134 : component correlator_mul_30s_2s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 30,
        din1_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2077_p0,
        din1 => codebook_V_32_load_reg_3975,
        ce => ap_const_logic_1,
        dout => grp_fu_2077_p2);

    flow_control_loop_pipe_sequential_init_U : component correlator_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    acc_V_0_3_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_0_3_fu_306 <= acc_V_0_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_0_3_fu_306 <= add_ln1245_fu_2193_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_10_3_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_10_3_fu_346 <= acc_V_10_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_10_3_fu_346 <= add_ln1245_10_fu_2463_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_11_3_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_11_3_fu_350 <= acc_V_11_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_11_3_fu_350 <= add_ln1245_11_fu_2490_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_12_3_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_12_3_fu_354 <= acc_V_12_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_12_3_fu_354 <= add_ln1245_12_fu_2517_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_13_3_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_13_3_fu_358 <= acc_V_13_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_13_3_fu_358 <= add_ln1245_13_fu_2544_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_14_3_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_14_3_fu_362 <= acc_V_14_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_14_3_fu_362 <= add_ln1245_14_fu_2571_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_15_3_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_15_3_fu_366 <= acc_V_15_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_15_3_fu_366 <= add_ln1245_15_fu_2598_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_16_3_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_16_3_fu_370 <= acc_V_16_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_16_3_fu_370 <= add_ln1245_16_fu_2625_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_17_3_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_17_3_fu_374 <= acc_V_17_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_17_3_fu_374 <= add_ln1245_17_fu_2652_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_18_3_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_18_3_fu_378 <= acc_V_18_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_18_3_fu_378 <= add_ln1245_18_fu_2679_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_19_3_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_19_3_fu_382 <= acc_V_19_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_19_3_fu_382 <= add_ln1245_19_fu_2706_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_1_3_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_1_3_fu_310 <= acc_V_1_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_1_3_fu_310 <= add_ln1245_1_fu_2220_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_20_3_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_20_3_fu_386 <= acc_V_20_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_20_3_fu_386 <= add_ln1245_20_fu_2733_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_21_3_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_21_3_fu_390 <= acc_V_21_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_21_3_fu_390 <= add_ln1245_21_fu_2760_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_22_3_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_22_3_fu_394 <= acc_V_22_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_22_3_fu_394 <= add_ln1245_22_fu_2787_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_23_3_fu_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_23_3_fu_398 <= acc_V_23_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_23_3_fu_398 <= add_ln1245_23_fu_2814_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_24_3_fu_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_24_3_fu_402 <= acc_V_24_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_24_3_fu_402 <= add_ln1245_24_fu_2841_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_25_3_fu_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_25_3_fu_406 <= acc_V_25_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_25_3_fu_406 <= add_ln1245_25_fu_2868_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_26_3_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_26_3_fu_410 <= acc_V_26_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_26_3_fu_410 <= add_ln1245_26_fu_2895_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_27_3_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_27_3_fu_414 <= acc_V_27_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_27_3_fu_414 <= add_ln1245_27_fu_2922_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_28_3_fu_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_28_3_fu_418 <= acc_V_28_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_28_3_fu_418 <= add_ln1245_28_fu_2949_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_29_3_fu_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_29_3_fu_422 <= acc_V_29_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_29_3_fu_422 <= add_ln1245_29_fu_2976_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_2_3_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_2_3_fu_314 <= acc_V_2_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_2_3_fu_314 <= add_ln1245_2_fu_2247_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_30_3_fu_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_30_3_fu_426 <= acc_V_30_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_30_3_fu_426 <= add_ln1245_30_fu_3003_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_31_3_fu_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_31_3_fu_430 <= acc_V_31_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_31_3_fu_430 <= add_ln1245_31_fu_3030_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_32_3_fu_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_32_3_fu_434 <= acc_V_32_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_32_3_fu_434 <= add_ln1245_32_fu_3057_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_3_3_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_3_3_fu_318 <= acc_V_3_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_3_3_fu_318 <= add_ln1245_3_fu_2274_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_4_3_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_4_3_fu_322 <= acc_V_4_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_4_3_fu_322 <= add_ln1245_4_fu_2301_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_5_3_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_5_3_fu_326 <= acc_V_5_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_5_3_fu_326 <= add_ln1245_5_fu_2328_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_6_3_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_6_3_fu_330 <= acc_V_6_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_6_3_fu_330 <= add_ln1245_6_fu_2355_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_7_3_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_7_3_fu_334 <= acc_V_7_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_7_3_fu_334 <= add_ln1245_7_fu_2382_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_8_3_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_8_3_fu_338 <= acc_V_8_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_8_3_fu_338 <= add_ln1245_8_fu_2409_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    acc_V_9_3_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    acc_V_9_3_fu_342 <= acc_V_9_1_reload;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    acc_V_9_3_fu_342 <= add_ln1245_9_fu_2436_p2(34 downto 5);
                end if;
            end if; 
        end if;
    end process;

    k_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln47_fu_1655_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    k_fu_302 <= add_ln47_fu_1661_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_302 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                codebook_V_0_load_reg_3815 <= codebook_V_0_q0;
                codebook_V_10_load_reg_3865 <= codebook_V_10_q0;
                codebook_V_11_load_reg_3870 <= codebook_V_11_q0;
                codebook_V_12_load_reg_3875 <= codebook_V_12_q0;
                codebook_V_13_load_reg_3880 <= codebook_V_13_q0;
                codebook_V_14_load_reg_3885 <= codebook_V_14_q0;
                codebook_V_15_load_reg_3890 <= codebook_V_15_q0;
                codebook_V_16_load_reg_3895 <= codebook_V_16_q0;
                codebook_V_17_load_reg_3900 <= codebook_V_17_q0;
                codebook_V_18_load_reg_3905 <= codebook_V_18_q0;
                codebook_V_19_load_reg_3910 <= codebook_V_19_q0;
                codebook_V_1_load_reg_3820 <= codebook_V_1_q0;
                codebook_V_20_load_reg_3915 <= codebook_V_20_q0;
                codebook_V_21_load_reg_3920 <= codebook_V_21_q0;
                codebook_V_22_load_reg_3925 <= codebook_V_22_q0;
                codebook_V_23_load_reg_3930 <= codebook_V_23_q0;
                codebook_V_24_load_reg_3935 <= codebook_V_24_q0;
                codebook_V_25_load_reg_3940 <= codebook_V_25_q0;
                codebook_V_26_load_reg_3945 <= codebook_V_26_q0;
                codebook_V_27_load_reg_3950 <= codebook_V_27_q0;
                codebook_V_28_load_reg_3955 <= codebook_V_28_q0;
                codebook_V_29_load_reg_3960 <= codebook_V_29_q0;
                codebook_V_2_load_reg_3825 <= codebook_V_2_q0;
                codebook_V_30_load_reg_3965 <= codebook_V_30_q0;
                codebook_V_31_load_reg_3970 <= codebook_V_31_q0;
                codebook_V_32_load_reg_3975 <= codebook_V_32_q0;
                codebook_V_3_load_reg_3830 <= codebook_V_3_q0;
                codebook_V_4_load_reg_3835 <= codebook_V_4_q0;
                codebook_V_5_load_reg_3840 <= codebook_V_5_q0;
                codebook_V_6_load_reg_3845 <= codebook_V_6_q0;
                codebook_V_7_load_reg_3850 <= codebook_V_7_q0;
                codebook_V_8_load_reg_3855 <= codebook_V_8_q0;
                codebook_V_9_load_reg_3860 <= codebook_V_9_q0;
                icmp_ln47_reg_3641 <= icmp_ln47_fu_1655_p2;
                icmp_ln47_reg_3641_pp0_iter1_reg <= icmp_ln47_reg_3641;
                r_V_1_reg_3645_pp0_iter1_reg <= r_V_1_reg_3645;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln47_reg_3641_pp0_iter2_reg <= icmp_ln47_reg_3641_pp0_iter1_reg;
                mul_ln1171_10_reg_4232 <= grp_fu_1879_p2;
                mul_ln1171_11_reg_4237 <= grp_fu_1888_p2;
                mul_ln1171_12_reg_4242 <= grp_fu_1897_p2;
                mul_ln1171_13_reg_4247 <= grp_fu_1906_p2;
                mul_ln1171_14_reg_4252 <= grp_fu_1915_p2;
                mul_ln1171_15_reg_4257 <= grp_fu_1924_p2;
                mul_ln1171_16_reg_4262 <= grp_fu_1933_p2;
                mul_ln1171_17_reg_4267 <= grp_fu_1942_p2;
                mul_ln1171_18_reg_4272 <= grp_fu_1951_p2;
                mul_ln1171_19_reg_4277 <= grp_fu_1960_p2;
                mul_ln1171_1_reg_4187 <= grp_fu_1798_p2;
                mul_ln1171_20_reg_4282 <= grp_fu_1969_p2;
                mul_ln1171_21_reg_4287 <= grp_fu_1978_p2;
                mul_ln1171_22_reg_4292 <= grp_fu_1987_p2;
                mul_ln1171_23_reg_4297 <= grp_fu_1996_p2;
                mul_ln1171_24_reg_4302 <= grp_fu_2005_p2;
                mul_ln1171_25_reg_4307 <= grp_fu_2014_p2;
                mul_ln1171_26_reg_4312 <= grp_fu_2023_p2;
                mul_ln1171_27_reg_4317 <= grp_fu_2032_p2;
                mul_ln1171_28_reg_4322 <= grp_fu_2041_p2;
                mul_ln1171_29_reg_4327 <= grp_fu_2050_p2;
                mul_ln1171_2_reg_4192 <= grp_fu_1807_p2;
                mul_ln1171_30_reg_4332 <= grp_fu_2059_p2;
                mul_ln1171_31_reg_4337 <= grp_fu_2068_p2;
                mul_ln1171_32_reg_4342 <= grp_fu_2077_p2;
                mul_ln1171_3_reg_4197 <= grp_fu_1816_p2;
                mul_ln1171_4_reg_4202 <= grp_fu_1825_p2;
                mul_ln1171_5_reg_4207 <= grp_fu_1834_p2;
                mul_ln1171_6_reg_4212 <= grp_fu_1843_p2;
                mul_ln1171_7_reg_4217 <= grp_fu_1852_p2;
                mul_ln1171_8_reg_4222 <= grp_fu_1861_p2;
                mul_ln1171_9_reg_4227 <= grp_fu_1870_p2;
                mul_ln1171_reg_4182 <= grp_fu_1789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_1655_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_V_1_reg_3645 <= r_V_1_fu_1710_p33;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc_V_0_3_out <= acc_V_0_3_fu_306;

    acc_V_0_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_0_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_0_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_10_3_out <= acc_V_10_3_fu_346;

    acc_V_10_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_10_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_10_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_11_3_out <= acc_V_11_3_fu_350;

    acc_V_11_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_11_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_11_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_12_3_out <= acc_V_12_3_fu_354;

    acc_V_12_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_12_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_12_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_13_3_out <= acc_V_13_3_fu_358;

    acc_V_13_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_13_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_13_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_14_3_out <= acc_V_14_3_fu_362;

    acc_V_14_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_14_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_14_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_15_3_out <= acc_V_15_3_fu_366;

    acc_V_15_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_15_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_15_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_16_3_out <= acc_V_16_3_fu_370;

    acc_V_16_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_16_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_16_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_17_3_out <= acc_V_17_3_fu_374;

    acc_V_17_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_17_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_17_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_18_3_out <= acc_V_18_3_fu_378;

    acc_V_18_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_18_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_18_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_19_3_out <= acc_V_19_3_fu_382;

    acc_V_19_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_19_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_19_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_1_3_out <= acc_V_1_3_fu_310;

    acc_V_1_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_1_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_1_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_20_3_out <= acc_V_20_3_fu_386;

    acc_V_20_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_20_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_20_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_21_3_out <= acc_V_21_3_fu_390;

    acc_V_21_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_21_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_21_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_22_3_out <= acc_V_22_3_fu_394;

    acc_V_22_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_22_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_22_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_23_3_out <= acc_V_23_3_fu_398;

    acc_V_23_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_23_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_23_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_24_3_out <= acc_V_24_3_fu_402;

    acc_V_24_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_24_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_24_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_25_3_out <= acc_V_25_3_fu_406;

    acc_V_25_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_25_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_25_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_26_3_out <= acc_V_26_3_fu_410;

    acc_V_26_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_26_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_26_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_27_3_out <= acc_V_27_3_fu_414;

    acc_V_27_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_27_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_27_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_28_3_out <= acc_V_28_3_fu_418;

    acc_V_28_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_28_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_28_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_29_3_out <= acc_V_29_3_fu_422;

    acc_V_29_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_29_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_29_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_2_3_out <= acc_V_2_3_fu_314;

    acc_V_2_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_2_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_2_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_30_3_out <= acc_V_30_3_fu_426;

    acc_V_30_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_30_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_30_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_31_3_out <= acc_V_31_3_fu_430;

    acc_V_31_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_31_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_31_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_32_3_out <= acc_V_32_3_fu_434;

    acc_V_32_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_32_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_32_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_3_3_out <= acc_V_3_3_fu_318;

    acc_V_3_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_3_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_3_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_4_3_out <= acc_V_4_3_fu_322;

    acc_V_4_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_4_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_4_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_5_3_out <= acc_V_5_3_fu_326;

    acc_V_5_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_5_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_5_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_6_3_out <= acc_V_6_3_fu_330;

    acc_V_6_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_6_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_6_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_7_3_out <= acc_V_7_3_fu_334;

    acc_V_7_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_7_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_7_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_8_3_out <= acc_V_8_3_fu_338;

    acc_V_8_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_8_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_8_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    acc_V_9_3_out <= acc_V_9_3_fu_342;

    acc_V_9_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln47_reg_3641_pp0_iter2_reg)
    begin
        if (((icmp_ln47_reg_3641_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            acc_V_9_3_out_ap_vld <= ap_const_logic_1;
        else 
            acc_V_9_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1245_10_fu_2463_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_2452_p3) + unsigned(sext_ln1245_10_fu_2460_p1));
    add_ln1245_11_fu_2490_p2 <= std_logic_vector(unsigned(shl_ln737_10_fu_2479_p3) + unsigned(sext_ln1245_11_fu_2487_p1));
    add_ln1245_12_fu_2517_p2 <= std_logic_vector(unsigned(shl_ln737_11_fu_2506_p3) + unsigned(sext_ln1245_12_fu_2514_p1));
    add_ln1245_13_fu_2544_p2 <= std_logic_vector(unsigned(shl_ln737_12_fu_2533_p3) + unsigned(sext_ln1245_13_fu_2541_p1));
    add_ln1245_14_fu_2571_p2 <= std_logic_vector(unsigned(shl_ln737_13_fu_2560_p3) + unsigned(sext_ln1245_14_fu_2568_p1));
    add_ln1245_15_fu_2598_p2 <= std_logic_vector(unsigned(shl_ln737_14_fu_2587_p3) + unsigned(sext_ln1245_15_fu_2595_p1));
    add_ln1245_16_fu_2625_p2 <= std_logic_vector(unsigned(shl_ln737_15_fu_2614_p3) + unsigned(sext_ln1245_16_fu_2622_p1));
    add_ln1245_17_fu_2652_p2 <= std_logic_vector(unsigned(shl_ln737_16_fu_2641_p3) + unsigned(sext_ln1245_17_fu_2649_p1));
    add_ln1245_18_fu_2679_p2 <= std_logic_vector(unsigned(shl_ln737_17_fu_2668_p3) + unsigned(sext_ln1245_18_fu_2676_p1));
    add_ln1245_19_fu_2706_p2 <= std_logic_vector(unsigned(shl_ln737_18_fu_2695_p3) + unsigned(sext_ln1245_19_fu_2703_p1));
    add_ln1245_1_fu_2220_p2 <= std_logic_vector(unsigned(shl_ln737_1_fu_2209_p3) + unsigned(sext_ln1245_1_fu_2217_p1));
    add_ln1245_20_fu_2733_p2 <= std_logic_vector(unsigned(shl_ln737_19_fu_2722_p3) + unsigned(sext_ln1245_20_fu_2730_p1));
    add_ln1245_21_fu_2760_p2 <= std_logic_vector(unsigned(shl_ln737_20_fu_2749_p3) + unsigned(sext_ln1245_21_fu_2757_p1));
    add_ln1245_22_fu_2787_p2 <= std_logic_vector(unsigned(shl_ln737_21_fu_2776_p3) + unsigned(sext_ln1245_22_fu_2784_p1));
    add_ln1245_23_fu_2814_p2 <= std_logic_vector(unsigned(shl_ln737_22_fu_2803_p3) + unsigned(sext_ln1245_23_fu_2811_p1));
    add_ln1245_24_fu_2841_p2 <= std_logic_vector(unsigned(shl_ln737_23_fu_2830_p3) + unsigned(sext_ln1245_24_fu_2838_p1));
    add_ln1245_25_fu_2868_p2 <= std_logic_vector(unsigned(shl_ln737_24_fu_2857_p3) + unsigned(sext_ln1245_25_fu_2865_p1));
    add_ln1245_26_fu_2895_p2 <= std_logic_vector(unsigned(shl_ln737_25_fu_2884_p3) + unsigned(sext_ln1245_26_fu_2892_p1));
    add_ln1245_27_fu_2922_p2 <= std_logic_vector(unsigned(shl_ln737_26_fu_2911_p3) + unsigned(sext_ln1245_27_fu_2919_p1));
    add_ln1245_28_fu_2949_p2 <= std_logic_vector(unsigned(shl_ln737_27_fu_2938_p3) + unsigned(sext_ln1245_28_fu_2946_p1));
    add_ln1245_29_fu_2976_p2 <= std_logic_vector(unsigned(shl_ln737_28_fu_2965_p3) + unsigned(sext_ln1245_29_fu_2973_p1));
    add_ln1245_2_fu_2247_p2 <= std_logic_vector(unsigned(shl_ln737_2_fu_2236_p3) + unsigned(sext_ln1245_2_fu_2244_p1));
    add_ln1245_30_fu_3003_p2 <= std_logic_vector(unsigned(shl_ln737_29_fu_2992_p3) + unsigned(sext_ln1245_30_fu_3000_p1));
    add_ln1245_31_fu_3030_p2 <= std_logic_vector(unsigned(shl_ln737_30_fu_3019_p3) + unsigned(sext_ln1245_31_fu_3027_p1));
    add_ln1245_32_fu_3057_p2 <= std_logic_vector(unsigned(shl_ln737_31_fu_3046_p3) + unsigned(sext_ln1245_32_fu_3054_p1));
    add_ln1245_3_fu_2274_p2 <= std_logic_vector(unsigned(shl_ln737_3_fu_2263_p3) + unsigned(sext_ln1245_3_fu_2271_p1));
    add_ln1245_4_fu_2301_p2 <= std_logic_vector(unsigned(shl_ln737_4_fu_2290_p3) + unsigned(sext_ln1245_4_fu_2298_p1));
    add_ln1245_5_fu_2328_p2 <= std_logic_vector(unsigned(shl_ln737_5_fu_2317_p3) + unsigned(sext_ln1245_5_fu_2325_p1));
    add_ln1245_6_fu_2355_p2 <= std_logic_vector(unsigned(shl_ln737_6_fu_2344_p3) + unsigned(sext_ln1245_6_fu_2352_p1));
    add_ln1245_7_fu_2382_p2 <= std_logic_vector(unsigned(shl_ln737_7_fu_2371_p3) + unsigned(sext_ln1245_7_fu_2379_p1));
    add_ln1245_8_fu_2409_p2 <= std_logic_vector(unsigned(shl_ln737_8_fu_2398_p3) + unsigned(sext_ln1245_8_fu_2406_p1));
    add_ln1245_9_fu_2436_p2 <= std_logic_vector(unsigned(shl_ln737_9_fu_2425_p3) + unsigned(sext_ln1245_9_fu_2433_p1));
    add_ln1245_fu_2193_p2 <= std_logic_vector(unsigned(shl_ln_fu_2182_p3) + unsigned(sext_ln1245_fu_2190_p1));
    add_ln47_fu_1661_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_1) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln47_fu_1655_p2)
    begin
        if (((icmp_ln47_fu_1655_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_302, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_k_1 <= k_fu_302;
        end if; 
    end process;

    codebook_V_0_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_0_ce0 <= ap_const_logic_1;
        else 
            codebook_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_10_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_10_ce0 <= ap_const_logic_1;
        else 
            codebook_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_11_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_11_ce0 <= ap_const_logic_1;
        else 
            codebook_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_12_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_12_ce0 <= ap_const_logic_1;
        else 
            codebook_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_13_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_13_ce0 <= ap_const_logic_1;
        else 
            codebook_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_14_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_14_ce0 <= ap_const_logic_1;
        else 
            codebook_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_15_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_15_ce0 <= ap_const_logic_1;
        else 
            codebook_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_16_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_16_ce0 <= ap_const_logic_1;
        else 
            codebook_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_17_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_17_ce0 <= ap_const_logic_1;
        else 
            codebook_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_18_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_18_ce0 <= ap_const_logic_1;
        else 
            codebook_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_19_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_19_ce0 <= ap_const_logic_1;
        else 
            codebook_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_1_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_1_ce0 <= ap_const_logic_1;
        else 
            codebook_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_20_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_20_ce0 <= ap_const_logic_1;
        else 
            codebook_V_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_21_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_21_ce0 <= ap_const_logic_1;
        else 
            codebook_V_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_22_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_22_ce0 <= ap_const_logic_1;
        else 
            codebook_V_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_23_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_23_ce0 <= ap_const_logic_1;
        else 
            codebook_V_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_24_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_24_ce0 <= ap_const_logic_1;
        else 
            codebook_V_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_25_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_25_ce0 <= ap_const_logic_1;
        else 
            codebook_V_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_26_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_26_ce0 <= ap_const_logic_1;
        else 
            codebook_V_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_27_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_27_ce0 <= ap_const_logic_1;
        else 
            codebook_V_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_28_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_28_ce0 <= ap_const_logic_1;
        else 
            codebook_V_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_29_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_29_ce0 <= ap_const_logic_1;
        else 
            codebook_V_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_2_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_2_ce0 <= ap_const_logic_1;
        else 
            codebook_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_30_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_30_ce0 <= ap_const_logic_1;
        else 
            codebook_V_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_31_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_31_ce0 <= ap_const_logic_1;
        else 
            codebook_V_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_32_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_32_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_32_ce0 <= ap_const_logic_1;
        else 
            codebook_V_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_3_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_3_ce0 <= ap_const_logic_1;
        else 
            codebook_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_4_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_4_ce0 <= ap_const_logic_1;
        else 
            codebook_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_5_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_5_ce0 <= ap_const_logic_1;
        else 
            codebook_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_6_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_6_ce0 <= ap_const_logic_1;
        else 
            codebook_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_7_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_7_ce0 <= ap_const_logic_1;
        else 
            codebook_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_8_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_8_ce0 <= ap_const_logic_1;
        else 
            codebook_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    codebook_V_9_address0 <= zext_ln47_fu_1667_p1(5 - 1 downto 0);

    codebook_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            codebook_V_9_ce0 <= ap_const_logic_1;
        else 
            codebook_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1789_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1798_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1807_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1816_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1825_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1834_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1843_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1852_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1861_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1870_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1879_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1888_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1897_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1906_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1915_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1924_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1933_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1942_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1951_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1960_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1969_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1978_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1987_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_1996_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2005_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2014_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2023_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2032_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2041_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2050_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2059_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2068_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    grp_fu_2077_p0 <= r_V_fu_1783_p1(30 - 1 downto 0);
    icmp_ln47_fu_1655_p2 <= "1" when (ap_sig_allocacmp_k_1 = ap_const_lv5_1F) else "0";
    r_V_1_fu_1710_p32 <= std_logic_vector(signed(ap_const_lv5_1E) - signed(ap_sig_allocacmp_k_1));
        r_V_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_reg_3645_pp0_iter1_reg),32));

        sext_ln1245_10_fu_2460_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_10_reg_4232),35));

        sext_ln1245_11_fu_2487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_11_reg_4237),35));

        sext_ln1245_12_fu_2514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_12_reg_4242),35));

        sext_ln1245_13_fu_2541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_13_reg_4247),35));

        sext_ln1245_14_fu_2568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_14_reg_4252),35));

        sext_ln1245_15_fu_2595_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_15_reg_4257),35));

        sext_ln1245_16_fu_2622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_16_reg_4262),35));

        sext_ln1245_17_fu_2649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_17_reg_4267),35));

        sext_ln1245_18_fu_2676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_18_reg_4272),35));

        sext_ln1245_19_fu_2703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_19_reg_4277),35));

        sext_ln1245_1_fu_2217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_1_reg_4187),35));

        sext_ln1245_20_fu_2730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_20_reg_4282),35));

        sext_ln1245_21_fu_2757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_21_reg_4287),35));

        sext_ln1245_22_fu_2784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_22_reg_4292),35));

        sext_ln1245_23_fu_2811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_23_reg_4297),35));

        sext_ln1245_24_fu_2838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_24_reg_4302),35));

        sext_ln1245_25_fu_2865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_25_reg_4307),35));

        sext_ln1245_26_fu_2892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_26_reg_4312),35));

        sext_ln1245_27_fu_2919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_27_reg_4317),35));

        sext_ln1245_28_fu_2946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_28_reg_4322),35));

        sext_ln1245_29_fu_2973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_29_reg_4327),35));

        sext_ln1245_2_fu_2244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_2_reg_4192),35));

        sext_ln1245_30_fu_3000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_30_reg_4332),35));

        sext_ln1245_31_fu_3027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_31_reg_4337),35));

        sext_ln1245_32_fu_3054_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_32_reg_4342),35));

        sext_ln1245_3_fu_2271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_3_reg_4197),35));

        sext_ln1245_4_fu_2298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_4_reg_4202),35));

        sext_ln1245_5_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_5_reg_4207),35));

        sext_ln1245_6_fu_2352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_6_reg_4212),35));

        sext_ln1245_7_fu_2379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_7_reg_4217),35));

        sext_ln1245_8_fu_2406_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_8_reg_4222),35));

        sext_ln1245_9_fu_2433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_9_reg_4227),35));

        sext_ln1245_fu_2190_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1171_reg_4182),35));

    shl_ln737_10_fu_2479_p3 <= (acc_V_11_3_fu_350 & ap_const_lv5_0);
    shl_ln737_11_fu_2506_p3 <= (acc_V_12_3_fu_354 & ap_const_lv5_0);
    shl_ln737_12_fu_2533_p3 <= (acc_V_13_3_fu_358 & ap_const_lv5_0);
    shl_ln737_13_fu_2560_p3 <= (acc_V_14_3_fu_362 & ap_const_lv5_0);
    shl_ln737_14_fu_2587_p3 <= (acc_V_15_3_fu_366 & ap_const_lv5_0);
    shl_ln737_15_fu_2614_p3 <= (acc_V_16_3_fu_370 & ap_const_lv5_0);
    shl_ln737_16_fu_2641_p3 <= (acc_V_17_3_fu_374 & ap_const_lv5_0);
    shl_ln737_17_fu_2668_p3 <= (acc_V_18_3_fu_378 & ap_const_lv5_0);
    shl_ln737_18_fu_2695_p3 <= (acc_V_19_3_fu_382 & ap_const_lv5_0);
    shl_ln737_19_fu_2722_p3 <= (acc_V_20_3_fu_386 & ap_const_lv5_0);
    shl_ln737_1_fu_2209_p3 <= (acc_V_1_3_fu_310 & ap_const_lv5_0);
    shl_ln737_20_fu_2749_p3 <= (acc_V_21_3_fu_390 & ap_const_lv5_0);
    shl_ln737_21_fu_2776_p3 <= (acc_V_22_3_fu_394 & ap_const_lv5_0);
    shl_ln737_22_fu_2803_p3 <= (acc_V_23_3_fu_398 & ap_const_lv5_0);
    shl_ln737_23_fu_2830_p3 <= (acc_V_24_3_fu_402 & ap_const_lv5_0);
    shl_ln737_24_fu_2857_p3 <= (acc_V_25_3_fu_406 & ap_const_lv5_0);
    shl_ln737_25_fu_2884_p3 <= (acc_V_26_3_fu_410 & ap_const_lv5_0);
    shl_ln737_26_fu_2911_p3 <= (acc_V_27_3_fu_414 & ap_const_lv5_0);
    shl_ln737_27_fu_2938_p3 <= (acc_V_28_3_fu_418 & ap_const_lv5_0);
    shl_ln737_28_fu_2965_p3 <= (acc_V_29_3_fu_422 & ap_const_lv5_0);
    shl_ln737_29_fu_2992_p3 <= (acc_V_30_3_fu_426 & ap_const_lv5_0);
    shl_ln737_2_fu_2236_p3 <= (acc_V_2_3_fu_314 & ap_const_lv5_0);
    shl_ln737_30_fu_3019_p3 <= (acc_V_31_3_fu_430 & ap_const_lv5_0);
    shl_ln737_31_fu_3046_p3 <= (acc_V_32_3_fu_434 & ap_const_lv5_0);
    shl_ln737_3_fu_2263_p3 <= (acc_V_3_3_fu_318 & ap_const_lv5_0);
    shl_ln737_4_fu_2290_p3 <= (acc_V_4_3_fu_322 & ap_const_lv5_0);
    shl_ln737_5_fu_2317_p3 <= (acc_V_5_3_fu_326 & ap_const_lv5_0);
    shl_ln737_6_fu_2344_p3 <= (acc_V_6_3_fu_330 & ap_const_lv5_0);
    shl_ln737_7_fu_2371_p3 <= (acc_V_7_3_fu_334 & ap_const_lv5_0);
    shl_ln737_8_fu_2398_p3 <= (acc_V_8_3_fu_338 & ap_const_lv5_0);
    shl_ln737_9_fu_2425_p3 <= (acc_V_9_3_fu_342 & ap_const_lv5_0);
    shl_ln737_s_fu_2452_p3 <= (acc_V_10_3_fu_346 & ap_const_lv5_0);
    shl_ln_fu_2182_p3 <= (acc_V_0_3_fu_306 & ap_const_lv5_0);
    zext_ln47_fu_1667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_k_1),64));
end behav;
